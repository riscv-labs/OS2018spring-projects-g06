//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: lseek read
 */
static int test_lseek_read_pfc_0_0(void) {
  int r = lseek(10, 0, 999);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_read_pfc_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_lseek_read_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pfc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pfc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pfc_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_lseek_read_pfc_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_pfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc0
// static void setup_lseek_read_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
static void setup_lseek_read_pfc_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_lseek_read_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_pfc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pfc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pfc_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pfc_2_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
  close(22);
  close(23);
}
static void setup_lseek_read_pfc_2_procfinal(void) {
  close(20);
  close(21);
  close(22);
  close(23);
}

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pfc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_2_common
static void setup_lseek_read_pfc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pfc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pfc_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pfc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
static void setup_lseek_read_pfc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfc_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfc_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_pfc_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pfc_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_3_proc0
// static void setup_lseek_read_pfc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
static void setup_lseek_read_pfc_5_final(void) {
  unlink("__i0");
  close(20);
  close(21);
  close(22);
  close(23);
}
// static void setup_lseek_read_pfc_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pfc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_5_common
// static void setup_lseek_read_pfc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc0
// static void setup_lseek_read_pfc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pfc_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pfc_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pfc_7_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_lseek_read_pfc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
static void setup_lseek_read_pfc_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfc_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfc_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfc_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfc_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pfc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_1_common
// static void setup_lseek_read_pfc_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_4_proc0
// static void setup_lseek_read_pfc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfc_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pfc_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pfb_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, -1);
  expect_errno(11);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_lseek_read_pfb_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pfb_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
static void setup_lseek_read_pfb_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pfb_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pfb_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pfb_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
static void setup_lseek_read_pfb_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pfb_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_1_proc0
// static void setup_lseek_read_pfb_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pfb_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pfb_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_pfb_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_1_common
static void setup_lseek_read_pfb_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfb_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pfb_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pfb_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_pfb_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_2_common
// static void setup_lseek_read_pfb_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_3_proc0
// static void setup_lseek_read_pfb_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pfb_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pfb_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pfb_5_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(11);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_lseek_read_pfb_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_pfb_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfb_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfb_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfb_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
static void setup_lseek_read_pfb_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pfb_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_0_proc0
// static void setup_lseek_read_pfb_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfb_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pfb_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_pfb_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_pfb_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfb_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfb_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfb_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfb_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfb_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_pfb_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pfb_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_7_proc0
// static void setup_lseek_read_pfb_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfb_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pfb_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pfa_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_lseek_read_pfa_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_1_common
static void setup_lseek_read_pfa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pfa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfa_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pfa_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pfa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pfa_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_0_proc0
// static void setup_lseek_read_pfa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfa_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pfa_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfa_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pfa_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_2_common
// static void setup_lseek_read_pfa_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_0_proc0
// static void setup_lseek_read_pfa_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_0_proc1
// static void setup_lseek_read_pfa_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pfa_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfa_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_pfa_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pfa_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_0_proc0
// static void setup_lseek_read_pfa_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pfa_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfa_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfa_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pfa_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_2_common
static void setup_lseek_read_pfa_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfa_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_0_proc1
// static void setup_lseek_read_pfa_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pfa_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pfa_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_pfa_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pfa_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_4_proc0
// static void setup_lseek_read_pfa_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_0_proc1
// static void setup_lseek_read_pfa_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pfa_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pfa_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pfa_6_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_lseek_read_pfa_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_pfa_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pfa_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pfa_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pfa_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pf8_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_lseek_read_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_0_proc0
// static void setup_lseek_read_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_0_proc0
// static void setup_lseek_read_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_1_proc0
// static void setup_lseek_read_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pf8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pf8_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pf8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_7_proc0
// static void setup_lseek_read_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pf8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pf8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_7_proc0
// static void setup_lseek_read_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pf8_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_2_common
// static void setup_lseek_read_pf8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_3_proc0
// static void setup_lseek_read_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pf8_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pf8_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf8_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_1_proc0
// static void setup_lseek_read_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pf8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pf8_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pf8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_6_common
// static void setup_lseek_read_pf8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_3_proc0
// static void setup_lseek_read_pf8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_2_proc1
// static void setup_lseek_read_pf8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pf8_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf8_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
static int test_lseek_read_pf8_8_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_lseek_read_pf8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pf8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pf8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf8_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf8_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_pf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_pf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pf4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
static void setup_lseek_read_pf4_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_lseek_read_pf4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf4_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pf4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_1_common
static void setup_lseek_read_pf4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pf4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf4_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pf4_1_final
// static void setup_lseek_read_pf4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf4_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pf4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
static void setup_lseek_read_pf4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pf4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf4_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pf4_0_proc0
// static void setup_lseek_read_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf0_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pf4_1_proc0
// static void setup_lseek_read_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pf0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf0_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf0_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pf4_3_proc0
// static void setup_lseek_read_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pf0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pf0_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pf0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pf0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pf0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pf4_2_proc0
// static void setup_lseek_read_pf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pf0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pf4_1_final
// static void setup_lseek_read_pf0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pe_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pe_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pe_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_pe_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pe_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pe_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_pe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pe_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_pdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pdc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_5_common
static void setup_lseek_read_pdc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pdc_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pdc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pdc_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_1_common
// static void setup_lseek_read_pdc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pdc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_2_common
// static void setup_lseek_read_pdc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc0
// static void setup_lseek_read_pdc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc1
// static void setup_lseek_read_pdc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pdc_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_1_common
// static void setup_lseek_read_pdc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdc_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pdc_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_2_common
static void setup_lseek_read_pdc_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pdc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc1
// static void setup_lseek_read_pdc_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pdc_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_pdc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdc_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pdc_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdc_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdc_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pdc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_5_common
// static void setup_lseek_read_pdc_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_5_proc0
// static void setup_lseek_read_pdc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc1
// static void setup_lseek_read_pdc_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pdc_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_pdb_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pdb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pdb_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdb_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pdb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_2_common
// static void setup_lseek_read_pdb_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc0
static void setup_lseek_read_pdb_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pdb_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pdb_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_pdb_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdb_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdb_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pdb_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pdb_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pdb_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pdb_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pdb_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_2_common
// static void setup_lseek_read_pdb_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_5_proc0
// static void setup_lseek_read_pdb_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pdb_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pdb_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_1_common
// static void setup_lseek_read_pdb_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc0
// static void setup_lseek_read_pdb_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pdb_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pdb_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pdb_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pdb_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pdb_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_1_common
// static void setup_lseek_read_pdb_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_5_proc0
// static void setup_lseek_read_pdb_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pdb_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pdb_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pda_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pda_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pda_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_5_common
static void setup_lseek_read_pda_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_read_pda_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pda_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pda_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pda_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pda_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
static void setup_lseek_read_pda_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pda_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pda_0_proc0
// static void setup_lseek_read_pda_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pda_0_proc1
// static void setup_lseek_read_pda_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pda_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pda_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pda_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pda_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_1_common
static void setup_lseek_read_pda_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pda_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pda_0_proc1
// static void setup_lseek_read_pda_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pda_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pda_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pda_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
static void setup_lseek_read_pda_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pda_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pda_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pda_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pda_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pda_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pda_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pda_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_5_common
// static void setup_lseek_read_pda_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pda_2_proc0
// static void setup_lseek_read_pda_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pda_0_proc1
// static void setup_lseek_read_pda_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pda_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pda_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pda_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pda_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_pda_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pda_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pda_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pda_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_6_common
// static void setup_lseek_read_pd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc0
// static void setup_lseek_read_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pd8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pd8_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_2_common
// static void setup_lseek_read_pd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_1_proc0
// static void setup_lseek_read_pd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pd8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pd8_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_6_common
// static void setup_lseek_read_pd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_5_proc0
// static void setup_lseek_read_pd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pd8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_5_final
// static void setup_lseek_read_pd8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_2_common
// static void setup_lseek_read_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdc_5_proc0
// static void setup_lseek_read_pd8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pdb_2_proc1
// static void setup_lseek_read_pd8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_final
// static void setup_lseek_read_pd8_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_read_pfc_2_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pd8_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pd8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pd8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pd8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pd8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd8_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pd8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pd8_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pd8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
static void setup_lseek_read_pd4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
static void setup_lseek_read_pd4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pd4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pd4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
static void setup_lseek_read_pd4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
static void setup_lseek_read_pd4_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pd4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pf4_1_final
// static void setup_lseek_read_pd4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd4_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pd4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pd4_1_common
// static void setup_lseek_read_pd4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pd4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd4_1_proc1
// static void setup_lseek_read_pd4_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pf4_1_final
// static void setup_lseek_read_pd4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd4_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pd4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pd4_0_common
// static void setup_lseek_read_pd4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pd4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd4_0_proc1
// static void setup_lseek_read_pd4_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pd4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_pd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
static void setup_lseek_read_pd0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pd0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd0_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf0_2_common
// static void setup_lseek_read_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
static void setup_lseek_read_pd0_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pd0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pd0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd0_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf0_2_common
// static void setup_lseek_read_pd0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_pd0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pd0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pd0_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pd0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pd0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf0_3_common
// static void setup_lseek_read_pd0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_0_proc1
// static void setup_lseek_read_pd0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pf4_1_final
// static void setup_lseek_read_pd0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pc_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_pc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_pc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_pc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_pbf_0_0(void) {
  int r = lseek(10, -4096, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_pbf_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_pbf_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_pbf_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pbf_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pbf_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pbf_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbf_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbf_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_pbf_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_pbf_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbf_0_proc0
// static void setup_lseek_read_pbf_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pbf_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pbf_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbec_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbec_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_pbec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_pbec_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pbec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pbec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pbec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbec_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbec_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_pbec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pbec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_pbec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pbec_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pbec_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbe8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbe8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pbe8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_pbe8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pbe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_pbe8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pbe8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbe8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbe8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pbe8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_pbe8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbe8_0_proc0
// static void setup_lseek_read_pbe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_pbe8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pbe8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbe0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbe0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pbe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pbe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_pbe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pbe0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pbe0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbe0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbe0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pbe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pbe0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_pbe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pbe0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pbe0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbd_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbd_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_pbd_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_lseek_read_pbd_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_read_pbd_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_lseek_read_pbd_0_final(void) {
  unlink("__i0");
}
static void setup_lseek_read_pbd_0_procfinal(void) {
  
}

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbd_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbd_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_pbd_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_lseek_read_pbd_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pbd_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
static void setup_lseek_read_pbd_1_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_lseek_read_pbd_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbd_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbd_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pbd_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_pbd_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pbd_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pbd_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pbd_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbd_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbd_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pbd_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_pbd_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pbd_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pbd_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pbd_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbc0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbc0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pbc0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_pbc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_pbc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pbc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pbc0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbc0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbc0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pbc0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_pbc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_proc0
// static void setup_lseek_read_pbc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pbc0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pbc0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbc0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbc0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pbc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
static void setup_lseek_read_pbc0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pbc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pbc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pbc0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pbc0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pbc0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pbc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_pbc0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pbc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pbc0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pbc0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_pb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb7_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb7_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pb7_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pbf_0_common
static void setup_lseek_read_pb7_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pb7_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pb7_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pb7_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb7_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb7_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pb7_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pbf_1_common
// static void setup_lseek_read_pb7_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb7_0_proc0
// static void setup_lseek_read_pb7_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pb7_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pb7_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb6c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb6c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pb6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_pb6c_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pb6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pb6c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pb6c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb6c_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb6c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pb6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pb6c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pb6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pb6c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pb6c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb68_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pb68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_pb68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pb68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pb68_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pb68_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb68_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb68_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pb68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_pb68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_pb68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pb68_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pb68_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb60_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb60_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pb60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pb60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pb60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pb60_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pb60_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb60_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb60_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pb60_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pb60_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pb60_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pb60_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pb60_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb5_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb5_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pb5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_pb5_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_read_pb5_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pb5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pb5_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb5_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb5_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pb5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_pb5_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_read_pb5_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pb5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pb5_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb5_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb5_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pb5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_pb5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
static void setup_lseek_read_pb5_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pb5_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pb5_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb40_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb40_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pb40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_pb40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pb40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pb40_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pb40_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb40_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb40_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_pb40_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_pb40_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_read_pb40_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pb40_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pb40_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb40_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb40_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_pb40_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_pb40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
static void setup_lseek_read_pb40_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pb40_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pb40_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pb0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pbf_0_0
// static int test_lseek_read_pb0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
// static void setup_lseek_read_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_proc0
// static void setup_lseek_read_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_paf_0_0(void) {
  int r = lseek(10, 0, SEEK_SET);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_read_paf_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_paf_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_paf_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_paf_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paf_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_paf_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_paf_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_paf_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_paf_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_paf_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_0_proc0
// static void setup_lseek_read_paf_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paf_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_paf_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_paf_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_paf_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_paf_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
static void setup_lseek_read_paf_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_paf_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paf_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_paf_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_paf_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_paf_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_paf_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_paf_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_paf_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paf_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_paf_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_paec_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_paec_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_paec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_paec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_paec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_paec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_paec_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_paec_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_paec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_paec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_paec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paec_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_paec_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_paec_2_0(void) {
  int r = lseek(10, 31617024, SEEK_SET);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static int test_lseek_read_paec_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_paec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_paec_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_paec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paec_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_paec_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_paec_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_paec_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_paec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_paec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paec_2_proc0
// static void setup_lseek_read_paec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_paec_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_paec_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pae8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pae8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_pae8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pae8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_pae8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pae8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pae8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pae8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_pae8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbe8_0_proc0
// static void setup_lseek_read_pae8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_pae8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pae8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae8_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pae8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pae8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
static void setup_lseek_read_pae8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pae8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_pae8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pae8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae8_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pae8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pae8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_pae8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_2_proc0
// static void setup_lseek_read_pae8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_pae8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pae8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pae0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pae0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pae0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_pae0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pae0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pae0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pae0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pae0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pae0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_pae0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pae0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pae0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae0_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pae0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pae0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
static void setup_lseek_read_pae0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pae0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pae0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pae0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pae0_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pae0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pae0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pae0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_pae0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_pae0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pae0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pad8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pad8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pad8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_pad8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pad8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pad8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_pad8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_pad8_2_0(void) {
  int r = lseek(10, 4096, SEEK_SET);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_read_pad8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pad8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_pad8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_3_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pad8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pad8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_2_proc0
// static void setup_lseek_read_pad8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pad8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
static void setup_lseek_read_pad8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pad8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pad8_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pad8_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_pad8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pad8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pad8_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pad8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_2_proc0
// static void setup_lseek_read_pad8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_7_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pad8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_pad8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_pad8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pad8_4_proc0
// static void setup_lseek_read_pad8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pad8_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pad8_8_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pad8_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pad8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pad8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pad8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pad8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pad8_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pac4_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pac4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pac4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
static void setup_lseek_read_pac4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pac4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pac4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pac4_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pac4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pac4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_pac4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pac4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pac4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pac4_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pac4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pac4_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_pac4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
static void setup_lseek_read_pac4_2_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_lseek_read_pac4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_pac4_3_0(void) {
  int r = lseek(10, 5062656, SEEK_SET);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static int test_lseek_read_pac4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pac4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
static void setup_lseek_read_pac4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pac4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pac4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pac4_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pac4_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pac4_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_pac4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pac4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pac4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_pac4_5_0(void) {
  int r = lseek(10, 12288, SEEK_SET);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_read_pac4_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_pac4_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_pac4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pac4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pac4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pac4_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pac4_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_pac4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
static void setup_lseek_read_pac4_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pac4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pac4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pac4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
static void setup_lseek_read_pa8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa7_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa7_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pa7_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_pa7_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pa7_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pa7_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa7_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa7_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa7_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pa7_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_pa7_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pa7_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pa7_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa7_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa7_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa7_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pa7_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_pa7_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_pa7_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pa7_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa7_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa7_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa7_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pa7_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_pa7_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_pa7_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_pa7_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa7_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa6c_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa6c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pa6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_pa6c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pa6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa6c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa6c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa6c_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa6c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pa6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pa6c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pa6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa6c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa6c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa6c_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pa6c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pa6c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_pa6c_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pa6c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa6c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa6c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa6c_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pa6c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_pa6c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_pa6c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa6c_2_proc0
// static void setup_lseek_read_pa6c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa6c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa6c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa68_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_pa68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_pa68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pa68_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa68_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa68_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa68_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_pa68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_pa68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pa68_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa68_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa68_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pa68_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa68_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_pa68_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_pa68_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pa68_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa68_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa68_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paec_2_0
// static int test_lseek_read_pa68_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa68_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_pa68_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa68_2_proc0
// static void setup_lseek_read_pa68_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_pa68_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa68_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa60_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa60_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pa60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pa60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa60_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa60_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa60_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa60_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa60_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pa60_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_pa60_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa60_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa60_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa60_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa60_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa60_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_pa60_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_pa60_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa60_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_pa60_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa60_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa60_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa60_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_pa60_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_pa60_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_pa60_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_pa60_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa5_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa5_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pa5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_pa5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_pa5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa5_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa5_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa5_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pa5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc0
// static void setup_lseek_read_pa5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_pa5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa5_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_pa5_2_0(void) {
  int r = lseek(10, 151552, SEEK_SET);
  expect_result("r", r, 151552);
  return xerrno(r);
}
// static int test_lseek_read_pa5_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_pa5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
static void setup_lseek_read_pa5_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pa5_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pa5_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa5_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa5_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_pa5_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_pa5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa5_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa5_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa5_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa5_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pa5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_pa5_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa5_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa5_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa5_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_pa5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_2_proc1
// static void setup_lseek_read_pa5_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pa5_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa5_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa5_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_pa5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_pa5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa5_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa5_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa40_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa40_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_pa40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa40_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa40_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa40_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa40_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_2_common
// static void setup_lseek_read_pa40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_pa40_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_2_proc1
// static void setup_lseek_read_pa40_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_pa40_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_pa40_2_0(void) {
  int r = lseek(10, 8192, SEEK_SET);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_read_pa40_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_pa40_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_pa40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_pa40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_2_proc1
// static void setup_lseek_read_pa40_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_pa40_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa40_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa40_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_pa40_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_pa40_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_pa40_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_pa40_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa40_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa40_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pa40_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa40_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_pa40_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_pa40_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa40_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa40_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa40_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pa40_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa40_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_pa40_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa40_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_pa40_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa40_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa40_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pad8_2_0
// static int test_lseek_read_pa40_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_pa40_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_pa40_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa40_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa40_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa40_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_pa0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_paf_0_0
// static int test_lseek_read_pa0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_pa0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_pa0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9f8_0_0(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p9f8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p9f8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_p9f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p9f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p9f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9f8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9f8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p9f8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_p9f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p9f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p9f8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9f6_0_0(void) {
  int r = lseek(10, -31621120, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p9f6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
static void setup_lseek_read_p9f6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_p9f6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paec_2_proc0
// static void setup_lseek_read_p9f6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p9f6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9f6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9f6_1_0(void) {
  int r = lseek(10, -5066752, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p9f6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
static void setup_lseek_read_p9f6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_p9f6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p9f6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p9f6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9f6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9f4_0_0(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f6_0_0
// static int test_lseek_read_p9f4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p9f4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_p9f4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_2_proc0
// static void setup_lseek_read_p9f4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p9f4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9f4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9f4_1_0(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f6_0_0
// static int test_lseek_read_p9f4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p9f4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p9f4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_2_proc0
// static void setup_lseek_read_p9f4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p9f4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9f4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9f0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9f0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p9f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_p9f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p9f0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9f0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9f0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9f0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p9f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_p9f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p9f0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9f0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9e8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9e8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p9e8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_1_common
static void setup_lseek_read_p9e8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9e8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9e8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9e8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9e8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p9e8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_p9e8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_proc0
// static void setup_lseek_read_p9e8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p9e8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9e8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9e8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p9e8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p9e8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9e8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9e8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9e8_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9e8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p9e8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p9e8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_p9e8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9e8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9e4_0_0(void) {
  int r = lseek(10, -8192, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p9e4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p9e4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
// static void setup_lseek_read_p9e4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9e4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9e4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9e4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9e4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p9e4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p9e4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9e4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9e4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9e4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9e4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9e4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p9e4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_p9e4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9e4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9e4_3_0(void) {
  int r = lseek(10, -20480, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p9e4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p9e4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p9e4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9e4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9e4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p9e4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p9c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p9c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9b8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p9b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_p9b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p9b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p9b8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9b8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9b8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p9b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_p9b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p9b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p9b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9b8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b6_0_0(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f6_0_0
// static int test_lseek_read_p9b6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p9b6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p9f6_0_common
// static void setup_lseek_read_p9b6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa6c_2_proc0
// static void setup_lseek_read_p9b6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p9b6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9b6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b6_1_0(void) {
//   int r = lseek(10, -5066752, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f6_1_0
// static int test_lseek_read_p9b6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p9b6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p9f6_1_common
static void setup_lseek_read_p9b6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p9b6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p9b6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9b6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b4_0_0(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f6_0_0
// static int test_lseek_read_p9b4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p9b4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_p9b4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa68_2_proc0
// static void setup_lseek_read_p9b4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p9b4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9b4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b4_1_0(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f6_0_0
// static int test_lseek_read_p9b4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p9b4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p9b4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa68_2_proc0
// static void setup_lseek_read_p9b4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p9b4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9b4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9b0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p9b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p9b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p9b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p9b0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p9b0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9b0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9b0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p9b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p9b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p9b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p9b0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p9b0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9a8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9a8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p9a8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p9a8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p9a8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9a8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9a8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9a8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p9a8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p9a8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9a8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9a8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9a8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p9a8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_p9a8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
static void setup_lseek_read_p9a8_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9a8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p9a8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9a0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9a0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p9a0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_1_common
// static void setup_lseek_read_p9a0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_1_proc1
// static void setup_lseek_read_p9a0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9a0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9a0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9a0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p9a0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p9a0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9a0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9a0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p9a0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p9a0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_2_common
// static void setup_lseek_read_p9a0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p9a0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p9a8_2_proc1
// static void setup_lseek_read_p9a0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p9a0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p98_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9f8_0_0
// static int test_lseek_read_p98_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p98_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p978_0_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_read_p978_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p978_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_p978_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p978_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p978_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p978_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p978_1_0(void) {
  int r = lseek(10, 4096, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_read_p978_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p978_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_p978_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p978_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p978_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p978_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p978_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p978_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p978_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_p978_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p978_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p978_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p978_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p978_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p978_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p978_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_p978_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p978_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p978_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p978_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p976_0_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 155648);
  return xerrno(r);
}
// static int test_lseek_read_p976_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p976_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_p976_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p976_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p976_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p976_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p976_1_0(void) {
  int r = lseek(10, 31621120, SEEK_CUR);
  expect_result("r", r, 63238144);
  return xerrno(r);
}
// static int test_lseek_read_p976_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p976_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p976_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paec_2_proc0
// static void setup_lseek_read_p976_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p976_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p976_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p976_2_0(void) {
  int r = lseek(10, 9981952, SEEK_CUR);
  expect_result("r", r, 19963904);
  return xerrno(r);
}
// static int test_lseek_read_p976_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p976_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_p976_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p976_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p976_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p976_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p976_3_0(void) {
//   int r = lseek(10, 9981952, SEEK_CUR);
//   expect_result("r", r, 19963904);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p976_2_0
// static int test_lseek_read_p976_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p976_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p976_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p976_2_proc0
// static void setup_lseek_read_p976_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p976_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p976_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p974_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 155648);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p976_0_0
// static int test_lseek_read_p974_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p974_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_p974_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p974_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p974_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p974_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p974_1_0(void) {
  int r = lseek(10, 151552, SEEK_CUR);
  expect_result("r", r, 307200);
  return xerrno(r);
}
// static int test_lseek_read_p974_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_p974_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_p974_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p974_0_proc0
// static void setup_lseek_read_p974_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p974_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p974_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p974_2_0(void) {
  int r = lseek(10, 31617024, SEEK_CUR);
  expect_result("r", r, 63234048);
  return xerrno(r);
}
// static int test_lseek_read_p974_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p974_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_p974_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_2_proc0
// static void setup_lseek_read_p974_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p974_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p974_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p974_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p974_2_0
// static int test_lseek_read_p974_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p974_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p974_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_2_proc0
// static void setup_lseek_read_p974_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p974_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p974_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p970_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p970_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p970_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p970_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_p970_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p970_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p970_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p970_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p970_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p970_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p970_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_p970_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p970_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p970_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p970_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p970_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p970_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p970_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_p970_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p970_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p970_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p970_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p970_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p970_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p970_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae0_2_proc0
// static void setup_lseek_read_p970_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p970_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p970_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p96c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p96c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p96c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p96c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p96c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p96c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p96c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p96c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p96c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p96c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p9e8_0_proc0
// static void setup_lseek_read_p96c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p96c_3_0(void) {
  int r = lseek(10, 31621120, SEEK_CUR);
  expect_result("r", r, 63242240);
  return xerrno(r);
}
// static int test_lseek_read_p96c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
static void setup_lseek_read_p96c_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p96c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p96c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p96c_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_p96c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_proc0
// static void setup_lseek_read_p96c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p96c_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_5_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p96c_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p96c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_p96c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p96c_6_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_read_p96c_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p96c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_2_proc0
// static void setup_lseek_read_p96c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_7_0(void) {
//   int r = lseek(10, 31621120, SEEK_CUR);
//   expect_result("r", r, 63242240);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p96c_3_0
// static int test_lseek_read_p96c_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_p96c_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p96c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p96c_8_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p96c_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p96c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p96c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_p96c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p96c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p96c_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9630_0_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static int test_lseek_read_p9630_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9630_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
static void setup_lseek_read_p9630_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9630_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9630_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9630_1_0(void) {
  int r = lseek(10, 28672, SEEK_CUR);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static int test_lseek_read_p9630_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p9630_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p9630_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9630_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p9630_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9630_2_0(void) {
  int r = lseek(10, 16384, SEEK_CUR);
  expect_result("r", r, 32768);
  return xerrno(r);
}
// static int test_lseek_read_p9630_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9630_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_1_common
static void setup_lseek_read_p9630_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9630_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9630_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9630_3_0(void) {
  int r = lseek(10, 28672, SEEK_CUR);
  expect_result("r", r, 57344);
  return xerrno(r);
}
// static int test_lseek_read_p9630_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9630_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_1_common
static void setup_lseek_read_p9630_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9630_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p9630_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9630_4_0(void) {
  int r = lseek(10, 20480, SEEK_CUR);
  expect_result("r", r, 45056);
  return xerrno(r);
}
// static int test_lseek_read_p9630_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9630_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_5_common
static void setup_lseek_read_p9630_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9630_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9630_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p9630_5_0(void) {
  int r = lseek(10, 20480, SEEK_CUR);
  expect_result("r", r, 36864);
  return xerrno(r);
}
// static int test_lseek_read_p9630_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9630_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_5_common
static void setup_lseek_read_p9630_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p9630_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9630_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p9630_6_0(void) {
//   int r = lseek(10, 16384, SEEK_CUR);
//   expect_result("r", r, 32768);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p9630_2_0
// static int test_lseek_read_p9630_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p9630_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_5_common
// static void setup_lseek_read_p9630_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p9630_5_proc0
// static void setup_lseek_read_p9630_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p9630_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p9630_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p94_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p94_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p94_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p94_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p94_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p94_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p94_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p94_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p938_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p938_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p938_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_p938_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p938_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p938_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p938_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p938_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p938_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p938_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_0_common
// static void setup_lseek_read_p938_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p938_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p938_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p938_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p938_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p938_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p938_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_p938_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p938_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p938_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p938_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p938_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p938_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p938_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_paf_1_common
// static void setup_lseek_read_p938_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p938_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p938_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p938_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p936_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 155648);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p976_0_0
// static int test_lseek_read_p936_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p936_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_p936_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd4_0_proc1
// static void setup_lseek_read_p936_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p936_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p936_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p936_1_0(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_read_p936_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p936_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
static void setup_lseek_read_p936_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p936_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p936_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p936_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p936_2_0(void) {
//   int r = lseek(10, 9981952, SEEK_CUR);
//   expect_result("r", r, 19963904);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p976_2_0
// static int test_lseek_read_p936_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p936_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_p936_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p936_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p936_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p936_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p936_3_0(void) {
//   int r = lseek(10, 9981952, SEEK_CUR);
//   expect_result("r", r, 19963904);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p976_2_0
// static int test_lseek_read_p936_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p936_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p936_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p936_2_proc0
// static void setup_lseek_read_p936_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p936_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p936_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p934_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 155648);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p976_0_0
// static int test_lseek_read_p934_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p934_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_p934_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p934_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p934_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p934_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p934_1_0(void) {
  int r = lseek(10, 159744, SEEK_CUR);
  expect_result("r", r, 315392);
  return xerrno(r);
}
// static int test_lseek_read_p934_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p934_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p934_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p934_0_proc0
// static void setup_lseek_read_p934_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p934_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p934_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p934_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p974_2_0
// static int test_lseek_read_p934_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p934_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_p934_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa68_2_proc0
// static void setup_lseek_read_p934_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p934_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p934_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p934_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p974_2_0
// static int test_lseek_read_p934_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p934_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p934_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa68_2_proc0
// static void setup_lseek_read_p934_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p934_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p934_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p930_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p930_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p930_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p930_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p930_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p930_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p930_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p930_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p930_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p930_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p930_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p930_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p930_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p930_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p930_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p930_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p930_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p930_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p930_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p930_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p930_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p930_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p930_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p930_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p930_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p930_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p930_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p930_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p928_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p928_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p928_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p928_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p928_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p928_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p928_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p928_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p928_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p928_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p928_2_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_read_p928_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p928_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p928_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p928_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p928_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p928_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p928_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p928_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p928_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p928_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_p928_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p9a8_2_proc1
// static void setup_lseek_read_p928_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p928_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p928_5_0(void) {
  int r = lseek(10, 151552, SEEK_CUR);
  expect_result("r", r, 303104);
  return xerrno(r);
}
// static int test_lseek_read_p928_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
static void setup_lseek_read_p928_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p928_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_2_proc1
// static void setup_lseek_read_p928_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p928_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p928_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p928_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p928_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p928_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p928_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p928_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p920_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p920_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p920_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_p9e4_1_common
// static void setup_lseek_read_p920_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
static void setup_lseek_read_p920_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p920_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p920_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p920_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p936_1_0
// static int test_lseek_read_p920_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_p920_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_p920_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
static void setup_lseek_read_p920_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p920_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p920_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p920_2_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_read_p920_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p920_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pa40_3_common
// static void setup_lseek_read_p920_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p920_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p920_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p920_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p920_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p96c_6_0
// static int test_lseek_read_p920_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p920_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p920_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p920_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p920_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p920_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p920_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p936_1_0
// static int test_lseek_read_p920_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p920_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p920_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p920_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p920_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p920_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p920_5_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 16384);
  return xerrno(r);
}
// static int test_lseek_read_p920_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p920_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_p9e4_3_common
// static void setup_lseek_read_p920_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
static void setup_lseek_read_p920_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p920_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p920_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p920_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p920_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p920_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p920_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p920_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p920_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p920_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p90_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_0_0
// static int test_lseek_read_p90_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p90_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p90_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p978_1_0
// static int test_lseek_read_p90_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p90_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8fc_0_0(void) {
  int r = lseek(10, -4096, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p8fc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8fc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
// static void setup_lseek_read_p8fc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_0_proc0
// static void setup_lseek_read_p8fc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8fc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8fc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8fc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8fc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_p8fc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_p8fc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_0_proc0
// static void setup_lseek_read_p8fc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8fc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8fc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8fb_0_0(void) {
  int r = lseek(10, -28672, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p8fb_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
static void setup_lseek_read_p8fb_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_p8fb_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p8fb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8fb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8fb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8fb_1_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fb_0_0
// static int test_lseek_read_p8fb_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p8fb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p8fb_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 34263040, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p8fb_0_proc0
// static void setup_lseek_read_p8fb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8fb_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8fb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8fa_0_0(void) {
  int r = lseek(10, -32768, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p8fa_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_p8fa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_read_p8fa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p8fa_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p8fa_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8fa_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8fa_1_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fa_0_0
// static int test_lseek_read_p8fa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8fa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p9f6_1_common
// static void setup_lseek_read_p8fa_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p8fa_0_proc0
// static void setup_lseek_read_p8fa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p8fa_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8fa_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p8f8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_p8f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p8f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p8f8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_read_p8f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p8f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8f8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f4_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
static void setup_lseek_read_p8f4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p8f4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8f4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8f4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8f4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_p8f4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8f4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8f4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8f4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8f4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p96c_7_proc0
// static void setup_lseek_read_p8f4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8f4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f4_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8f4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8f4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p8f4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8f4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8f0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_p8f4_0_common
static void setup_lseek_read_p8f0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8f0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8f0_1_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fa_0_0
// static int test_lseek_read_p8f0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
// static void setup_lseek_read_p8f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_0_proc0
// static void setup_lseek_read_p8f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8f0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8f0_2_0(void) {
  int r = lseek(10, -12288, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p8f0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8f0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
static void setup_lseek_read_p8f0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8f0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8f0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8f0_3_0(void) {
  int r = lseek(10, -8192, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p8f0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p8f0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p8f0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p8f0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8f0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8f0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8e_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_p8e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8e_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8dc_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8dc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p8dc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
// static void setup_lseek_read_p8dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p8dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p8dc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8dc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8dc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p8dc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fc_1_common
// static void setup_lseek_read_p8dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p8dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p8dc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8db_0_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fb_0_0
// static int test_lseek_read_p8db_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p8db_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
static void setup_lseek_read_p8db_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p8db_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p8db_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8db_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8db_1_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fb_0_0
// static int test_lseek_read_p8db_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p8db_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p8db_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 34263040, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p8db_0_proc0
// static void setup_lseek_read_p8db_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p8db_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8db_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8da_0_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fa_0_0
// static int test_lseek_read_p8da_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8da_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fa_0_common
// static void setup_lseek_read_p8da_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_p8da_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p8da_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8da_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8da_1_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fa_0_0
// static int test_lseek_read_p8da_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8da_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p9f6_1_common
// static void setup_lseek_read_p8da_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_p8da_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p8da_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8da_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8d8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p8d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_0_common
// static void setup_lseek_read_p8d8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p8d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p8d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8d8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p8d8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_1_common
// static void setup_lseek_read_p8d8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p8d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p8d8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d4_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8d4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
static void setup_lseek_read_p8d4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_lseek_read_p8d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p8d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_2_proc1
// static void setup_lseek_read_p8d4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8d4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8d4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8d4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p8d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p8d4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8d4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8d4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8d4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8d4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc0
// static void setup_lseek_read_p8d4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p8d4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8d4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8d0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p8d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_p8f4_0_common
// static void setup_lseek_read_p8d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb40_1_proc1
static void setup_lseek_read_p8d0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8d0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8d0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8d0_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8f0_3_0
// static int test_lseek_read_p8d0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p8d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p8d0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p8d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p8d0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8d0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8d0_2_0(void) {
  int r = lseek(10, -24576, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_read_p8d0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p8d0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_5_common
// static void setup_lseek_read_p8d0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p920_0_proc1
static void setup_lseek_read_p8d0_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8d0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8d0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8fc_0_0
// static int test_lseek_read_p8c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8bc_0_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_read_p8bc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8bc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
// static void setup_lseek_read_p8bc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_0_proc0
// static void setup_lseek_read_p8bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8bc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8bc_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8bc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8bc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fc_1_common
// static void setup_lseek_read_p8bc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_0_proc0
// static void setup_lseek_read_p8bc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8bc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8bc_2_0(void) {
  int r = lseek(10, 31617024, SEEK_END);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static int test_lseek_read_p8bc_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8bc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fc_1_common
static void setup_lseek_read_p8bc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p8bc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8bc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8bc_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p8bc_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8bc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
// static void setup_lseek_read_p8bc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p8bc_2_proc0
// static void setup_lseek_read_p8bc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bc_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8bc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8bb_0_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static int test_lseek_read_p8bb_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p8bb_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
// static void setup_lseek_read_p8bb_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p8bb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8bb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8bb_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p8bb_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p8bb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p8bb_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p8bb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bb_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8bb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8bb_2_0(void) {
  int r = lseek(10, 5062656, SEEK_END);
  expect_result("r", r, 5087232);
  return xerrno(r);
}
// static int test_lseek_read_p8bb_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p8bb_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
// static void setup_lseek_read_p8bb_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p9f6_1_proc0
// static void setup_lseek_read_p8bb_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bb_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8bb_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8bb_3_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p8bb_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p8bb_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p8bb_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p9f6_1_proc0
// static void setup_lseek_read_p8bb_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8bb_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8bb_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8ba_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p8ba_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8ba_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
// static void setup_lseek_read_p8ba_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbe8_0_proc0
// static void setup_lseek_read_p8ba_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p8ba_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8ba_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8ba_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p8ba_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8ba_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p8ba_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_0_proc0
// static void setup_lseek_read_p8ba_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p8ba_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8ba_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8ba_2_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p8ba_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8ba_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
static void setup_lseek_read_p8ba_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p8ba_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p8ba_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8ba_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8ba_3_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p8ba_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8ba_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p8ba_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p8ba_2_proc0
// static void setup_lseek_read_p8ba_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p8ba_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8ba_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b8_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_0_common
// static void setup_lseek_read_p8b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p8b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8b8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8b8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b8_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_1_common
// static void setup_lseek_read_p8b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p8b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8b8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b8_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p8b8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_0_common
// static void setup_lseek_read_p8b8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paec_2_proc0
// static void setup_lseek_read_p8b8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8b8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p8b8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b8_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p8b8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_1_common
// static void setup_lseek_read_p8b8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paec_2_proc0
// static void setup_lseek_read_p8b8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p8b8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p8b8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b6_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8b6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8b6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p8b6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b6_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_p8d4_0_common
// static void setup_lseek_read_p8b6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p8f4_0_proc0
// static void setup_lseek_read_p8b6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8b6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b6_2_0(void) {
  int r = lseek(10, 9981952, SEEK_END);
  expect_result("r", r, 9981952);
  return xerrno(r);
}
// static int test_lseek_read_p8b6_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_p8d4_0_common
static void setup_lseek_read_p8b6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8b6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b6_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b6_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8b6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p8f4_1_proc0
// static void setup_lseek_read_p8b6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b6_4_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b6_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8b6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p8f0_2_proc0
// static void setup_lseek_read_p8b6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b6_5_0(void) {
  int r = lseek(10, 31621120, SEEK_END);
  expect_result("r", r, 31621120);
  return xerrno(r);
}
// static int test_lseek_read_p8b6_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8b6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p96c_7_proc0
// static void setup_lseek_read_p8b6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b6_6_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_read_p8b6_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8b6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_proc0
// static void setup_lseek_read_p8b6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b6_7_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8b6_2_0
// static int test_lseek_read_p8b6_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p8b6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_p8b6_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b6_8_0(void) {
  int r = lseek(10, 5062656, SEEK_END);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static int test_lseek_read_p8b6_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p8b6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_p8b6_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b6_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b6_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8b10_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8b10_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p8b10_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p8b10_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8b10_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b10_1_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static int test_lseek_read_p8b10_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
static void setup_lseek_read_p8b10_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p8b10_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p8b10_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b10_2_0(void) {
  int r = lseek(10, 159744, SEEK_END);
  expect_result("r", r, 188416);
  return xerrno(r);
}
// static int test_lseek_read_p8b10_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b10_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
static void setup_lseek_read_p8b10_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b10_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b10_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b10_3_0(void) {
  int r = lseek(10, 24576, SEEK_END);
  expect_result("r", r, 53248);
  return xerrno(r);
}
// static int test_lseek_read_p8b10_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b10_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
static void setup_lseek_read_p8b10_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b10_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b10_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b10_4_0(void) {
  int r = lseek(10, 20480, SEEK_END);
  expect_result("r", r, 49152);
  return xerrno(r);
}
// static int test_lseek_read_p8b10_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b10_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
// static void setup_lseek_read_p8b10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_0_proc0
// static void setup_lseek_read_p8b10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b10_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b10_5_0(void) {
  int r = lseek(10, 31625216, SEEK_END);
  expect_result("r", r, 31633408);
  return xerrno(r);
}
// static int test_lseek_read_p8b10_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
static void setup_lseek_read_p8b10_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p8b10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b10_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p8b10_6_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_read_p8b10_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p8b10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_4_common
// static void setup_lseek_read_p8b10_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_6_proc0
// static void setup_lseek_read_p8b10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8b10_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8b10_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8a_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p8a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p8a_1_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p8a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89c_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p89c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p89c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
// static void setup_lseek_read_p89c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p89c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p89c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p89c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89c_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p89c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p89c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fc_1_common
// static void setup_lseek_read_p89c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p89c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p89c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p89c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89c_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p89c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p89c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf4_0_common
// static void setup_lseek_read_p89c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa6c_2_proc0
// static void setup_lseek_read_p89c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p89c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p89c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89c_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p89c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p89c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fc_1_common
// static void setup_lseek_read_p89c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa6c_2_proc0
// static void setup_lseek_read_p89c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p89c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p89c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89b_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p89b_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p89b_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
// static void setup_lseek_read_p89b_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p89b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p89b_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p89b_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89b_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p89b_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p89b_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p89b_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p89b_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p89b_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p89b_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89b_2_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p89b_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p89b_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
// static void setup_lseek_read_p89b_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p9b6_1_proc0
// static void setup_lseek_read_p89b_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p89b_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p89b_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89b_3_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p89b_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p89b_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p89b_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p9b6_1_proc0
// static void setup_lseek_read_p89b_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p89b_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p89b_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89a_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p89a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p89a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
// static void setup_lseek_read_p89a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_p89a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p89a_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p89a_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89a_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p89a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p89a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p89a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_p89a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p89a_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p89a_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89a_2_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p89a_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p89a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8fb_0_common
static void setup_lseek_read_p89a_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p89a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p89a_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p89a_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p89a_3_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5087232);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_2_0
// static int test_lseek_read_p89a_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p89a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p974_1_common
// static void setup_lseek_read_p89a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p89a_2_proc0
// static void setup_lseek_read_p89a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p89a_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p89a_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p898_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p898_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p898_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_0_common
// static void setup_lseek_read_p898_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p898_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p898_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p898_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p898_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p898_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p898_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_1_common
// static void setup_lseek_read_p898_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p898_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p898_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p898_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p898_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p898_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p898_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_0_common
// static void setup_lseek_read_p898_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa6c_2_proc0
// static void setup_lseek_read_p898_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p898_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p898_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p898_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p898_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p898_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_p8f8_1_common
// static void setup_lseek_read_p898_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pa6c_2_proc0
// static void setup_lseek_read_p898_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p898_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p898_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p894_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p894_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p894_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_p8d4_0_common
// static void setup_lseek_read_p894_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p894_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_2_proc1
// static void setup_lseek_read_p894_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p894_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p894_1_0(void) {
  int r = lseek(10, 34263040, SEEK_END);
  expect_result("r", r, 34263040);
  return xerrno(r);
}
// static int test_lseek_read_p894_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
static void setup_lseek_read_p894_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_read_p894_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_read_p894_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p894_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p894_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p894_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p894_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p894_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p894_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p894_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p894_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p894_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p894_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p894_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p894_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_p894_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p894_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p894_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p894_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p894_4_0(void) {
  int r = lseek(10, 155648, SEEK_END);
  expect_result("r", r, 155648);
  return xerrno(r);
}
// static int test_lseek_read_p894_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p894_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p894_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p894_3_proc0
// static void setup_lseek_read_p894_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p894_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p894_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p894_5_0(void) {
  int r = lseek(10, 151552, SEEK_END);
  expect_result("r", r, 151552);
  return xerrno(r);
}
// static int test_lseek_read_p894_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p894_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p894_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 151552, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p928_5_proc0
// static void setup_lseek_read_p894_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p894_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p894_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p894_6_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8b6_8_0
// static int test_lseek_read_p894_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p894_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p894_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p8b6_8_proc0
// static void setup_lseek_read_p894_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p8b6_8_proc0
// static void setup_lseek_read_p894_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p894_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p890_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p890_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_p890_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_p890_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p920_0_proc1
// static void setup_lseek_read_p890_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p920_5_proc1
// static void setup_lseek_read_p890_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p890_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p890_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bb_0_0
// static int test_lseek_read_p890_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
static void setup_lseek_read_p890_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_read_p890_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
static void setup_lseek_read_p890_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p890_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p890_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p890_2_0(void) {
  int r = lseek(10, 31612928, SEEK_END);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static int test_lseek_read_p890_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p890_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p890_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p890_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p890_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p890_3_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_read_p890_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p890_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p890_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa5_3_proc0
// static void setup_lseek_read_p890_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p890_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p890_4_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_read_p890_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p890_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p890_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc0
// static void setup_lseek_read_p890_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p890_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p890_5_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p890_3_0
// static int test_lseek_read_p890_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p890_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p890_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p890_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p890_6_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p890_4_0
// static int test_lseek_read_p890_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p890_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p890_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p890_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p890_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p88_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_0_0
// static int test_lseek_read_p88_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p88_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p88_1_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p8bc_2_0
// static int test_lseek_read_p88_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p88_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p88_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p878_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p878_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p878_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_p878_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p878_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p878_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p878_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p878_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p878_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p878_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_1_common
// static void setup_lseek_read_p878_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_paf_2_proc0
// static void setup_lseek_read_p878_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p878_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p878_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p876_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p876_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p876_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_p876_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p876_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p876_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p876_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p876_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p876_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p876_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_p876_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p876_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p876_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p876_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p874_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p874_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p874_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_p874_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_0_proc0
// static void setup_lseek_read_p874_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p874_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p874_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p874_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p874_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p874_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_p874_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pae8_0_proc0
// static void setup_lseek_read_p874_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p874_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p874_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p870_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p870_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p870_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p870_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p870_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p870_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p870_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p870_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p870_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p870_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p870_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pbec_0_proc0
// static void setup_lseek_read_p870_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p870_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p870_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p868_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p868_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p868_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p868_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_p868_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p868_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p868_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p868_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p868_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p868_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_p868_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_proc0
// static void setup_lseek_read_p868_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p868_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p868_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p868_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p868_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p868_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p868_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p868_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p868_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p868_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p868_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p868_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p868_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p868_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_2_proc0
// static void setup_lseek_read_p868_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p868_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p868_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p860_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p860_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p860_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p860_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_proc0
// static void setup_lseek_read_p860_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p860_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p860_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p860_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p860_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p860_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pb8_0_common
static void setup_lseek_read_p860_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p860_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p860_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p860_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p860_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p860_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p860_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_1_common
// static void setup_lseek_read_p860_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_proc0
// static void setup_lseek_read_p860_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p860_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p860_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p860_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p860_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p860_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p860_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p860_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p860_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p860_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p84_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p84_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p84_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p84_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p84_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p84_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p84_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p838_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p838_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p838_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_p838_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p838_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p838_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p838_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p838_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p838_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p838_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_1_common
// static void setup_lseek_read_p838_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pd0_1_proc1
// static void setup_lseek_read_p838_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p838_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p838_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p836_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p836_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p836_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_p836_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p836_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p836_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p836_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p836_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p836_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p836_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_6_common
// static void setup_lseek_read_p836_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p836_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p836_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p836_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p834_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p834_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p834_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_p834_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_p834_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p834_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p834_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p834_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p834_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p834_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pda_3_common
// static void setup_lseek_read_p834_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb68_0_proc0
// static void setup_lseek_read_p834_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p834_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p834_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p830_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p830_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p830_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p830_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p830_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p830_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p830_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p830_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p830_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p830_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_1_common
// static void setup_lseek_read_p830_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pb6c_0_proc0
// static void setup_lseek_read_p830_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p830_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_1_final
// static void setup_lseek_read_p830_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p828_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p828_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p828_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p828_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p828_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p828_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p828_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p828_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p828_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p828_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p828_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc0
// static void setup_lseek_read_p828_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc1
// static void setup_lseek_read_p828_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p828_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p828_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p828_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p828_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_1_common
// static void setup_lseek_read_p828_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_1_proc0
// static void setup_lseek_read_p828_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_2_proc1
// static void setup_lseek_read_p828_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_1_final
// static void setup_lseek_read_p828_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p820_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p820_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p820_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pac4_2_common
// static void setup_lseek_read_p820_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p820_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p9a8_2_proc1
// static void setup_lseek_read_p820_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_read_pac4_2_final
// static void setup_lseek_read_p820_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p820_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p820_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p820_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p820_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p820_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p820_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p820_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p820_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p820_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p820_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_p9e4_1_common
// static void setup_lseek_read_p820_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pa8_0_proc0
// static void setup_lseek_read_p820_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p920_0_proc1
// static void setup_lseek_read_p820_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p820_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p80_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_read_pfc_0_0
// static int test_lseek_read_p80_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p80_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
static int test_lseek_read_p78_0_0(void) {
  int r = lseek(10, 0, 999);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_lseek_read_p78_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
// static void setup_lseek_read_p78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
static void setup_lseek_read_p78_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p76_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p76_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_0_1
// static void setup_lseek_read_p76_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
static void setup_lseek_read_p76_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p76_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p76_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p76_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p74_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p74_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
static void setup_lseek_read_p74_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_read_p74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p74_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p74_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p70_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p70_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_p76_0_proc0
// static void setup_lseek_read_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p68_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_0_1
// static void setup_lseek_read_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
static void setup_lseek_read_p68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_read_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p68_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p60_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p60_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_0_1
// static void setup_lseek_read_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_p68_0_proc0
// static void setup_lseek_read_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p60_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p60_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_0_1
static void setup_lseek_read_p4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_lseek_read_p4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p4_0_final(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal
// static void setup_lseek_read_p4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_lseek_read_p4_0_common
// static void setup_lseek_read_p4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p4_1_final(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal
// static void setup_lseek_read_p4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p38_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p38_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfc_0_common
// static void setup_lseek_read_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_7_proc0
// static void setup_lseek_read_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p36_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p36_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfb_5_1
// static void setup_lseek_read_p36_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfb_0_common
// static void setup_lseek_read_p36_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p36_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p36_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p36_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p34_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p34_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p34_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pfa_3_common
// static void setup_lseek_read_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc1
// static void setup_lseek_read_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfa_6_proc0
// static void setup_lseek_read_p34_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p34_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p30_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p30_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_read_pf8_0_common
// static void setup_lseek_read_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfc_0_proc1
// static void setup_lseek_read_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_read_pfb_5_proc0
// static void setup_lseek_read_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_final
// static void setup_lseek_read_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_read_pfc_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p28_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p28_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfa_6_1
// static void setup_lseek_read_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_0_common
// static void setup_lseek_read_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pb5_0_proc1
// static void setup_lseek_read_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p28_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p20_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p20_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pf8_8_1
// static void setup_lseek_read_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_read_pbc0_0_common
// static void setup_lseek_read_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_read_pbd_2_proc0
// static void setup_lseek_read_p20_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_read_pbd_0_final
// static void setup_lseek_read_p20_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

/*
 * calls: lseek read
 */
// static int test_lseek_read_p0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_read_p78_0_0
// static int test_lseek_read_p0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_lseek_read_pfc_7_1
// static void setup_lseek_read_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_lseek_read_p4_0_common
// static void setup_lseek_read_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_read_pbd_0_proc1
// static void setup_lseek_read_p0_0_final(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal
// static void setup_lseek_read_p0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_read_pbd_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-lseek_read_pfc_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_1",
    &setup_lseek_read_pfc_1_common,
    { { &setup_lseek_read_pfc_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_2",
    &setup_lseek_read_pfc_2_common,
    { { &setup_lseek_read_pfc_2_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_3",
    &setup_lseek_read_pfc_2_common,
    { { &setup_lseek_read_pfc_3_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_4",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_4_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_5",
    &setup_lseek_read_pfc_5_common,
    { { &setup_lseek_read_pfc_3_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_6",
    &setup_lseek_read_pfc_5_common,
    { { &setup_lseek_read_pfc_2_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_7",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfc_8",
    &setup_lseek_read_pfc_1_common,
    { { &setup_lseek_read_pfc_4_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pfb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_1",
    &setup_lseek_read_pfb_1_common,
    { { &setup_lseek_read_pfb_1_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_2",
    &setup_lseek_read_pfb_2_common,
    { { &setup_lseek_read_pfb_1_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_3",
    &setup_lseek_read_pfb_1_common,
    { { &setup_lseek_read_pfb_3_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_4",
    &setup_lseek_read_pfb_2_common,
    { { &setup_lseek_read_pfb_3_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_5",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_6",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pfb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_7",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pfb_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfb_8",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pfb_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_0",
    &setup_lseek_read_pfb_1_common,
    { { &setup_lseek_read_pfa_0_proc0 }, { &setup_lseek_read_pfa_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pfb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_2",
    &setup_lseek_read_pfb_2_common,
    { { &setup_lseek_read_pfa_0_proc0 }, { &setup_lseek_read_pfa_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_3",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pfb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_4",
    &setup_lseek_read_pfb_2_common,
    { { &setup_lseek_read_pfa_4_proc0 }, { &setup_lseek_read_pfa_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_5",
    &setup_lseek_read_pfa_5_common,
    { { &setup_lseek_read_pfa_4_proc0 }, { &setup_lseek_read_pfa_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pfa_6",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pfa_6_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pfb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pfb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_2",
    &setup_lseek_read_pf8_2_common,
    { { &setup_lseek_read_pfb_1_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_3",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pfb_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_4",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pfb_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_5",
    &setup_lseek_read_pf8_2_common,
    { { &setup_lseek_read_pfb_3_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_6",
    &setup_lseek_read_pf8_6_common,
    { { &setup_lseek_read_pfb_1_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_7",
    &setup_lseek_read_pf8_6_common,
    { { &setup_lseek_read_pfb_3_proc0 }, { &setup_lseek_read_pfc_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf8_8",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf4_0",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_pf4_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf4_1",
    &setup_lseek_read_pf4_1_common,
    { { &setup_lseek_read_pf4_1_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pf4_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf4_2",
    &setup_lseek_read_pf4_1_common,
    { { &setup_lseek_read_pf4_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pf4_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf4_3",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_pf4_3_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf0_0",
    &setup_lseek_read_pf0_0_common,
    { { &setup_lseek_read_pf4_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf0_1",
    &setup_lseek_read_pf0_1_common,
    { { &setup_lseek_read_pf4_1_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf0_2",
    &setup_lseek_read_pf0_2_common,
    { { &setup_lseek_read_pf4_3_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pf0_3",
    &setup_lseek_read_pf0_3_common,
    { { &setup_lseek_read_pf4_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pf4_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pe_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pe_1",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_1",
    &setup_lseek_read_pfc_5_common,
    { { &setup_lseek_read_pdc_1_proc0 }, { &setup_lseek_read_pdc_1_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_2",
    &setup_lseek_read_pfc_1_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_3",
    &setup_lseek_read_pfc_2_common,
    { { &setup_lseek_read_pdc_1_proc0 }, { &setup_lseek_read_pdc_1_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_4",
    &setup_lseek_read_pfc_1_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_5",
    &setup_lseek_read_pfc_2_common,
    { { &setup_lseek_read_pdc_5_proc0 }, { &setup_lseek_read_pdc_1_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_6",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdc_7",
    &setup_lseek_read_pfc_5_common,
    { { &setup_lseek_read_pdc_5_proc0 }, { &setup_lseek_read_pdc_1_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_2",
    &setup_lseek_read_pfb_2_common,
    { { &setup_lseek_read_pdc_1_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_3",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_4",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_5",
    &setup_lseek_read_pfb_2_common,
    { { &setup_lseek_read_pdc_5_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_6",
    &setup_lseek_read_pfb_1_common,
    { { &setup_lseek_read_pdc_1_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pdb_7",
    &setup_lseek_read_pfb_1_common,
    { { &setup_lseek_read_pdc_5_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pda_0",
    &setup_lseek_read_pfa_5_common,
    { { &setup_lseek_read_pda_0_proc0 }, { &setup_lseek_read_pda_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pda_1",
    &setup_lseek_read_pda_1_common,
    { { &setup_lseek_read_pda_0_proc0 }, { &setup_lseek_read_pda_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pda_2",
    &setup_lseek_read_pda_1_common,
    { { &setup_lseek_read_pda_2_proc0 }, { &setup_lseek_read_pda_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pda_3",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pda_4",
    &setup_lseek_read_pfa_5_common,
    { { &setup_lseek_read_pda_2_proc0 }, { &setup_lseek_read_pda_0_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pda_5",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pfa_6_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_1",
    &setup_lseek_read_pf8_6_common,
    { { &setup_lseek_read_pdc_1_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_2",
    &setup_lseek_read_pf8_2_common,
    { { &setup_lseek_read_pdc_1_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_3",
    &setup_lseek_read_pf8_6_common,
    { { &setup_lseek_read_pdc_5_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_5_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_4",
    &setup_lseek_read_pf8_2_common,
    { { &setup_lseek_read_pdc_5_proc0 }, { &setup_lseek_read_pdb_2_proc1 } },
    &setup_lseek_read_pfc_2_procfinal,
    &setup_lseek_read_pfc_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_5",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_6",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd8_7",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd4_0",
    &setup_lseek_read_pd4_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pd4_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd4_1",
    &setup_lseek_read_pd4_1_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pd4_1_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pf4_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd4_2",
    &setup_lseek_read_pd4_1_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pd4_1_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pf4_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd4_3",
    &setup_lseek_read_pd4_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pd4_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd0_0",
    &setup_lseek_read_pd0_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pd0_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd0_1",
    &setup_lseek_read_pf0_2_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pd0_1_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd0_2",
    &setup_lseek_read_pf0_2_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pd0_1_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pd0_3",
    &setup_lseek_read_pf0_3_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pd0_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pf4_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pc_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfb_5_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pc_1",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_7_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pbf_0",
    &setup_lseek_read_pbf_0_common,
    { { &setup_lseek_read_pbf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbf_1",
    &setup_lseek_read_pbf_1_common,
    { { &setup_lseek_read_pbf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbec_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbec_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbe8_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pbe8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbe8_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pbe8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbe0_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbe0_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbd_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbd_1",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbd_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbd_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_3_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbc0_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbc0_1",
    &setup_lseek_read_pbc0_1_common,
    { { &setup_lseek_read_pbd_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbc0_2",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbc0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pbc0_3",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pb8_0",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_pb8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pb7_0",
    &setup_lseek_read_pbf_0_common,
    { { &setup_lseek_read_pb7_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb7_1",
    &setup_lseek_read_pbf_1_common,
    { { &setup_lseek_read_pb7_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb6c_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb6c_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb68_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb68_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb60_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb60_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb5_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_0_proc0 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb5_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc0 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb5_2",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pb5_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb40_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb40_1",
    &setup_lseek_read_pb40_1_common,
    { { &setup_lseek_read_pb40_1_proc0 }, { &setup_lseek_read_pb40_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb40_2",
    &setup_lseek_read_pb40_2_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pb40_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pb0_0",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_pb8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pbf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_paf_0",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_paf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paf_1",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_paf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paf_2",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paf_3",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paec_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paec_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paec_2",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_paec_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_paec_3",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_paec_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae8_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pae8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae8_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pbe8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae8_2",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pae8_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae8_3",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pae8_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae0_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae0_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae0_2",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pae0_3",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_0_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbc0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_4",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pad8_4_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_5",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pad8_5_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_6",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbc0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_7",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pad8_4_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pad8_8",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_0",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_pac4_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_1",
    &setup_lseek_read_pac4_1_common,
    { { &setup_lseek_read_pac4_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_2",
    &setup_lseek_read_pac4_2_common,
    { { &setup_lseek_read_pac4_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_3",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pac4_3_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pac4_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_4",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pac4_4_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_5",
    &setup_lseek_read_pac4_5_common,
    { { &setup_lseek_read_pac4_5_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pac4_5_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pac4_6",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pac4_6_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pa8_0",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pa8_1",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_pa7_0",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa7_1",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa7_2",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa7_3",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa6c_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa6c_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa6c_2",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa6c_3",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa68_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa68_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa68_2",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pa68_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa68_3",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pa68_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paec_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa60_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa60_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa60_2",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa60_3",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_0_proc1 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc0 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_2",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pb5_0_proc1 }, { &setup_lseek_read_pa5_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pa5_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_4",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pa5_3_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_5",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pb40_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa5_6",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_1",
    &setup_lseek_read_pb40_2_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pb40_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_2",
    &setup_lseek_read_pa40_2_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pb40_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_pa40_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_3",
    &setup_lseek_read_pa40_3_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pa8_0_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_4",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_5",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pa5_3_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa40_6",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pad8_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa0_0",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_pa0_1",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_paf_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f8_0",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f8_1",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f6_0",
    &setup_lseek_read_p9f6_0_common,
    { { &setup_lseek_read_paec_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f6_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f6_1",
    &setup_lseek_read_p9f6_1_common,
    { { &setup_lseek_read_p9f6_1_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f6_1_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f4_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pae8_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f6_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f4_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pae8_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f6_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f0_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9f0_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e8_0",
    &setup_lseek_read_pb40_1_common,
    { { &setup_lseek_read_p9e8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e8_1",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e8_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e8_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e4_0",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9e4_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e4_1",
    &setup_lseek_read_p9e4_1_common,
    { { &setup_lseek_read_p9e4_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e4_2",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9e4_3",
    &setup_lseek_read_p9e4_3_common,
    { { &setup_lseek_read_p9e4_3_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p9e4_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9c_0",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b8_0",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b8_1",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b6_0",
    &setup_lseek_read_p9f6_0_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f6_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b6_1",
    &setup_lseek_read_p9f6_1_common,
    { { &setup_lseek_read_p9b6_1_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f6_1_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b4_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pa68_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f6_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b4_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pa68_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f6_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b0_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9b0_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9a8_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9a8_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9a8_2",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_p9a8_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9a0_0",
    &setup_lseek_read_pb40_1_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pb40_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9a0_1",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p9a0_2",
    &setup_lseek_read_pac4_2_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_p9a8_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p98_0",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9f8_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p978_0",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p978_1",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p978_2",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p978_3",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p976_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_p976_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p976_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p976_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_paec_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p976_1_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p976_2",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_p976_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p976_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p976_3",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_p976_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p976_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p974_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_p974_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p976_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p974_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p974_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p974_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p974_2",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pae8_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p974_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p974_3",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pae8_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p974_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p970_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p970_1",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p970_2",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p970_3",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pae0_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p9e8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_3",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_p96c_3_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p96c_3_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_4",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_5",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_6",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbc0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p96c_6_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_7",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p96c_7_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p96c_3_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p96c_8",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_p9630_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9630_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_1",
    &setup_lseek_read_p9630_1_common,
    { { &setup_lseek_read_p9630_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p9630_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_2",
    &setup_lseek_read_pb40_1_common,
    { { &setup_lseek_read_p9630_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9630_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_3",
    &setup_lseek_read_pac4_1_common,
    { { &setup_lseek_read_p9630_3_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p9630_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_4",
    &setup_lseek_read_pac4_5_common,
    { { &setup_lseek_read_p9630_4_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9630_4_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_5",
    &setup_lseek_read_pac4_5_common,
    { { &setup_lseek_read_p9630_5_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9630_5_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p9630_6",
    &setup_lseek_read_pac4_5_common,
    { { &setup_lseek_read_p9630_5_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p9630_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p94_0",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p94_1",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p938_0",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p938_1",
    &setup_lseek_read_paf_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p938_2",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p938_3",
    &setup_lseek_read_paf_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p936_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pd4_0_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p976_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p936_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p936_1_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p936_1_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p936_2",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_p936_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p976_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p936_3",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_p936_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p976_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p934_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_p934_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p976_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p934_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_p934_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p934_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p934_2",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pa68_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p974_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p934_3",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pa68_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p974_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p930_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p930_1",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p930_2",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p930_3",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pa5_3_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pa5_3_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p928_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_4",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_p9a8_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_5",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_p928_5_proc0 }, { &setup_lseek_read_pa5_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_p928_5_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p928_6",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_0",
    &setup_lseek_read_p9e4_1_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_p920_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_1",
    &setup_lseek_read_p920_1_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_p920_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p936_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_2",
    &setup_lseek_read_pa40_3_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p920_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_3",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p96c_6_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_4",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pa5_3_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p936_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_5",
    &setup_lseek_read_p9e4_3_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_p920_5_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p920_5_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p920_6",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p90_0",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p90_1",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p978_1_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8fc_0",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_paf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8fc_1",
    &setup_lseek_read_p8fc_1_common,
    { { &setup_lseek_read_paf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8fb_0",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_p8fb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8fb_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p8fb_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8fa_0",
    &setup_lseek_read_p8fa_0_common,
    { { &setup_lseek_read_p8fa_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fa_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8fa_1",
    &setup_lseek_read_p9f6_1_common,
    { { &setup_lseek_read_p8fa_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fa_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f8_0",
    &setup_lseek_read_p8f8_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f8_1",
    &setup_lseek_read_p8f8_1_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f4_0",
    &setup_lseek_read_p8f4_0_common,
    { { &setup_lseek_read_p8f4_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f4_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p8f4_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f4_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p96c_7_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f4_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f0_0",
    &setup_lseek_read_p8f4_0_common,
    { { &setup_lseek_read_p8f0_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f0_1",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_pac4_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fa_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f0_2",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_p8f0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8f0_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8f0_3",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8f0_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8e_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8dc_0",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8dc_1",
    &setup_lseek_read_p8fc_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8db_0",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_p8db_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8db_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p8db_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8da_0",
    &setup_lseek_read_p8fa_0_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fa_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8da_1",
    &setup_lseek_read_p9f6_1_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fa_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d8_0",
    &setup_lseek_read_p8f8_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d8_1",
    &setup_lseek_read_p8f8_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d4_0",
    &setup_lseek_read_p8d4_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pb5_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d4_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d4_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc0 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d0_0",
    &setup_lseek_read_p8f4_0_common,
    { { &setup_lseek_read_pb40_1_proc1 }, { &setup_lseek_read_p8d0_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d0_1",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8f0_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8d0_2",
    &setup_lseek_read_pac4_5_common,
    { { &setup_lseek_read_p920_0_proc1 }, { &setup_lseek_read_p8d0_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8d0_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8c_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8fc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bc_0",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_paf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bc_1",
    &setup_lseek_read_p8fc_1_common,
    { { &setup_lseek_read_paf_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bc_2",
    &setup_lseek_read_p8fc_1_common,
    { { &setup_lseek_read_p8bc_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bc_3",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_p8bc_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bb_0",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bb_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bb_2",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_p9f6_1_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8bb_3",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p9f6_1_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8ba_0",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_pbe8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8ba_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_pae8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8ba_2",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_p8ba_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8ba_3",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p8ba_2_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b8_0",
    &setup_lseek_read_p8f8_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b8_1",
    &setup_lseek_read_p8f8_1_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b8_2",
    &setup_lseek_read_p8f8_0_common,
    { { &setup_lseek_read_paec_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b8_3",
    &setup_lseek_read_p8f8_1_common,
    { { &setup_lseek_read_paec_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_0_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_1",
    &setup_lseek_read_p8d4_0_common,
    { { &setup_lseek_read_p8f4_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_2",
    &setup_lseek_read_p8d4_0_common,
    { { &setup_lseek_read_p8b6_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8b6_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p8f4_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_4",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p8f0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_5",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p96c_7_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b6_5_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_6",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pac4_4_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b6_6_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_7",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p8b6_7_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b6_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b6_8",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p8b6_8_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b6_8_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_0",
    &setup_lseek_read_p8b10_0_common,
    { { &setup_lseek_read_p8b10_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_1",
    &setup_lseek_read_p8b10_1_common,
    { { &setup_lseek_read_p8b10_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8b10_1_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_2",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_p8b10_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b10_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_3",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_p8b10_3_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b10_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_4",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_pac4_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b10_4_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_5",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_p8b10_5_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b10_5_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8b10_6",
    &setup_lseek_read_pac4_4_common,
    { { &setup_lseek_read_pac4_6_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b10_6_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8a_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p8a_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p89c_0",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89c_1",
    &setup_lseek_read_p8fc_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89c_2",
    &setup_lseek_read_pf4_0_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89c_3",
    &setup_lseek_read_p8fc_1_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89b_0",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89b_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89b_2",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_p9b6_1_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89b_3",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p9b6_1_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89a_0",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89a_1",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89a_2",
    &setup_lseek_read_p8fb_0_common,
    { { &setup_lseek_read_p89a_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p89a_3",
    &setup_lseek_read_p974_1_common,
    { { &setup_lseek_read_p89a_2_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bb_2_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p898_0",
    &setup_lseek_read_p8f8_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p898_1",
    &setup_lseek_read_p8f8_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p898_2",
    &setup_lseek_read_p8f8_0_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p898_3",
    &setup_lseek_read_p8f8_1_common,
    { { &setup_lseek_read_pa6c_2_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_0",
    &setup_lseek_read_p8d4_0_common,
    { { &setup_lseek_read_pb5_0_proc1 }, { &setup_lseek_read_pa5_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_1",
    &setup_lseek_read_p894_1_common,
    { { &setup_lseek_read_p894_1_proc0 }, { &setup_lseek_read_p894_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p894_1_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p894_3_proc0 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_4",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p894_3_proc0 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p894_4_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_5",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p928_5_proc0 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p894_5_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p894_6",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p8b6_8_proc0 }, { &setup_lseek_read_p8b6_8_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8b6_8_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_0",
    &setup_lseek_read_p890_0_common,
    { { &setup_lseek_read_p920_0_proc1 }, { &setup_lseek_read_p920_5_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_1",
    &setup_lseek_read_p890_1_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_p890_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_p8bb_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_2",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p890_2_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_3",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pa5_3_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p890_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_4",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pb5_1_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p890_4_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_5",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p890_3_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p890_6",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p890_4_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p88_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p88_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p8bc_2_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p878_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p878_1",
    &setup_lseek_read_pfc_1_common,
    { { &setup_lseek_read_paf_2_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p876_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p876_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p874_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pae8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p874_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pae8_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p870_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p870_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pbec_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p868_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p868_1",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pbd_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p868_2",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p868_3",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbc0_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p860_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p860_1",
    &setup_lseek_read_pb8_0_common,
    { { &setup_lseek_read_p860_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p860_2",
    &setup_lseek_read_pbc0_1_common,
    { { &setup_lseek_read_pbd_1_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p860_3",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p84_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p838_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p838_1",
    &setup_lseek_read_pfc_1_common,
    { { &setup_lseek_read_pd0_1_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p836_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p836_1",
    &setup_lseek_read_pfb_6_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p834_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p834_1",
    &setup_lseek_read_pda_3_common,
    { { &setup_lseek_read_pb68_0_proc0 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p830_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p830_1",
    &setup_lseek_read_pf8_1_common,
    { { &setup_lseek_read_pb6c_0_proc0 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p828_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_0_proc1 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p828_1",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pb5_1_proc0 }, { &setup_lseek_read_pb5_1_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p828_2",
    &setup_lseek_read_pbd_1_common,
    { { &setup_lseek_read_pb5_1_proc0 }, { &setup_lseek_read_pb5_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_1_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p820_0",
    &setup_lseek_read_pac4_2_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_p9a8_2_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pac4_2_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p820_1",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p820_2",
    &setup_lseek_read_p9e4_1_common,
    { { &setup_lseek_read_pa8_0_proc0 }, { &setup_lseek_read_p920_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p80_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_2_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_pfc_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p78_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_p78_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p76_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_p76_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p74_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_p74_0_proc0 }, { &setup_lseek_read_pfa_6_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p70_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_p76_0_proc0 }, { &setup_lseek_read_pfc_0_proc1 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p68_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_p68_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p60_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_p68_0_proc0 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p4_0",
    &setup_lseek_read_p4_0_common,
    { { &setup_lseek_read_pbd_0_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_procfinal,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p4_1",
    &setup_lseek_read_p4_0_common,
    { { &setup_lseek_read_pbd_0_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_procfinal,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 0, "read" } },
    &cleanup },
  { "fs-lseek_read_p38_0",
    &setup_lseek_read_pfc_0_common,
    { { &setup_lseek_read_pfc_0_proc1 }, { &setup_lseek_read_pfc_7_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p36_0",
    &setup_lseek_read_pfb_0_common,
    { { &setup_lseek_read_pfc_0_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfb_5_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p34_0",
    &setup_lseek_read_pfa_3_common,
    { { &setup_lseek_read_pfa_6_proc1 }, { &setup_lseek_read_pfa_6_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p30_0",
    &setup_lseek_read_pf8_0_common,
    { { &setup_lseek_read_pfc_0_proc1 }, { &setup_lseek_read_pfb_5_proc0 } },
    &setup_lseek_read_pfc_0_procfinal,
    &setup_lseek_read_pfc_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p28_0",
    &setup_lseek_read_pbd_0_common,
    { { &setup_lseek_read_pbd_0_proc1 }, { &setup_lseek_read_pb5_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfa_6_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p20_0",
    &setup_lseek_read_pbc0_0_common,
    { { &setup_lseek_read_pbd_0_proc1 }, { &setup_lseek_read_pbd_2_proc0 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_final,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pf8_8_1, 1, "read" } },
    &cleanup },
  { "fs-lseek_read_p0_0",
    &setup_lseek_read_p4_0_common,
    { { &setup_lseek_read_pbd_0_proc1 }, { &setup_lseek_read_pbd_0_proc1 } },
    &setup_lseek_read_pbd_0_procfinal,
    &setup_lseek_read_pbd_0_procfinal,
    { { &test_lseek_read_p78_0_0, 0, "lseek" },
      { &test_lseek_read_pfc_7_1, 1, "read" } },
    &cleanup },
//+++ common
  {}
};
