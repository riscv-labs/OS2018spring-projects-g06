//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: mmap pread
 */
static int test_mmap_pread_pf8_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static int test_mmap_pread_pf8_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 0);
  expect_result("r", r, -1);
  expect_errno(29);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_pread_pf8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_pread_pf8_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_mmap_pread_pf8_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf8_1_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 0);
  expect_result("r", r, -1);
  expect_errno(29);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pf8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
static void setup_mmap_pread_pf8_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
static void setup_mmap_pread_pf8_10_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_pread_pf8_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_15_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_20_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_20_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_21_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_21_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_22_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_22_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_23_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_24_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_26_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_26_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_26_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_27_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_27_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pf8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_28_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_29_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_30_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_30_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_31_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_31_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_32_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_32_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_32_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_33_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_33_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pf8_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf8_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_34_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf8_34_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_35_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf8_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_35_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_35_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf8_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_36_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_36_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf8_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_37_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_37_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf8_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf8_38_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pf8_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pf8_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf8_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf8_38_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf8_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf4_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 0);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_pread_pf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_mmap_pread_pf4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_pread_pf4_0_final(void) {
  unlink("__i0");
}
static void setup_mmap_pread_pf4_0_procfinal(void) {
  
}

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_pread_pf4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
static void setup_mmap_pread_pf4_1_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_pread_pf4_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d5000);
}
// static void setup_mmap_pread_pf4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf4_8_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 31621120);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf4_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_pread_pf4_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x1e27000);
}
// static void setup_mmap_pread_pf4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
static void setup_mmap_pread_pf4_8_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
}
// static void setup_mmap_pread_pf4_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_pread_pf4_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
static void setup_mmap_pread_pf4_9_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_mmap_pread_pf4_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
static void setup_mmap_pread_pf4_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_mmap_pread_pf4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
static void setup_mmap_pread_pf4_12_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_mmap_pread_pf4_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_mmap_pread_pf4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_20_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pf4_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
}
// static void setup_mmap_pread_pf4_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_21_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_22_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_23_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_mmap_pread_pf4_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_26_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_26_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_28_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf4_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_28_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf4_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_30_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
static void setup_mmap_pread_pf4_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf4_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_30_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_31_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf4_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_31_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_31_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf4_32_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 159744);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pf4_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_35_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_36_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_38_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_38_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_39_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_39_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x1000);
}
// static void setup_mmap_pread_pf4_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
static void setup_mmap_pread_pf4_39_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_pread_pf4_39_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_40_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_40_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_41_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_41_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_41_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_42_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_42_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_43_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_43_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_8_common
static void setup_mmap_pread_pf4_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0x1000);
}
// static void setup_mmap_pread_pf4_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_43_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_8_final
// static void setup_mmap_pread_pf4_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_44_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_44_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_45_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_45_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf4_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_45_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_46_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_46_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf4_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_46_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_47_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_47_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf4_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_47_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_48_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_48_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_48_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_48_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_49_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_49_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf4_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_49_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_49_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_50_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_50_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_50_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf4_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_50_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_50_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_51_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_51_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_51_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_51_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_51_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_51_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_52_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_52_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pf4_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_52_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_52_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_53_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_53_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_53_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_53_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_53_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_54_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_54_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf4_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_54_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_54_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_55_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_55_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf4_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_55_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_55_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_56_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_56_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
static void setup_mmap_pread_pf4_56_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf4_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_56_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_56_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_57_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_57_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_57_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_57_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_58_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_58_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf4_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_58_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_58_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_59_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_59_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_59_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_59_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_60_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_60_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf4_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_60_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_60_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_61_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_61_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_39_common
static void setup_mmap_pread_pf4_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x1000);
}
// static void setup_mmap_pread_pf4_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_61_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_39_final
// static void setup_mmap_pread_pf4_61_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_62_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_62_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_62_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_62_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_63_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_63_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf4_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_63_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_63_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_64_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_64_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_64_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_64_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_65_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_65_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pf4_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_65_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_65_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_66_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_66_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_66_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_66_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_67_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_67_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_67_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_67_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_68_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_68_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_68_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_68_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_69_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_69_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_8_common
static void setup_mmap_pread_pf4_69_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x26000);
}
// static void setup_mmap_pread_pf4_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_69_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_8_final
// static void setup_mmap_pread_pf4_69_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_70_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_70_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_70_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_70_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_71_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_71_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_71_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_71_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_72_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_72_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_72_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_72_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_73_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_73_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x27000);
}
// static void setup_mmap_pread_pf4_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_73_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_73_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_74_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_74_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_74_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_74_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_75_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf4_75_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 31617024);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pf4_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e28000);
}
// static void setup_mmap_pread_pf4_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_75_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_75_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_76_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_76_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_39_common
static void setup_mmap_pread_pf4_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x26000);
}
// static void setup_mmap_pread_pf4_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_76_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_39_final
// static void setup_mmap_pread_pf4_76_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_77_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_77_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_77_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_77_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_78_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_78_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_78_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_78_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_79_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_79_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_79_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_79_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_80_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_80_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_80_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_80_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_81_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_81_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf4_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_81_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_81_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_82_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_82_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_82_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_82_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_83_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_83_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_83_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_84_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_84_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x27000);
}
// static void setup_mmap_pread_pf4_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_84_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_84_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_85_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_85_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_85_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_85_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_86_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_86_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_86_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_87_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_87_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_87_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_88_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_88_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_88_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_88_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_89_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_89_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31617024);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_75_1
// static void setup_mmap_pread_pf4_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_8_common
static void setup_mmap_pread_pf4_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0x1e26000);
}
// static void setup_mmap_pread_pf4_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_89_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_8_final
// static void setup_mmap_pread_pf4_89_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_90_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_90_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_90_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_90_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_91_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_91_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_91_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_91_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_92_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_92_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_92_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_92_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_92_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_93_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_93_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_93_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_93_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_93_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_93_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_94_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_94_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_39_common
static void setup_mmap_pread_pf4_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x26000);
}
// static void setup_mmap_pread_pf4_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_94_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_39_final
// static void setup_mmap_pread_pf4_94_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_95_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_95_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_38_common
static void setup_mmap_pread_pf4_95_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_95_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_95_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_96_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_96_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_96_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_96_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_96_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_97_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_97_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_97_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pf4_97_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_mmap_pread_pf4_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_97_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf4_97_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_98_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_98_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pf4_98_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_98_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf4_98_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_99_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_99_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_99_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_mmap_pread_pf4_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_99_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_99_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_100_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_100_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_51_common
static void setup_mmap_pread_pf4_100_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_pread_pf4_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_100_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_100_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_101_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_101_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_12_common
static void setup_mmap_pread_pf4_101_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_mmap_pread_pf4_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_101_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf4_101_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_102_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_102_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_102_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_102_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_102_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_103_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_103_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_53_common
static void setup_mmap_pread_pf4_103_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pf4_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_103_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_103_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_104_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_104_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_10_common
static void setup_mmap_pread_pf4_104_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_mmap_pread_pf4_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_104_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_104_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_105_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_105_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_105_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pf4_105_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf4_105_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf4_105_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_106_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_106_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_53_common
static void setup_mmap_pread_pf4_106_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_106_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf4_106_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf4_107_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf4_107_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_pf4_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_56_common
static void setup_mmap_pread_pf4_107_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf4_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf4_107_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf4_107_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf0_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 0);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_pf0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_pread_pf0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_pf0_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_pread_pf0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pf0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_28_proc0
// static void setup_mmap_pread_pf0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf0_11_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 12288);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf0_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf0_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pf0_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf0_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_pread_pf0_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_15_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pf0_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf0_17_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 20480);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf0_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pf0_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf0_20_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 16384);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf0_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_21_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pf0_22_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pf0_22_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_20_1
static void setup_mmap_pread_pf0_23_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x3000);
}
// static void setup_mmap_pread_pf0_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_23_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_8_final
// static void setup_mmap_pread_pf0_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
static void setup_mmap_pread_pf0_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x6000);
}
// static void setup_mmap_pread_pf0_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_24_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10006528, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_26_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
static void setup_mmap_pread_pf0_27_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_27_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_27_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf0_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_30_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_pf0_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pf0_5_proc0
// static void setup_mmap_pread_pf0_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4d4000);
}
// static void setup_mmap_pread_pf0_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_32_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
static void setup_mmap_pread_pf0_32_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x4d4000);
}
// static void setup_mmap_pread_pf0_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_32_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_pf0_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_pread_pf0_6_proc0
// static void setup_mmap_pread_pf0_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_32_common
static void setup_mmap_pread_pf0_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
}
// static void setup_mmap_pread_pf0_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_35_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_32_common
static void setup_mmap_pread_pf0_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_36_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
static void setup_mmap_pread_pf0_37_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x5000);
}
// static void setup_mmap_pread_pf0_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
static void setup_mmap_pread_pf0_37_final(void) {
  unlink("__i1");
  unlink("__i0");
  unlink("__i2");
  close(20);
  close(21);
}
// static void setup_mmap_pread_pf0_37_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_38_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_32_common
static void setup_mmap_pread_pf0_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
}
// static void setup_mmap_pread_pf0_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_38_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_39_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_24_common
static void setup_mmap_pread_pf0_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
}
// static void setup_mmap_pread_pf0_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_39_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_39_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_40_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_27_common
static void setup_mmap_pread_pf0_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_40_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_40_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_41_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_42_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
static void setup_mmap_pread_pf0_42_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 32768, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x7000);
}
// static void setup_mmap_pread_pf0_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_42_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_42_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_43_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_43_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_43_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x2000);
}
// static void setup_mmap_pread_pf0_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
static void setup_mmap_pread_pf0_43_final(void) {
  unlink("__i0");
  unlink("__i2");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_mmap_pread_pf0_43_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_44_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_44_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_pf0_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf0_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_44_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_45_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_45_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_45_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_46_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_46_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_46_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_46_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_46_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_47_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_47_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_47_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_47_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_48_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_48_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_48_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_48_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_49_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_49_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
static void setup_mmap_pread_pf0_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_49_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_49_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_50_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_50_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_50_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_pread_pf0_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_50_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_50_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_51_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_51_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_51_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_51_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_51_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_52_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_52_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_52_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_52_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_53_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_53_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_53_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_54_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_54_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_54_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_54_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_55_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_55_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf0_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_55_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_55_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_56_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_56_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_56_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_56_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_57_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_57_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_57_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_57_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_58_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_58_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf0_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_58_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_58_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_59_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_59_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_59_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_59_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_60_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_60_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_60_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0x5000);
}
// static void setup_mmap_pread_pf0_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
static void setup_mmap_pread_pf0_60_final(void) {
  unlink("__i0");
  unlink("__i2");
  unlink("__i1");
}
// static void setup_mmap_pread_pf0_60_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_61_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_61_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
static void setup_mmap_pread_pf0_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_pread_pf0_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_61_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_61_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_62_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_62_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
static void setup_mmap_pread_pf0_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_62_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_62_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_63_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_63_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
static void setup_mmap_pread_pf0_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_63_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_63_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_64_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_64_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pf0_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_64_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_64_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_65_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_65_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_46_common
static void setup_mmap_pread_pf0_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_65_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_65_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_66_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_66_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_66_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x5000);
}
// static void setup_mmap_pread_pf0_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_66_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf0_43_final
// static void setup_mmap_pread_pf0_66_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_67_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_67_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_pread_pf0_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_67_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_67_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_68_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_68_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_68_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_68_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_69_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_69_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_69_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_69_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_69_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_70_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_70_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_70_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_71_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_71_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_71_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_71_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_72_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_72_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf0_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_72_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_72_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_73_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_73_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pf0_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_73_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_73_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_74_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_74_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_74_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_74_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_75_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_75_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf0_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_75_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_75_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_76_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_76_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
static void setup_mmap_pread_pf0_76_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x1000);
}
// static void setup_mmap_pread_pf0_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_76_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_8_final
// static void setup_mmap_pread_pf0_76_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_77_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_77_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_77_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_77_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_78_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_78_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_78_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_78_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_79_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_79_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_pread_pf0_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_79_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_79_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_80_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_80_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_15_common
static void setup_mmap_pread_pf0_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_80_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_80_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_81_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_81_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_81_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_81_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_82_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_82_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_24_common
static void setup_mmap_pread_pf0_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x4000);
}
// static void setup_mmap_pread_pf0_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_82_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_82_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_83_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_83_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_46_common
static void setup_mmap_pread_pf0_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_mmap_pread_pf0_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_83_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_83_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_84_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_84_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
static void setup_mmap_pread_pf0_84_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
}
// static void setup_mmap_pread_pf0_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_84_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_84_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_85_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_85_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
}
// static void setup_mmap_pread_pf0_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_85_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_86_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_86_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pf0_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_86_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_87_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_87_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_27_common
static void setup_mmap_pread_pf0_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x4000);
}
// static void setup_mmap_pread_pf0_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_87_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_87_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_88_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_88_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_mmap_pread_pf0_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_88_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_88_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_89_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_89_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_32_common
// static void setup_mmap_pread_pf0_89_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pf0_3_proc0
// static void setup_mmap_pread_pf0_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_89_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_89_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_90_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_90_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_24_common
static void setup_mmap_pread_pf0_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pf0_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_90_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_90_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_91_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_91_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pf0_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pf0_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
}
// static void setup_mmap_pread_pf0_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_91_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_92_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_92_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pf0_92_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_92_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_92_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_93_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_93_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_93_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_46_common
static void setup_mmap_pread_pf0_93_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_pread_pf0_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_93_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_93_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_94_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_94_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_pf0_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
static void setup_mmap_pread_pf0_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_94_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_94_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_95_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_95_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
static void setup_mmap_pread_pf0_95_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_95_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_pread_pf0_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_95_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_95_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_96_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_96_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_96_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_96_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_mmap_pread_pf0_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_96_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_96_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_97_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_97_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
static void setup_mmap_pread_pf0_97_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pf0_97_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0x0);
}
// static void setup_mmap_pread_pf0_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_97_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_8_final
// static void setup_mmap_pread_pf0_97_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_98_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_98_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_3_common
static void setup_mmap_pread_pf0_98_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pf0_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_98_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pf0_98_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_99_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_99_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
static void setup_mmap_pread_pf0_99_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_pread_pf0_99_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_pread_pf4_58_proc0
// static void setup_mmap_pread_pf0_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_99_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_99_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_100_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_100_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_pf0_100_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf0_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_100_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pf0_100_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_101_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_101_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pf0_101_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf0_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pf0_101_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pf0_101_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_102_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_102_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_102_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_102_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x4d4000);
}
// static void setup_mmap_pread_pf0_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_102_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_39_final
// static void setup_mmap_pread_pf0_102_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_103_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_103_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
static void setup_mmap_pread_pf0_103_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
}
// static void setup_mmap_pread_pf0_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_103_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_103_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_104_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_104_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pf0_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
static void setup_mmap_pread_pf0_104_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pf0_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_104_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pf0_104_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_105_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_105_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_105_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_105_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
}
// static void setup_mmap_pread_pf0_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_105_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_105_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_106_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_106_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pf0_106_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pf0_106_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pf0_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_106_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pf0_106_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pf0_107_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pf0_107_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
static void setup_mmap_pread_pf0_107_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pf0_107_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pf4_65_proc0
// static void setup_mmap_pread_pf0_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pf0_107_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pf0_107_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pe0_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 0);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pe0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_mmap_pread_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
static void setup_mmap_pread_pe0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_1_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_pe0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pe0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pe0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pe0_3_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 0);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pe0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pe0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pe0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pe0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pe0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pe0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pe0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
static void setup_mmap_pread_pe0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pe0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_6_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_pe0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pe0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pe0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pe0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pe0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pe0_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pe0_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pe0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pe0_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pe0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pe0_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pe0_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_pread_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pd8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_pread_pd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pd8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_pread_pd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pd8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
static void setup_mmap_pread_pd8_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pd8_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
// static void setup_mmap_pread_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_pread_pd8_3_proc0
// static void setup_mmap_pread_pd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pd8_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pd8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pd8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_pread_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pd8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_pread_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
static void setup_mmap_pread_pd8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_pread_pd8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pd8_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pd8_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pd8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pd8_6_proc0
// static void setup_mmap_pread_pd8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pd8_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pd8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pd8_7_proc0
// static void setup_mmap_pread_pd8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pd8_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_10_common
// static void setup_mmap_pread_pd8_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_pread_pd8_8_proc0
// static void setup_mmap_pread_pd8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pd8_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pd8_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pd8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pd8_1_proc0
// static void setup_mmap_pread_pd8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pd8_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd8_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd8_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pd8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pd8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pd8_2_proc0
// static void setup_mmap_pread_pd8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pd8_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pd8_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pd4_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 0);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
static void setup_mmap_pread_pd4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pe0_1_proc0
// static void setup_mmap_pread_pd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pd4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pd4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_pread_pd4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pd4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_mmap_pread_pd4_2_proc0
static void setup_mmap_pread_pd4_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pd4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pd4_5_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 31621120);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pd4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pd4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
static void setup_mmap_pread_pd4_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd4_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pd4_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pe0_6_proc0
// static void setup_mmap_pread_pd4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_pd4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pd4_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_pread_pd4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_pd4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_5_proc0
// static void setup_mmap_pread_pd4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_pd4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_5_1
// static void setup_mmap_pread_pd4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pd4_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_mmap_pread_pd4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
// static void setup_mmap_pread_pd4_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_5_1
// static void setup_mmap_pread_pd4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pd4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_mmap_pread_pd4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
// static void setup_mmap_pread_pd4_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pd4_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pe0_1_proc0
// static void setup_mmap_pread_pd4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pd4_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_pread_pd4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_2_proc0
// static void setup_mmap_pread_pd4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_pd4_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pd4_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_pread_pd4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pd4_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_2_proc0
// static void setup_mmap_pread_pd4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pe0_6_proc0
// static void setup_mmap_pread_pd4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pd4_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_pread_pd4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_9_common
static void setup_mmap_pread_pd4_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_pread_pd4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pd4_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd4_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd4_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pd4_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pd4_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_5_proc0
// static void setup_mmap_pread_pd4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd4_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd4_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pd0_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 0);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
static void setup_mmap_pread_pd0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pe0_1_proc0
// static void setup_mmap_pread_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pd0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pd0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_pread_pd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pd0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_pd0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_pread_pd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pd0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pd0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pd0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pd0_5_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 12288);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pd0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_pd0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pe0_6_proc0
// static void setup_mmap_pread_pd0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pd0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_pd0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
static void setup_mmap_pread_pd0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_pread_pd0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pd0_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pd0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pe0_1_proc0
// static void setup_mmap_pread_pd0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pd0_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2297000);
}
// static void setup_mmap_pread_pd0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
// static void setup_mmap_pread_pd0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_pread_pd0_3_proc0
// static void setup_mmap_pread_pd0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pd0_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pe0_6_proc0
// static void setup_mmap_pread_pd0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_pd0_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x2297000);
}
// static void setup_mmap_pread_pd0_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pd0_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
static int test_mmap_pread_pd0_12_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 20480);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pd0_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pd0_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
static void setup_mmap_pread_pd0_12_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd0_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_12_1
static void setup_mmap_pread_pd0_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_pread_pd0_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_pread_pd0_2_proc0
static void setup_mmap_pread_pd0_13_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd0_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_2_proc0
// static void setup_mmap_pread_pd0_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
static void setup_mmap_pread_pd0_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_pread_pd0_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pd0_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_pd0_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_pd0_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_pread_pd0_15_proc0
// static void setup_mmap_pread_pd0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_pd0_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_pd0_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_pd0_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_mmap_pread_pd0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_pd0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_pd0_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_mmap_pread_pd4_9_proc0
static void setup_mmap_pread_pd0_18_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pd0_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pd0_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pd0_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pd0_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pd0_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_5_proc0
// static void setup_mmap_pread_pd0_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pd0_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pd0_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pc0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pc0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pc0_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pc0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pc0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_pc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_pread_pe0_1_proc0
// static void setup_mmap_pread_pc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pc0_1_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_pc0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pc0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pc0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pc0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_2_proc0
// static void setup_mmap_pread_pc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pc0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pc0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pc0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_pc0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_pread_pe0_6_proc0
// static void setup_mmap_pread_pc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pc0_3_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_pc0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pc0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pf8_0_0
// static int test_mmap_pread_pc0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pc0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pc0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_pread_pe0_5_proc0
// static void setup_mmap_pread_pc0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pc0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pc0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_pbe_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_pread_pbe_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
static void setup_mmap_pread_pbe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
static void setup_mmap_pread_pbe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pbe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_0_proc0
// static void setup_mmap_pread_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
static void setup_mmap_pread_pbe_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pbe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_pread_pbe_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_pread_pbe_2_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
  close(22);
  close(23);
}
static void setup_mmap_pread_pbe_2_procfinal(void) {
  close(20);
  close(21);
  close(22);
  close(23);
}

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
static void setup_mmap_pread_pbe_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_pbe_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pbe_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
static void setup_mmap_pread_pbe_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_pbe_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pbe_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
static void setup_mmap_pread_pbe_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_pbe_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pbe_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
static void setup_mmap_pread_pbe_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pbe_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
static void setup_mmap_pread_pbe_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pbe_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
static void setup_mmap_pread_pbe_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbe_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pbe_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
static void setup_mmap_pread_pbe_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pbe_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc0
// static void setup_mmap_pread_pbe_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
static void setup_mmap_pread_pbe_9_final(void) {
  unlink("__i0");
  close(20);
  close(21);
  close(22);
  close(23);
}
// static void setup_mmap_pread_pbe_9_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_pbe_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_3_proc0
// static void setup_mmap_pread_pbe_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_pbe_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pbe_10_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_pbe_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_4_proc0
// static void setup_mmap_pread_pbe_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_pbe_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pbe_11_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_pbe_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_5_proc0
// static void setup_mmap_pread_pbe_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_pbe_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pbe_12_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pbe_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_6_proc0
// static void setup_mmap_pread_pbe_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbe_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pbe_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_7_proc0
// static void setup_mmap_pread_pbe_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbe_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pbe_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pbe_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_8_proc0
// static void setup_mmap_pread_pbe_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_15_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbe_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pbe_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pbe_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pbe_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbe_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbe_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbe_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pbe_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pbe_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pbe_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbe_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbe_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
static void setup_mmap_pread_pbd_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbd_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbd_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
static void setup_mmap_pread_pbd_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbd_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbd_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
static void setup_mmap_pread_pbd_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbd_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbd_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_pbd_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_pbd_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbd_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_pbd_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_pbd_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbd_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
static void setup_mmap_pread_pbd_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbd_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbd_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
static void setup_mmap_pread_pbd_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbd_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbd_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbd_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbd_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pbd_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
static void setup_mmap_pread_pbd_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbd_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbd_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbd_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pbc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_pbc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf0_7_proc0
// static void setup_mmap_pread_pbc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbc0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pbc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
static void setup_mmap_pread_pbc0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbc0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pbc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
static void setup_mmap_pread_pbc0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pbc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbc0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pbc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_pbc0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_pbc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbc0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pbc0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_96_common
// static void setup_mmap_pread_pbc0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_pbc0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pbc0_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pbc0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_pbc0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_6_proc0
// static void setup_mmap_pread_pbc0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbc0_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
static void setup_mmap_pread_pbc0_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pbc0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_6_proc0
// static void setup_mmap_pread_pbc0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pbc0_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pbc0_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pbc0_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_pbc0_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pbc0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_7_proc0
// static void setup_mmap_pread_pbc0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pbc0_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pbc0_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pb8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pb8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
static void setup_mmap_pread_pb6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_pread_pb6_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb6_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pb6_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_pb6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
// static void setup_mmap_pread_pb6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_pb6_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pb6_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
static void setup_mmap_pread_pb6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_pb6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pb6_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_pb6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
static void setup_mmap_pread_pb6_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pb6_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_pb6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_pb6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_pb6_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_pb6_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_pb6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
// static void setup_mmap_pread_pb6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_pb6_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pb6_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_pb6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_pb6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_pb6_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pb6_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_pb6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_pb6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_pb6_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_pb6_8_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_pb6_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pb6_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb6_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_pb6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pb6_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb6_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb6_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_pb6_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pb6_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb6_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb6_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb6_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb6_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pb6_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_pb6_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb6_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pb6_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_pb5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
static void setup_mmap_pread_pb5_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb5_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb5_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_pb5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
static void setup_mmap_pread_pb5_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb5_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pb5_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_pb5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_1_proc1
// static void setup_mmap_pread_pb5_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pb5_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_pb5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
static void setup_mmap_pread_pb5_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb5_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb5_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_pb5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
static void setup_mmap_pread_pb5_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb5_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb5_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_pb5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
static void setup_mmap_pread_pb5_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb5_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pb5_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_pb5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_pb5_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb5_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb5_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb5_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pb5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_pb5_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_pb5_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pb5_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_pb40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
static void setup_mmap_pread_pb40_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb40_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb40_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
// static void setup_mmap_pread_pb40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
static void setup_mmap_pread_pb40_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pb40_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pb40_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_pb40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb40_0_proc1
// static void setup_mmap_pread_pb40_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb40_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
// static void setup_mmap_pread_pb40_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb40_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb40_1_proc1
// static void setup_mmap_pread_pb40_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_pb40_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_96_common
// static void setup_mmap_pread_pb40_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb40_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_pb40_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pb40_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
static void setup_mmap_pread_pb40_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pb40_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb40_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_pb40_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pb40_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_106_common
// static void setup_mmap_pread_pb40_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb40_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_pb40_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb40_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb40_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb40_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pb40_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_pb40_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb40_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_pb40_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb40_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pb0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pb0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pbe_0_0
// static int test_mmap_pread_pb0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pb0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pb0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_pae_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_pread_pae_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
static void setup_mmap_pread_pae_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_pread_pae_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pae_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pae_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pae_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pae_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
static void setup_mmap_pread_pae_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_pae_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_0_proc0
// static void setup_mmap_pread_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pae_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pae_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pae_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pae_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pae_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
static void setup_mmap_pread_pae_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_pae_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pae_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pae_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pae_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pae_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_pae_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_pae_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_2_proc0
// static void setup_mmap_pread_pae_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_pae_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pae_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pad_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pad_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_proc0
// static void setup_mmap_pread_pad_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pad_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pad_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pad_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pad_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pad_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pad_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_pad_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pad_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pad_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pad_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pad_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_pad_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pad_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pad_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pad_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pad_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pad_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pad_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pad_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pad_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pad_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pad_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pad_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pad_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pad_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_pad_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pad_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_pad_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pad_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pad_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pac0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pac0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_proc0
// static void setup_mmap_pread_pac0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pac0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
// static void setup_mmap_pread_pac0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_proc0
// static void setup_mmap_pread_pac0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pac0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
static int test_mmap_pread_pac0_2_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 24576);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pac0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
static void setup_mmap_pread_pac0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pac0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_pac0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_pac0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pac0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_20_1
static void setup_mmap_pread_pac0_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_pread_pac0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 176128, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pac0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pac0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_3_common
static void setup_mmap_pread_pac0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pac0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pac0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_pac0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_pac0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pac0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_pac0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pac0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_pac0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pac0_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pac0_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pac0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pac0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pac0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pac0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pac0_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_pa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa6_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pa6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pa6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa6_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_pa6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pa6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa6_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa6_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pa6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_pa6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_pa6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pa6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_pa6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa6_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa6_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_pa6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_pa6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_pa6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_pa6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_pa6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa5_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pa5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pa5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pa5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pa5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa5_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa5_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pa5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pa5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pa5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_pa5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa5_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa5_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pa5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pa5_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pa5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pa5_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa5_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa5_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_5_1
// static void setup_mmap_pread_pa5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_pa5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
static void setup_mmap_pread_pa5_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pa5_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pa5_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa5_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pa5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_pa5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
static void setup_mmap_pread_pa5_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pa5_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pa5_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
static int test_mmap_pread_pa5_5_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 159744);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_pa5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_pa5_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pa5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_pa5_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa5_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa5_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa5_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_pa5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_pa5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pa5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pa5_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa5_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa40_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pa40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pa40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pa40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pa40_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa40_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa40_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pa40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_3_common
// static void setup_mmap_pread_pa40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
static void setup_mmap_pread_pa40_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_pa40_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_pa40_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
static int test_mmap_pread_pa40_2_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 8192);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
static void setup_mmap_pread_pa40_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_pread_pa40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pa40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_pa40_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa40_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa40_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_pa40_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_pa40_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pa40_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_pa40_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa40_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa40_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_12_1
static void setup_mmap_pread_pa40_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_pread_pa40_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_pa40_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_1_proc1
// static void setup_mmap_pread_pa40_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_pa40_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa40_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_12_1
// static void setup_mmap_pread_pa40_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_pa40_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_pa40_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_proc1
// static void setup_mmap_pread_pa40_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa40_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa40_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa40_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_pa40_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_pa40_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pa40_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_pa40_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa40_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_pa0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_pae_0_0
// static int test_mmap_pread_pa0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p9c_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_pread_p9c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p9c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p9c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_1_proc0
// static void setup_mmap_pread_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p9c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p9c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p9c_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p9c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p9c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p9c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_4_proc0
// static void setup_mmap_pread_p9c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p9c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p9c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p9a_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p9a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p9a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p9a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_2_proc0
// static void setup_mmap_pread_p9a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p9a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p9a_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p9a_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p9a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p9a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p9a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p9a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p9a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p9a_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p98_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p98_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_2_proc0
// static void setup_mmap_pread_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p98_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p98_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p98_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p98_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p90_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p90_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p90_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p90_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p90_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p90_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p90_1_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p90_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p8c_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p8c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p8c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p8c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p8c_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p8c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p8c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p8c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p8c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p8c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p8c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p8a_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p8a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p8a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p8a_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p8a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p88_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p88_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p88_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p88_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p88_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p88_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p88_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p80_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p9c_0_0
// static int test_mmap_pread_p80_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p80_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p80_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p7c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p7c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p7c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p7c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p7c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_1_proc0
// static void setup_mmap_pread_p7c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p7c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_2_proc0
// static void setup_mmap_pread_p7c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p7c_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p7c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p7c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p7c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p7c_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_2_proc0
// static void setup_mmap_pread_p7c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p7c_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_1_proc0
// static void setup_mmap_pread_p7c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p7c_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_3_proc0
// static void setup_mmap_pread_p7c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p7c_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_4_proc0
// static void setup_mmap_pread_p7c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p7c_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_3_proc0
// static void setup_mmap_pread_p7c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p7c_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p7c_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p7c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p7c_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_4_proc0
// static void setup_mmap_pread_p7c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p7c_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p7c_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_proc0
// static void setup_mmap_pread_p76_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p76_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_proc0
// static void setup_mmap_pread_p76_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p76_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_2_proc0
// static void setup_mmap_pread_p76_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p76_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_proc0
// static void setup_mmap_pread_p76_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p76_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_2_proc0
// static void setup_mmap_pread_p76_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p76_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p76_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_10_proc0
// static void setup_mmap_pread_p76_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p76_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
static void setup_mmap_pread_p76_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_p76_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p76_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p76_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_10_proc0
// static void setup_mmap_pread_p76_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p76_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p76_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_p76_7_proc0
// static void setup_mmap_pread_p76_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p76_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p76_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p76_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p76_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p76_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_29_proc0
// static void setup_mmap_pread_p76_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p76_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p76_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_p76_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p76_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p76_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p76_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_p76_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p76_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p76_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p76_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p76_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p76_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p76_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_29_proc0
// static void setup_mmap_pread_p76_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p76_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p76_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p76_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_p76_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p76_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p76_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p76_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p76_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p76_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_p76_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p76_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p76_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p72_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_proc0
// static void setup_mmap_pread_p72_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_3_common
// static void setup_mmap_pread_p72_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_proc0
// static void setup_mmap_pread_p72_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p72_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p72_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_2_proc0
// static void setup_mmap_pread_p72_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_4_common
// static void setup_mmap_pread_p72_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_29_proc0
// static void setup_mmap_pread_p72_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p72_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
// static void setup_mmap_pread_p72_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_proc0
// static void setup_mmap_pread_p72_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p72_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p72_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p72_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p72_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_2_proc0
// static void setup_mmap_pread_p72_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
// static void setup_mmap_pread_p72_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_0_proc0
// static void setup_mmap_pread_p72_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p72_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_46_common
// static void setup_mmap_pread_p72_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbc0_1_proc0
// static void setup_mmap_pread_p72_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p72_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
// static void setup_mmap_pread_p72_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_0_proc0
// static void setup_mmap_pread_p72_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p72_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p72_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_46_common
// static void setup_mmap_pread_p72_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_1_proc0
// static void setup_mmap_pread_p72_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p72_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_3_common
// static void setup_mmap_pread_p72_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_29_proc0
// static void setup_mmap_pread_p72_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p72_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p72_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p72_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pb40_5_common
// static void setup_mmap_pread_p72_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_p72_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p72_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pb40_5_common
// static void setup_mmap_pread_p72_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_p72_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p72_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p72_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p72_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p72_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_p72_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_p72_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p72_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p72_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_proc0
// static void setup_mmap_pread_p72_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p72_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p72_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p72_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p72_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p72_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p72_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p72_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_105_common
// static void setup_mmap_pread_p72_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_p72_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p72_19_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p72_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p68_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p68_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p68_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p68_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p68_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p68_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p68_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p68_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p68_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p68_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p68_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p68_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p68_2_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p68_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p68_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p68_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p68_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p68_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p68_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p68_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p68_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p5c_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p5c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p5c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p5c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p5c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p5c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p5c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p5c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p5c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p5c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p5c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p5c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p5c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p5c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p5c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p5c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p5c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p5c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p5c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p5c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p5c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p5c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p5c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p5c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p5c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p5c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p5c_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p5c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p56_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p56_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p56_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p56_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p56_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p56_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p56_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p56_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p56_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p56_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p56_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p56_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p56_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p56_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p56_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p56_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p56_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p56_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p56_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p56_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p56_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p56_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p56_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p56_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p56_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p56_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p56_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p56_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p52_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p52_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p52_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p52_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p52_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p52_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p52_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p52_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p52_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p52_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p52_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p52_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p52_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p52_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p52_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p52_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p52_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p52_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p52_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p52_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p52_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p52_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p52_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p52_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p52_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p52_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p52_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p52_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p48_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_0_0
// static int test_mmap_pread_p48_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p48_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p48_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p48_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p7c_3_0
// static int test_mmap_pread_p48_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p48_1_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p48_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p3e_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_pread_p3e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p3e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_0_proc0
// static void setup_mmap_pread_p3e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p3e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc0
// static void setup_mmap_pread_p3e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p3e_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p3e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc0
// static void setup_mmap_pread_p3e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p3e_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p3e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_3_proc0
// static void setup_mmap_pread_p3e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p3e_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p3e_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_4_proc0
// static void setup_mmap_pread_p3e_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p3e_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p3e_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_5_proc0
// static void setup_mmap_pread_p3e_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p3e_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p3e_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_3_proc0
// static void setup_mmap_pread_p3e_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p3e_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p3e_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_5_proc0
// static void setup_mmap_pread_p3e_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p3e_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p3e_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_4_proc0
// static void setup_mmap_pread_p3e_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_2_proc1
// static void setup_mmap_pread_p3e_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p3e_8_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p3e_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_0_proc0
// static void setup_mmap_pread_p3e_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p3e_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p3e_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_6_proc0
// static void setup_mmap_pread_p3e_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3e_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p3e_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_7_proc0
// static void setup_mmap_pread_p3e_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3e_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p3e_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_7_proc0
// static void setup_mmap_pread_p3e_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p3e_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p3e_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_8_proc0
// static void setup_mmap_pread_p3e_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3e_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p3e_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_8_proc0
// static void setup_mmap_pread_p3e_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p3e_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p3e_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p3e_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbe_6_proc0
// static void setup_mmap_pread_p3e_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p3e_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p3e_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p3e_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p3e_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3e_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3e_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3e_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p3e_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p3e_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p3e_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3e_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3e_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p3d_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_0_proc0
// static void setup_mmap_pread_p3d_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3d_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p3d_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_1_proc0
// static void setup_mmap_pread_p3d_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p3d_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p3d_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_5_proc0
// static void setup_mmap_pread_p3d_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3d_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p3d_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_2_proc0
// static void setup_mmap_pread_p3d_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p3d_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p3d_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_p3d_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3d_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p3d_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_p3d_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p3d_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p3d_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_6_proc0
// static void setup_mmap_pread_p3d_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3d_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3d_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3d_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p3d_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p3d_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_7_proc0
// static void setup_mmap_pread_p3d_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3d_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p3d_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_p3c0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf0_7_proc0
// static void setup_mmap_pread_p3c0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3c0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
// static void setup_mmap_pread_p3c0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbc0_1_proc0
// static void setup_mmap_pread_p3c0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p3c0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
static void setup_mmap_pread_p3c0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_pread_p3c0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3c0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
// static void setup_mmap_pread_p3c0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbc0_2_proc0
// static void setup_mmap_pread_p3c0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p3c0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_105_common
// static void setup_mmap_pread_p3c0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_31_proc0
// static void setup_mmap_pread_p3c0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3c0_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
static void setup_mmap_pread_p3c0_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_pread_p3c0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf4_30_proc0
// static void setup_mmap_pread_p3c0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p3c0_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_105_common
// static void setup_mmap_pread_p3c0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_6_proc0
// static void setup_mmap_pread_p3c0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p3c0_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p3c0_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p3c0_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p3c0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pb40_5_common
// static void setup_mmap_pread_p3c0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pbd_7_proc0
// static void setup_mmap_pread_p3c0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p3c0_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p3c0_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p38_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p38_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p38_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p38_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p38_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p38_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p36_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p36_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p36_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
// static void setup_mmap_pread_p36_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_p36_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p36_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p36_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
// static void setup_mmap_pread_p36_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_p36_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p36_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p36_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_p36_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_p36_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p36_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p36_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
// static void setup_mmap_pread_p36_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_p36_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p36_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_2_common
// static void setup_mmap_pread_p36_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_p36_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_p36_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_final
// static void setup_mmap_pread_p36_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p36_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc0
// static void setup_mmap_pread_p36_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_p36_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p36_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p36_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_p36_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_1_proc1
// static void setup_mmap_pread_p36_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p36_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_9_common
// static void setup_mmap_pread_p36_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_3_proc0
// static void setup_mmap_pread_p36_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb6_4_proc1
// static void setup_mmap_pread_p36_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_9_final
// static void setup_mmap_pread_p36_8_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_mmap_pread_pbe_2_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p36_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p36_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p36_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p36_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p36_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p36_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p36_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p36_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p36_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p36_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p36_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p36_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p36_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p36_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p36_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p36_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbe_1_common
// static void setup_mmap_pread_p36_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p36_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p36_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p35_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p35_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p35_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p35_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p35_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p35_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_1_proc1
// static void setup_mmap_pread_p35_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p35_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p35_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p35_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_1_proc1
// static void setup_mmap_pread_p35_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p35_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p35_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p35_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p35_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p35_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p35_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p35_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_4_proc1
// static void setup_mmap_pread_p35_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p35_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p35_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p35_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_p35_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p35_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_31_common
// static void setup_mmap_pread_p35_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p35_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p35_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p35_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p35_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p35_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p35_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf4_28_common
// static void setup_mmap_pread_p35_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p35_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_p35_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p35_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_7_common
// static void setup_mmap_pread_p340_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p340_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb40_0_proc1
// static void setup_mmap_pread_p340_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p340_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
// static void setup_mmap_pread_p340_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p340_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb40_1_proc1
// static void setup_mmap_pread_p340_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p340_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_9_common
// static void setup_mmap_pread_p340_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p340_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb40_1_proc1
// static void setup_mmap_pread_p340_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p340_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_106_common
// static void setup_mmap_pread_p340_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p340_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p340_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p340_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p340_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_13_common
// static void setup_mmap_pread_p340_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p340_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p340_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p340_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pbc0_7_common
// static void setup_mmap_pread_p340_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p340_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_p340_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_10_final
// static void setup_mmap_pread_p340_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf0_106_common
// static void setup_mmap_pread_p340_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p340_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p340_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p340_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p340_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p340_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p340_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pb40_5_common
// static void setup_mmap_pread_p340_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p340_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_5_proc1
// static void setup_mmap_pread_p340_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p340_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p30_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p30_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p30_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p3e_0_0
// static int test_mmap_pread_p30_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p30_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p30_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2f_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2f_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_0_proc0
// static void setup_mmap_pread_p2f_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_0_proc0
// static void setup_mmap_pread_p2f_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_2_proc0
// static void setup_mmap_pread_p2f_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_2_proc0
// static void setup_mmap_pread_p2f_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_2_proc0
// static void setup_mmap_pread_p2f_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2f_5_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2f_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_0_proc0
// static void setup_mmap_pread_p2f_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_0_proc0
// static void setup_mmap_pread_p2f_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_2_proc0
// static void setup_mmap_pread_p2f_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_2_proc0
// static void setup_mmap_pread_p2f_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_2_proc0
// static void setup_mmap_pread_p2f_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_2_proc0
// static void setup_mmap_pread_p2f_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_3_proc0
// static void setup_mmap_pread_p2f_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p2f_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_3_proc0
// static void setup_mmap_pread_p2f_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p2f_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pae_2_proc0
// static void setup_mmap_pread_p2f_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2f_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_3_proc0
// static void setup_mmap_pread_p2f_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2f_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2f_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p2f_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p2f_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_3_proc0
// static void setup_mmap_pread_p2f_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p2f_15_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p2f_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_proc0
// static void setup_mmap_pread_p2d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_proc0
// static void setup_mmap_pread_p2d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p2d8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_3_proc0
// static void setup_mmap_pread_p2d8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_4_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_p2d8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p2d8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_3_proc0
// static void setup_mmap_pread_p2d8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_5_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x27000UL);
  
  return xerrno(r);
}
static int test_mmap_pread_p2d8_5_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 163840);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p2d8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
static int test_mmap_pread_p2d8_6_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 4096);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p2d8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p76_10_proc0
// static void setup_mmap_pread_p2d8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_6_proc0
// static void setup_mmap_pread_p2d8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p2d8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_5_proc0
// static void setup_mmap_pread_p2d8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_11_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_6_proc0
// static void setup_mmap_pread_p2d8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p2d8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_5_proc0
// static void setup_mmap_pread_p2d8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_6_proc0
// static void setup_mmap_pread_p2d8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p2d8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_5_proc0
// static void setup_mmap_pread_p2d8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_6_proc0
// static void setup_mmap_pread_p2d8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p2d8_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_5_proc0
// static void setup_mmap_pread_p2d8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2d8_6_1
// static void setup_mmap_pread_p2d8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_1_proc0
// static void setup_mmap_pread_p2d8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_18_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x28000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_p2d8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_5_0
// static int test_mmap_pread_p2d8_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_p2d8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_18_proc0
// static void setup_mmap_pread_p2d8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_5_0
// static int test_mmap_pread_p2d8_20_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_p2d8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_p2d8_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_21_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_7_proc0
// static void setup_mmap_pread_p2d8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_22_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_7_proc0
// static void setup_mmap_pread_p2d8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
static void setup_mmap_pread_p2d8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2d8_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_24_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2d8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2d8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_4_0
// static int test_mmap_pread_p2d8_26_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 31621120);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_8_1
// static void setup_mmap_pread_p2d8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_27_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p76_10_proc0
// static void setup_mmap_pread_p2d8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2d8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_29_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2d8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_30_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_30_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
// static void setup_mmap_pread_p2d8_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_31_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p2d8_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_32_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2d8_32_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2d8_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2d8_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2d8_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
// static void setup_mmap_pread_p2d8_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_35_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2d8_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_36_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p2d8_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_37_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2d8_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2d8_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_38_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x28000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_38_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 163840);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2d8_5_1
// static void setup_mmap_pread_p2d8_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_18_proc0
// static void setup_mmap_pread_p2d8_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_38_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_39_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_39_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p2d8_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_39_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_40_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_40_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_proc0
// static void setup_mmap_pread_p2d8_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_40_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_41_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_41_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_42_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2d8_42_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p2d8_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p2d8_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_42_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_43_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_18_0
// static int test_mmap_pread_p2d8_43_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_32_1
// static void setup_mmap_pread_p2d8_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p2d8_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2d8_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_43_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_44_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
// static int test_mmap_pread_p2d8_44_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p2d8_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_44_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_8_proc0
// static void setup_mmap_pread_p2d8_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_45_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_45_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 163840);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2d8_5_1
// static void setup_mmap_pread_p2d8_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_45_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_2_proc0
// static void setup_mmap_pread_p2d8_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_45_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2d8_46_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
static int test_mmap_pread_p2d8_46_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 8192);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p2d8_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2d8_46_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_7_proc0
// static void setup_mmap_pread_p2d8_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_46_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2d8_47_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x29000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2d8_47_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 163840);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2d8_5_1
// static void setup_mmap_pread_p2d8_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p2d8_47_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_18_proc0
// static void setup_mmap_pread_p2d8_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2d8_47_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2d8_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2c8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_proc0
// static void setup_mmap_pread_p2c8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2c8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
// static void setup_mmap_pread_p2c8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_proc0
// static void setup_mmap_pread_p2c8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2c8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2c8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_3_common
// static void setup_mmap_pread_p2c8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_proc0
// static void setup_mmap_pread_p2c8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p2c8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2c8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
// static void setup_mmap_pread_p2c8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_95_common
static void setup_mmap_pread_p2c8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p2c8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_4_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_p2c8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_4_common
static void setup_mmap_pread_p2c8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2c8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2c8_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
// static void setup_mmap_pread_p2c8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2c8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_6_proc0
// static void setup_mmap_pread_p2c8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p2c8_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_p2c8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_p2c8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p2c8_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_20_1
// static void setup_mmap_pread_p2c8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_4_common
// static void setup_mmap_pread_p2c8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 176128, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_4_proc0
// static void setup_mmap_pread_p2c8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_8_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p2c8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p2c8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p2c8_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p2c8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p2c8_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
static void setup_mmap_pread_p2c8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2c8_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
// static void setup_mmap_pread_p2c8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_11_proc0
// static void setup_mmap_pread_p2c8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p2c8_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_13_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d6000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
static void setup_mmap_pread_p2c8_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p2c8_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2c8_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_41_proc0
// static void setup_mmap_pread_p2c8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p2c8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_10_proc0
// static void setup_mmap_pread_p2c8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p2c8_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
// static void setup_mmap_pread_p2c8_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_4_proc0
// static void setup_mmap_pread_p2c8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p2c8_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p2c8_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p2c8_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_16_proc0
// static void setup_mmap_pread_p2c8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p2c8_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p2c8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p2c8_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p2c8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_20_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p2c8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p2c8_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p2c8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2c8_21_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_proc0
// static void setup_mmap_pread_p2c8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2c8_22_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2c8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p2c8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_24_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
// static void setup_mmap_pread_p2c8_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2c8_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_8_proc0
// static void setup_mmap_pread_p2c8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
// static int test_mmap_pread_p2c8_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
// static void setup_mmap_pread_p2c8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p2c8_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_8_proc0
// static void setup_mmap_pread_p2c8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
static int test_mmap_pread_p2c8_26_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(11, data, 4096, 8192);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p2c8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
static void setup_mmap_pread_p2c8_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5074944, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_27_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2299000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
// static void setup_mmap_pread_p2c8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2c8_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pad_7_proc0
// static void setup_mmap_pread_p2c8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
// static int test_mmap_pread_p2c8_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2c8_26_1
// static void setup_mmap_pread_p2c8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p2c8_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_8_proc0
// static void setup_mmap_pread_p2c8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_29_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x6000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 24576);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pac0_2_1
// static void setup_mmap_pread_p2c8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
static void setup_mmap_pread_p2c8_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_30_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
  
  return xerrno(r);
}
static int test_mmap_pread_p2c8_30_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 16384);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p2c8_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_4_common
// static void setup_mmap_pread_p2c8_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p2c8_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_31_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2c8_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2c8_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_32_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x9000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_32_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 24576);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pac0_2_1
// static void setup_mmap_pread_p2c8_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
static void setup_mmap_pread_p2c8_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 32768, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36864, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
// static int test_mmap_pread_p2c8_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p2c8_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
static void setup_mmap_pread_p2c8_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9994240, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p2c8_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p2c8_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2c8_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p2c8_35_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p2c8_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2c8_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_36_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
// static int test_mmap_pread_p2c8_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p2c8_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p2c8_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p2c8_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_37_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p2c8_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_20_1
// static void setup_mmap_pread_p2c8_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_4_common
// static void setup_mmap_pread_p2c8_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_proc0
// static void setup_mmap_pread_p2c8_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_38_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x7000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_38_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_p2c8_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
static void setup_mmap_pread_p2c8_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_38_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_39_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_39_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p2c8_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_8_proc0
// static void setup_mmap_pread_p2c8_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_39_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_40_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p2c8_40_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_17_1
// static void setup_mmap_pread_p2c8_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p2c8_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2c8_29_proc0
// static void setup_mmap_pread_p2c8_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_40_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_41_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p2c8_41_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_11_1
// static void setup_mmap_pread_p2c8_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
static void setup_mmap_pread_p2c8_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_42_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x6000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_42_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 24576);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pac0_2_1
// static void setup_mmap_pread_p2c8_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
static void setup_mmap_pread_p2c8_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5091328, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5095424, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p2c8_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_42_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_43_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_43_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_22_1
// static void setup_mmap_pread_p2c8_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2c8_43_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p2d8_6_proc0
// static void setup_mmap_pread_p2c8_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_43_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_44_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2c8_44_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p2c8_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p2c8_44_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_7_proc0
// static void setup_mmap_pread_p2c8_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p2c8_45_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x5000UL);
  
  return xerrno(r);
}
// static int test_mmap_pread_p2c8_45_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_12_1
// static void setup_mmap_pread_p2c8_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p2c8_45_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_proc1
// static void setup_mmap_pread_p2c8_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_45_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_46_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p2c8_46_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p2c8_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p2c8_46_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p2c8_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_46_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2c8_47_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_45_0
// static int test_mmap_pread_p2c8_47_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_12_1
// static void setup_mmap_pread_p2c8_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p2c8_47_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p2c8_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2c8_47_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2c8_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2a_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p2a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p2a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2a_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2a_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p2a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p2a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2a_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2a_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p2a_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p2a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2a_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p2a_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p2a_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p2a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p2a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p2a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p2a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p2a_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_0_proc1
// static void setup_mmap_pread_p27_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p27_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p27_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_0_common
// static void setup_mmap_pread_p27_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p27_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p27_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p27_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p27_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pae_1_common
// static void setup_mmap_pread_p27_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pb5_3_proc1
// static void setup_mmap_pread_p27_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p27_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf4_12_final
// static void setup_mmap_pread_p27_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p258_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
static void setup_mmap_pread_p258_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p258_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p258_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_1_proc1
// static void setup_mmap_pread_p258_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
static int test_mmap_pread_p258_3_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 4096);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p258_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
static void setup_mmap_pread_p258_10_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p258_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_10_proc1
// static void setup_mmap_pread_p258_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_10_proc1
// static void setup_mmap_pread_p258_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_10_proc1
// static void setup_mmap_pread_p258_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_10_proc1
// static void setup_mmap_pread_p258_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_45_0
// static int test_mmap_pread_p258_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa5_5_1
// static void setup_mmap_pread_p258_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_5_proc0
// static void setup_mmap_pread_p258_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_45_0
// static int test_mmap_pread_p258_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa5_5_1
// static void setup_mmap_pread_p258_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_1_common
// static void setup_mmap_pread_p258_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_5_proc0
static void setup_mmap_pread_p258_18_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p258_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p258_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_18_0
// static int test_mmap_pread_p258_19_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa5_5_1
// static void setup_mmap_pread_p258_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p258_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p258_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p258_20_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_5_0
static int test_mmap_pread_p258_21_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 163840);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p258_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_5_proc0
// static void setup_mmap_pread_p258_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_22_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_24_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_45_0
// static int test_mmap_pread_p258_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 163840);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_21_1
// static void setup_mmap_pread_p258_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
static int test_mmap_pread_p258_26_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 8192);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p258_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_27_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_3_1
// static void setup_mmap_pread_p258_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_29_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p258_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_30_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_45_0
// static int test_mmap_pread_p258_30_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa5_5_1
// static void setup_mmap_pread_p258_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
static void setup_mmap_pread_p258_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p258_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_31_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_32_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p258_32_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p258_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_45_0
// static int test_mmap_pread_p258_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 163840);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p258_21_1
// static void setup_mmap_pread_p258_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 163840, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_30_proc0
// static void setup_mmap_pread_p258_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_18_0
// static int test_mmap_pread_p258_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 159744);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa5_5_1
// static void setup_mmap_pread_p258_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 163840, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_30_proc0
// static void setup_mmap_pread_p258_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_2_proc0
// static void setup_mmap_pread_p258_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
static int test_mmap_pread_p258_35_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 31625216);
  expect_result("r", r, 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p258_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
static void setup_mmap_pread_p258_35_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p258_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_36_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_43_0
// static int test_mmap_pread_p258_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p258_37_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p258_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p258_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p258_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p258_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p258_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p258_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p248_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p248_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p248_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_35_proc1
// static void setup_mmap_pread_p248_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
// static void setup_mmap_pread_p248_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p248_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_1_common
// static void setup_mmap_pread_p248_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_5_proc1
// static void setup_mmap_pread_p248_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pa5_3_proc1
// static void setup_mmap_pread_p248_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p248_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p248_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2c8_30_1
// static void setup_mmap_pread_p248_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_4_common
// static void setup_mmap_pread_p248_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_45_0
// static int test_mmap_pread_p248_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 20480);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_12_1
// static void setup_mmap_pread_p248_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_4_common
// static void setup_mmap_pread_p248_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_proc1
static void setup_mmap_pread_p248_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p248_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p248_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p248_6_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p248_7_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p248_8_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p248_9_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p248_10_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x6000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_29_0
// static int test_mmap_pread_p248_11_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2c8_30_1
// static void setup_mmap_pread_p248_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pac0_4_common
// static void setup_mmap_pread_p248_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
static void setup_mmap_pread_p248_11_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p248_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_4_0
// static int test_mmap_pread_p248_12_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
// static void setup_mmap_pread_p248_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
static void setup_mmap_pread_p248_12_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p248_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p248_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p248_13_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p248_14_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_12_common
// static void setup_mmap_pread_p248_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p248_12_proc1
// static void setup_mmap_pread_p248_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p248_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_24_0
// static int test_mmap_pread_p248_15_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_24_0
// static int test_mmap_pread_p248_16_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
// static void setup_mmap_pread_p248_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_1_proc1
// static void setup_mmap_pread_p248_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p248_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p248_17_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p248_18_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_14_common
// static void setup_mmap_pread_p248_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_1_proc1
// static void setup_mmap_pread_p248_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p248_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
static int test_mmap_pread_p248_19_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p248_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p248_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p248_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_30_0
// static int test_mmap_pread_p248_20_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_24_0
// static int test_mmap_pread_p248_21_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 16384);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p2c8_30_1
// static void setup_mmap_pread_p248_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_20_common
static void setup_mmap_pread_p248_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36290560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_mmap_pread_p248_21_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_pread_p248_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_pread_pf4_9_final
// static void setup_mmap_pread_p248_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_1_0
// static int test_mmap_pread_p248_22_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_39_0
// static int test_mmap_pread_p248_23_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p248_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p248_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_24_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_8_0
// static int test_mmap_pread_p248_24_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p248_25_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p248_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p248_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p248_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x6000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_42_0
static int test_mmap_pread_p248_26_1(void) {
  char *data = datavalbuf;
  ssize_t r = pread(10, data, 4096, 24576);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r <= 0) return xerrno(r);
  return data[0];
}
// static void setup_mmap_pread_p248_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
// static void setup_mmap_pread_p248_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p248_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_12_proc1
// static void setup_mmap_pread_p248_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_27_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p248_27_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p248_19_1
// static void setup_mmap_pread_p248_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p248_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p248_28_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_29_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x6000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_29_0
// static int test_mmap_pread_p248_29_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 24576);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p248_26_1
// static void setup_mmap_pread_p248_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
// static void setup_mmap_pread_p248_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_proc1
// static void setup_mmap_pread_p248_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_proc1
// static void setup_mmap_pread_p248_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_30_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_43_0
// static int test_mmap_pread_p248_30_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p248_19_1
// static void setup_mmap_pread_p248_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p248_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_31_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x7000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_38_0
// static int test_mmap_pread_p248_31_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 24576);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p248_26_1
// static void setup_mmap_pread_p248_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_common
// static void setup_mmap_pread_p248_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_13_proc1
// static void setup_mmap_pread_p248_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p248_11_proc1
// static void setup_mmap_pread_p248_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_32_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p248_32_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p248_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p248_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_43_0
// static int test_mmap_pread_p248_33_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_3_proc1
// static void setup_mmap_pread_p248_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2d8_11_0
// static int test_mmap_pread_p248_34_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p248_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p248_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_43_0
// static int test_mmap_pread_p248_35_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_p248_19_1
// static void setup_mmap_pread_p248_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_99_common
// static void setup_mmap_pread_p248_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p248_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_p258_10_proc1
// static void setup_mmap_pread_p248_35_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_1_final
// static void setup_mmap_pread_p248_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_36_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_39_0
// static int test_mmap_pread_p248_36_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 12288);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_5_1
// static void setup_mmap_pread_p248_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_11_common
// static void setup_mmap_pread_p248_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_18_proc1
// static void setup_mmap_pread_p248_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p248_37_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2c8_43_0
// static int test_mmap_pread_p248_37_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 8192);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pa40_2_1
// static void setup_mmap_pread_p248_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pa40_2_common
// static void setup_mmap_pread_p248_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p248_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p248_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p22_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p22_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p22_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p22_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p22_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p22_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p22_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p22_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p22_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p22_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p22_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p22_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p22_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p22_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p22_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_0_0
// static int test_mmap_pread_p22_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p22_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p22_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p22_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p22_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p22_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p22_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p2f_5_0
// static int test_mmap_pread_p22_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p22_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_22_common
// static void setup_mmap_pread_p22_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p22_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p22_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p22_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
static int test_mmap_pread_p1c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_pread_p1c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p1c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p1c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_1_proc0
// static void setup_mmap_pread_p1c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p1c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p1c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p1c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p1c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_1_1
// static void setup_mmap_pread_p1c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p1c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_4_proc0
// static void setup_mmap_pread_p1c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p1c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p1c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p1a_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p1a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p1a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p1a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_2_proc0
// static void setup_mmap_pread_p1a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p1a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p1a_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p1a_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p1a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf4_0_1
// static void setup_mmap_pread_p1a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p1a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p1a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p1a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p1a_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p18_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p18_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_2_proc0
// static void setup_mmap_pread_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p18_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p18_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p18_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p18_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf0_0_1
// static void setup_mmap_pread_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_10_proc0
// static void setup_mmap_pread_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p18_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p18_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p10_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p10_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(11, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_3_1
// static void setup_mmap_pread_p10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p10_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p10_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p10_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p10_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p10_1_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p10_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p0c_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p0c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p0c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p0c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p0c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc0
// static void setup_mmap_pread_p0c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p0c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p0c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p0c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pf8_0_1
// static void setup_mmap_pread_p0c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_pread_pf8_0_common
// static void setup_mmap_pread_p0c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pf8_0_proc1
// static void setup_mmap_pread_p0c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_pread_pd8_4_proc1
// static void setup_mmap_pread_p0c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_final
// static void setup_mmap_pread_p0c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_pread_pf8_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p0a_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p0a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p0a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p0a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p0a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd4_0_proc1
// static void setup_mmap_pread_p0a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p0a_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p0a_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p0a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd4_0_1
// static void setup_mmap_pread_p0a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_pread_pf4_0_common
// static void setup_mmap_pread_p0a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p0a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p0a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p0a_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p08_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p08_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p08_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_0_common
// static void setup_mmap_pread_p08_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p08_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pd0_0_proc1
// static void setup_mmap_pread_p08_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p08_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p08_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p08_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pd0_0_1
// static void setup_mmap_pread_p08_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_pread_pf0_17_common
// static void setup_mmap_pread_p08_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p08_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_pread_pe0_3_proc0
// static void setup_mmap_pread_p08_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_pread_pf4_0_final
// static void setup_mmap_pread_p08_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

/*
 * calls: mmap pread
 */
// static int test_mmap_pread_p00_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_pread_p1c_0_0
// static int test_mmap_pread_p00_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = pread(10, data, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_mmap_pread_pe0_0_1
// static void setup_mmap_pread_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_pread_pe0_0_common
// static void setup_mmap_pread_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_pread_pf4_0_proc1
// static void setup_mmap_pread_p00_0_final(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal
// static void setup_mmap_pread_p00_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_pread_pf4_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-mmap_pread_pf8_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_2",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_3",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_4",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_4_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_5",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_5_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_6",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_7",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_8",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_8_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_9",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_9_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_10",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_10_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_11",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_11_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_12",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_12_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_13",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_13_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_14",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_14_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_15",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_15_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_16",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_16_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_17",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_17_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_18",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_18_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_19",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_19_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_20",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_20_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_21",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_21_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_22",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_22_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_23",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_23_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_24",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_24_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_25",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_25_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_26",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_26_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_27",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_27_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_28",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_28_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_29",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_29_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_30",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_31",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_32",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_32_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_33",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_33_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_34",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pf8_34_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_35",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_35_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_36",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_36_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_37",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_37_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf8_38",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_38_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_1",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_3",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_4",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_6",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_7",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_8",
    &setup_mmap_pread_pf4_8_common,
    { { &setup_mmap_pread_pf4_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_9",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_9_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_10",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_10_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_11",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_11_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_12",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_12_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_13",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_13_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_14",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_14_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_15",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_15_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_16",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_16_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_17",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_17_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_18",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_18_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_19",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_19_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_20",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_20_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_21",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_21_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_22",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_22_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_23",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_23_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_24",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_24_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_25",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_25_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_26",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_26_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_27",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_27_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_28",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf4_28_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_29",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_30",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_31",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_32",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_32_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_33",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_33_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_34",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_34_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_35",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_35_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_36",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_36_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_37",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_37_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_38",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_38_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_39",
    &setup_mmap_pread_pf4_39_common,
    { { &setup_mmap_pread_pf4_39_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_39_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_40",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_40_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_41",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_41_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_42",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_42_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_43",
    &setup_mmap_pread_pf4_8_common,
    { { &setup_mmap_pread_pf4_43_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_44",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_44_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_45",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_45_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_46",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_46_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_47",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_47_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_48",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_48_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_49",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_49_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_50",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_50_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_51",
    &setup_mmap_pread_pf4_51_common,
    { { &setup_mmap_pread_pf4_51_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_52",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_52_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_53",
    &setup_mmap_pread_pf4_53_common,
    { { &setup_mmap_pread_pf4_53_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_54",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_54_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_55",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_55_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_56",
    &setup_mmap_pread_pf4_56_common,
    { { &setup_mmap_pread_pf4_56_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_57",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_57_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_58",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_58_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_59",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_59_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_60",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_60_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_61",
    &setup_mmap_pread_pf4_39_common,
    { { &setup_mmap_pread_pf4_61_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_39_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_62",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_62_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_63",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_63_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_64",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_64_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_65",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_65_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_66",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_66_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_67",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_67_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_68",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_68_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_69",
    &setup_mmap_pread_pf4_8_common,
    { { &setup_mmap_pread_pf4_69_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_70",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_70_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_71",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_71_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_72",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_72_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_73",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_73_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_74",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_74_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_75",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_75_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_75_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_76",
    &setup_mmap_pread_pf4_39_common,
    { { &setup_mmap_pread_pf4_76_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_39_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_77",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_77_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_78",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_78_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_79",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_79_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_80",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_80_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_81",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_81_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_82",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_82_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_83",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_83_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_84",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_84_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_85",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_85_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_86",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_86_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_87",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_87_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_88",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_88_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_89",
    &setup_mmap_pread_pf4_8_common,
    { { &setup_mmap_pread_pf4_89_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_75_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_90",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_90_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_91",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_91_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_92",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_92_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_93",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_93_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_94",
    &setup_mmap_pread_pf4_39_common,
    { { &setup_mmap_pread_pf4_94_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_39_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_95",
    &setup_mmap_pread_pf4_38_common,
    { { &setup_mmap_pread_pf4_95_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_96",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_96_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_97",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pf4_97_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_98",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_98_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_99",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_99_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_100",
    &setup_mmap_pread_pf4_51_common,
    { { &setup_mmap_pread_pf4_100_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_101",
    &setup_mmap_pread_pf4_12_common,
    { { &setup_mmap_pread_pf4_101_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_102",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_102_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_103",
    &setup_mmap_pread_pf4_53_common,
    { { &setup_mmap_pread_pf4_103_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_104",
    &setup_mmap_pread_pf4_10_common,
    { { &setup_mmap_pread_pf4_104_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_105",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_105_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_106",
    &setup_mmap_pread_pf4_53_common,
    { { &setup_mmap_pread_pf4_106_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf4_107",
    &setup_mmap_pread_pf4_56_common,
    { { &setup_mmap_pread_pf4_107_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_1",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_2",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_3",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pf0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_4",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_5",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_6",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_7",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf0_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_8",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_9",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pf4_28_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_10",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_11",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_11_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_12",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_12_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_13",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_13_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_14",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pf0_14_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_15",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_15_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_16",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_16_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_17",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_17_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_18",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_18_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_19",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_19_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_20",
    &setup_mmap_pread_pf0_20_common,
    { { &setup_mmap_pread_pf0_20_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_20_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_21",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_21_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_22",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pf0_22_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_23",
    &setup_mmap_pread_pf0_23_common,
    { { &setup_mmap_pread_pf0_23_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_20_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_24",
    &setup_mmap_pread_pf0_24_common,
    { { &setup_mmap_pread_pf0_24_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_25",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_25_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_26",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_26_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_27",
    &setup_mmap_pread_pf0_27_common,
    { { &setup_mmap_pread_pf0_27_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_28",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_28_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_29",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_30",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_31",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_31_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_32",
    &setup_mmap_pread_pf0_32_common,
    { { &setup_mmap_pread_pf0_32_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_33",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_34",
    &setup_mmap_pread_pf0_32_common,
    { { &setup_mmap_pread_pf0_34_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_35",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_35_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_36",
    &setup_mmap_pread_pf0_32_common,
    { { &setup_mmap_pread_pf0_36_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_37",
    &setup_mmap_pread_pf0_37_common,
    { { &setup_mmap_pread_pf0_37_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf0_37_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_38",
    &setup_mmap_pread_pf0_32_common,
    { { &setup_mmap_pread_pf0_38_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_39",
    &setup_mmap_pread_pf0_24_common,
    { { &setup_mmap_pread_pf0_39_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_40",
    &setup_mmap_pread_pf0_27_common,
    { { &setup_mmap_pread_pf0_40_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_41",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_41_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_42",
    &setup_mmap_pread_pf0_42_common,
    { { &setup_mmap_pread_pf0_42_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_43",
    &setup_mmap_pread_pf0_43_common,
    { { &setup_mmap_pread_pf0_43_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf0_43_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_44",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_44_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_45",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_45_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_46",
    &setup_mmap_pread_pf0_46_common,
    { { &setup_mmap_pread_pf0_46_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_47",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_47_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_48",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_48_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_49",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pf0_49_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_50",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_50_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_51",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_51_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_52",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_52_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_53",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_53_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_54",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_54_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_55",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_55_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_56",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_56_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_57",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_57_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_58",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_58_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_59",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_59_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_60",
    &setup_mmap_pread_pf0_60_common,
    { { &setup_mmap_pread_pf0_60_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf0_60_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_61",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pf0_61_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_62",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pf0_62_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_63",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pf0_63_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_64",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_64_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_65",
    &setup_mmap_pread_pf0_46_common,
    { { &setup_mmap_pread_pf0_65_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_66",
    &setup_mmap_pread_pf0_66_common,
    { { &setup_mmap_pread_pf0_66_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf0_43_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_67",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_67_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_68",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_68_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_69",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_69_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_70",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_70_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_71",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_71_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_72",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_72_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_73",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_73_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_74",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_74_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_75",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_75_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_76",
    &setup_mmap_pread_pf0_76_common,
    { { &setup_mmap_pread_pf0_76_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_77",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_77_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_78",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_78_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_79",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_79_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_80",
    &setup_mmap_pread_pf0_15_common,
    { { &setup_mmap_pread_pf0_80_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_81",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_81_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_82",
    &setup_mmap_pread_pf0_24_common,
    { { &setup_mmap_pread_pf0_82_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_83",
    &setup_mmap_pread_pf0_46_common,
    { { &setup_mmap_pread_pf0_83_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_84",
    &setup_mmap_pread_pf0_84_common,
    { { &setup_mmap_pread_pf0_84_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_85",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_85_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_86",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_86_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_87",
    &setup_mmap_pread_pf0_27_common,
    { { &setup_mmap_pread_pf0_87_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_88",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_88_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_89",
    &setup_mmap_pread_pf0_32_common,
    { { &setup_mmap_pread_pf0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_90",
    &setup_mmap_pread_pf0_24_common,
    { { &setup_mmap_pread_pf0_90_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_91",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf0_91_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_92",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf0_92_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_93",
    &setup_mmap_pread_pf0_46_common,
    { { &setup_mmap_pread_pf0_93_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_94",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pf0_94_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_95",
    &setup_mmap_pread_pf0_95_common,
    { { &setup_mmap_pread_pf0_95_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_96",
    &setup_mmap_pread_pf0_96_common,
    { { &setup_mmap_pread_pf0_96_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_97",
    &setup_mmap_pread_pf0_97_common,
    { { &setup_mmap_pread_pf0_97_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_8_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_98",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pf0_98_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_99",
    &setup_mmap_pread_pf0_99_common,
    { { &setup_mmap_pread_pf4_58_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_100",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_100_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_101",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_101_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_102",
    &setup_mmap_pread_pf0_102_common,
    { { &setup_mmap_pread_pf0_102_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_39_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_103",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pf0_103_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_104",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pf0_104_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_105",
    &setup_mmap_pread_pf0_105_common,
    { { &setup_mmap_pread_pf0_105_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_106",
    &setup_mmap_pread_pf0_106_common,
    { { &setup_mmap_pread_pf0_106_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pf0_107",
    &setup_mmap_pread_pf0_107_common,
    { { &setup_mmap_pread_pf4_65_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_1",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pe0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_3",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_4",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_6",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pe0_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_7",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_8",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pe0_9",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_9_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_1_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_2",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_3",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pd8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_4",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_5",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pd8_3_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_6",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_6_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_7",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_7_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_8",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pd8_8_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_9",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_6_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_10",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_7_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_11",
    &setup_mmap_pread_pf8_10_common,
    { { &setup_mmap_pread_pd8_8_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_12",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_1_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd8_13",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_2_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_1_proc0 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_2_proc0 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_3",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_2_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_4",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_5",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pd4_5_proc0 }, { &setup_mmap_pread_pd4_5_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_6",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_6_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_7",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_7_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_8",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_5_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_9",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_9_proc0 }, { &setup_mmap_pread_pd4_5_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_10",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pd4_10_proc0 }, { &setup_mmap_pread_pd4_5_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_11",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_1_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_12",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_12_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_13",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_2_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_14",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pd4_14_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_15",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_2_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_16",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_6_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_17",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_17_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_18",
    &setup_mmap_pread_pf4_9_common,
    { { &setup_mmap_pread_pd4_18_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd4_19",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_5_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_1",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_1_proc0 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_2",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd0_2_proc0 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_3",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pd0_3_proc0 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_4",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_5",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pe0_6_proc0 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_6",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pd0_6_proc0 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_7",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_1_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_8",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd0_8_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_9",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pd0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_10",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_6_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_11",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pd0_11_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_12",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pd0_12_proc0 }, { &setup_mmap_pread_pd0_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_13",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_pd0_2_proc0 }, { &setup_mmap_pread_pd0_13_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_14",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_2_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_15",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd0_15_proc0 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_16",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_15_proc0 }, { &setup_mmap_pread_pd0_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_17",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_17_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_18",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd4_9_proc0 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pd0_19",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_5_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pc0_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pc0_1",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pe0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pc0_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pc0_3",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pe0_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pc0_4",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pf8_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_1",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_2",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_2_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_3",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_3_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_4",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_4_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_5",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_5_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_6",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_7",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_8",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_8_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_9",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_2_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_10",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_3_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_11",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_4_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_12",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_5_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_13",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_14",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_15",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_8_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_16",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbe_17",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_0",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pbd_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_1",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pbd_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_2",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pbd_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_3",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_4",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_5",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pbd_5_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_6",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pbd_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbd_7",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pbd_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_0",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf0_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_1",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pbc0_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_2",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pbc0_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_3",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_4",
    &setup_mmap_pread_pf0_96_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_5",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pbd_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_6",
    &setup_mmap_pread_pbc0_6_common,
    { { &setup_mmap_pread_pbd_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pbc0_7",
    &setup_mmap_pread_pbc0_7_common,
    { { &setup_mmap_pread_pbd_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb8_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb8_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_1",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_2",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_3",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_4",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_5",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_6",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_7",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_8",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_9",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_10",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_11",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_12",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_13",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_14",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb6_15",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_0",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_1",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_2",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_3",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_4",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_5",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_6",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb5_7",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_0",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb40_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_1",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb40_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_2",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb40_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_3",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb40_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_4",
    &setup_mmap_pread_pf0_96_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_5",
    &setup_mmap_pread_pb40_5_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_6",
    &setup_mmap_pread_pf0_106_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb40_7",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb0_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pb0_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pbe_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pae_0",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pae_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pae_1",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pae_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pae_2",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pae_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pae_3",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pae_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pad_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pad_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_3",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pad_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_4",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pad_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_6",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_7",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pad_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pad_8",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_1",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_2",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_pac0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pac0_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_3",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_4",
    &setup_mmap_pread_pac0_4_common,
    { { &setup_mmap_pread_pac0_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_20_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_5",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pac0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_6",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pac0_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_7",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pac0_8",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa8_0",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa6_0",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa6_1",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa6_2",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa6_3",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pa5_2_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_3",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pd4_5_proc1 }, { &setup_mmap_pread_pa5_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_4",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pa5_2_proc0 }, { &setup_mmap_pread_pa5_4_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pa5_5_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pa5_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa5_6",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_1",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pa40_1_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_2",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_3",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_4",
    &setup_mmap_pread_pa40_4_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_pa40_1_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_5",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_13_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa40_6",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_pa0_0",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_pae_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p9c_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p9c_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_4_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p9a_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p9a_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p98_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p98_1",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p90_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p90_1",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p8c_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p8c_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p8a_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p8a_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p88_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p88_1",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p80_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p9c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_2",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_3",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_4",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_5",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_6",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_7",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_4_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_8",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p7c_9",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_4_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_1",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_3",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_4",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_6",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_10_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_7",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_p76_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_8",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_10_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_9",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_p76_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_10",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p76_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_11",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_12",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_13",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_14",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_15",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_16",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_17",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pf4_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_18",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p76_19",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_1",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pf0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_2",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_3",
    &setup_mmap_pread_pa40_4_common,
    { { &setup_mmap_pread_pf4_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_4",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pf4_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_5",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p72_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_6",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pf0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_7",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pbd_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_8",
    &setup_mmap_pread_pf0_46_common,
    { { &setup_mmap_pread_pbc0_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_9",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pbd_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_10",
    &setup_mmap_pread_pf0_46_common,
    { { &setup_mmap_pread_pbd_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_11",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pf4_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_12",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_13",
    &setup_mmap_pread_pb40_5_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_14",
    &setup_mmap_pread_pb40_5_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_15",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_16",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_17",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_18",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p72_19",
    &setup_mmap_pread_pf0_105_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p68_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p68_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p68_2",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p68_3",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p5c_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p5c_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p5c_2",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p5c_3",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p56_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p56_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p56_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p56_3",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p52_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p52_1",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p52_2",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p52_3",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p48_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p7c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p48_1",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p7c_3_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_1",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_2_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_2",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_2_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_3",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_3_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_4",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_4_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_5",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pbe_5_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_6",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_3_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_7",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_5_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_8",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pbe_4_proc0 }, { &setup_mmap_pread_pbe_2_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_9",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_10",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_11",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_12",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_13",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pbe_8_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_14",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_8_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_15",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pbe_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_16",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3e_17",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_0",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pbd_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_1",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pbd_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_2",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pbd_5_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_3",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pbd_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_4",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_5",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_6",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pbd_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3d_7",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pbd_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_0",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf0_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_1",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pbc0_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_2",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_p3c0_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_3",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pbc0_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_4",
    &setup_mmap_pread_pf0_105_common,
    { { &setup_mmap_pread_pf4_31_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_5",
    &setup_mmap_pread_p3c0_5_common,
    { { &setup_mmap_pread_pf4_30_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_6",
    &setup_mmap_pread_pf0_105_common,
    { { &setup_mmap_pread_pbd_6_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p3c0_7",
    &setup_mmap_pread_pb40_5_common,
    { { &setup_mmap_pread_pbd_7_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p38_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p38_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_1",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_2",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_3",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_4",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_5",
    &setup_mmap_pread_pbe_2_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_2_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_6",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_1_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_7",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_1_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_8",
    &setup_mmap_pread_pbe_9_common,
    { { &setup_mmap_pread_pb6_3_proc0 }, { &setup_mmap_pread_pb6_4_proc1 } },
    &setup_mmap_pread_pbe_2_procfinal,
    &setup_mmap_pread_pbe_9_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_9",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_10",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_11",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_12",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_13",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_14",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p36_15",
    &setup_mmap_pread_pbe_1_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_0",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_1",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_2",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_3",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_4",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_5",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_6",
    &setup_mmap_pread_pf4_31_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p35_7",
    &setup_mmap_pread_pf4_28_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_0",
    &setup_mmap_pread_pf0_7_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb40_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_1",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb40_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_2",
    &setup_mmap_pread_pf0_9_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb40_1_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_3",
    &setup_mmap_pread_pf0_106_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_4",
    &setup_mmap_pread_pf0_13_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_5",
    &setup_mmap_pread_pbc0_7_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_10_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_6",
    &setup_mmap_pread_pf0_106_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_3_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p340_7",
    &setup_mmap_pread_pb40_5_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pb5_5_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p30_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p30_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pd8_4_proc1 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p3e_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_0",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pae_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_1",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pae_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_2",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pae_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_3",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_4",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_5",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pae_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_6",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pae_0_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_7",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_8",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pf8_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_9",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pae_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_10",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pae_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_11",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_12",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_13",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pae_2_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_14",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2f_15",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pf8_3_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_2",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_3",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pad_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_4",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pad_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_5_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_6",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_6_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_7",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p76_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_8",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_9",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_10",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pac0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_11",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_12",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pac0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_13",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_14",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pac0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_15",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_16",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pac0_5_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_17",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pad_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_6_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_18",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_18_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_18_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_19",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_18_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_20",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_p2d8_20_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_21",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pad_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_22",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pad_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_23",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_p2d8_23_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_24",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_25",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_26",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_26_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf4_8_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_27",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p76_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_28",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_29",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_30",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_5_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_31",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_32",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_33",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_34",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_5_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_35",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_36",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_37",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_38",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_18_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_38_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_39",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_40",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_41",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_41_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_42",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_43",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_43_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_18_0, 0, "mmap" },
      { &test_mmap_pread_pf4_32_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_44",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_45",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_45_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_46",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pad_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_46_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2d8_47",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p2d8_18_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_47_0, 0, "mmap" },
      { &test_mmap_pread_p2d8_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_1",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pf0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_2",
    &setup_mmap_pread_pf0_3_common,
    { { &setup_mmap_pread_pf0_1_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_3",
    &setup_mmap_pread_pf0_95_common,
    { { &setup_mmap_pread_p2c8_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_4",
    &setup_mmap_pread_pa40_4_common,
    { { &setup_mmap_pread_p2c8_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_5",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_6",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_p2c8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_7",
    &setup_mmap_pread_pac0_4_common,
    { { &setup_mmap_pread_pac0_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf0_20_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_8",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_9",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_9_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_10",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_11",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_p2c8_11_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_12",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_p2c8_11_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_13",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_p2c8_13_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_13_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_14",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_p2d8_41_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_15",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_16",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_16_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_17",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_p2c8_4_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_18",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_16_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_19",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_20",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_21",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_22",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_23",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_23_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_24",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_p2c8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_24_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_25",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_p2c8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_26",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_p2c8_26_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_p2c8_26_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_27",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pad_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_27_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_28",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_p2d8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_p2c8_26_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_29",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_p2c8_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_29_0, 0, "mmap" },
      { &test_mmap_pread_pac0_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_30",
    &setup_mmap_pread_pac0_4_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_30_0, 0, "mmap" },
      { &test_mmap_pread_p2c8_30_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_31",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_32",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_p2c8_32_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_32_0, 0, "mmap" },
      { &test_mmap_pread_pac0_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_33",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_p2c8_33_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_34",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_35",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_36",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_37",
    &setup_mmap_pread_pac0_4_common,
    { { &setup_mmap_pread_pf0_11_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pf0_20_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_38",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_p2c8_38_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_38_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_39",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_8_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_40",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_p2c8_29_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pf0_17_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_41",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_p2c8_41_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pf0_11_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_42",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_p2c8_42_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_42_0, 0, "mmap" },
      { &test_mmap_pread_pac0_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_43",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_p2d8_6_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_43_0, 0, "mmap" },
      { &test_mmap_pread_pf0_22_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_44",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_7_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_45",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pd0_13_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_45_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_46",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2c8_47",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_45_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2a_0",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2a_1",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2a_2",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p2a_3",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_0",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_1",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_2",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_3",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_4",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_5",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_6",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_7",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_8",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_9",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_10",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_11",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_12",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_13",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_14",
    &setup_mmap_pread_pae_0_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p27_15",
    &setup_mmap_pread_pae_1_common,
    { { &setup_mmap_pread_pb5_3_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf4_12_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_1",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_p258_1_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_2",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_p258_1_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_3",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_4",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_5",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_6",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_7",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_8",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_9",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_10",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_p258_10_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_11",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_12",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_p258_10_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_13",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_p258_10_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_14",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_p258_10_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_15",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_16",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_p258_10_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_17",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pa5_5_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_45_0, 0, "mmap" },
      { &test_mmap_pread_pa5_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_18",
    &setup_mmap_pread_pf4_1_common,
    { { &setup_mmap_pread_pa5_5_proc0 }, { &setup_mmap_pread_p258_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2d8_45_0, 0, "mmap" },
      { &test_mmap_pread_pa5_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_19",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p258_19_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_18_0, 0, "mmap" },
      { &test_mmap_pread_pa5_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_20",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_21",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pa5_2_proc0 }, { &setup_mmap_pread_pa5_5_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_21_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_22",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_23",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_24",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_25",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pa5_2_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_45_0, 0, "mmap" },
      { &test_mmap_pread_p258_21_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_26",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_26_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_27",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_28",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_3_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_29",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_30",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p258_30_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_45_0, 0, "mmap" },
      { &test_mmap_pread_pa5_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_31",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_32",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_33",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p258_30_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_45_0, 0, "mmap" },
      { &test_mmap_pread_p258_21_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_34",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_p258_30_proc0 }, { &setup_mmap_pread_pa5_2_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_18_0, 0, "mmap" },
      { &test_mmap_pread_pa5_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_35",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_5_proc1 }, { &setup_mmap_pread_p258_35_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_p258_35_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_36",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_43_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p258_37",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_1",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_2",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_p258_35_proc1 }, { &setup_mmap_pread_pd4_5_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_3",
    &setup_mmap_pread_pf0_1_common,
    { { &setup_mmap_pread_pd4_5_proc1 }, { &setup_mmap_pread_pa5_3_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_4",
    &setup_mmap_pread_pac0_4_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_p2c8_30_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_5",
    &setup_mmap_pread_pa40_4_common,
    { { &setup_mmap_pread_pd0_13_proc1 }, { &setup_mmap_pread_p248_5_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_45_0, 0, "mmap" },
      { &test_mmap_pread_pd0_12_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_6",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_7",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_pd0_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_8",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_9",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_10",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_11",
    &setup_mmap_pread_pac0_4_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_p248_11_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_29_0, 0, "mmap" },
      { &test_mmap_pread_p2c8_30_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_12",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_p248_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2c8_4_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_13",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_14",
    &setup_mmap_pread_pf0_12_common,
    { { &setup_mmap_pread_pd0_12_proc1 }, { &setup_mmap_pread_p248_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_15",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_24_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_16",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_p258_1_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_24_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_17",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_18",
    &setup_mmap_pread_pf0_14_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_p258_1_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_19",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_p248_19_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_20",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_30_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_21",
    &setup_mmap_pread_pf0_20_common,
    { { &setup_mmap_pread_p248_21_proc0 }, { &setup_mmap_pread_p248_21_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_9_final,
    { { &test_mmap_pread_p2c8_24_0, 0, "mmap" },
      { &test_mmap_pread_p2c8_30_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_22",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_1_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_23",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_39_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_24",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_8_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_25",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_26",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_pd0_0_proc1 }, { &setup_mmap_pread_pd0_12_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_42_0, 0, "mmap" },
      { &test_mmap_pread_p248_26_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_27",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_p248_19_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_28",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_29",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_pd0_13_proc1 }, { &setup_mmap_pread_pd0_13_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_29_0, 0, "mmap" },
      { &test_mmap_pread_p248_26_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_30",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_43_0, 0, "mmap" },
      { &test_mmap_pread_p248_19_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_31",
    &setup_mmap_pread_pd0_13_common,
    { { &setup_mmap_pread_pd0_13_proc1 }, { &setup_mmap_pread_p248_11_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_38_0, 0, "mmap" },
      { &test_mmap_pread_p248_26_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_32",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pd0_18_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_33",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pd4_3_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_43_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_34",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2d8_11_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_35",
    &setup_mmap_pread_pf0_99_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_p258_10_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_1_final,
    { { &test_mmap_pread_p2c8_43_0, 0, "mmap" },
      { &test_mmap_pread_p248_19_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_36",
    &setup_mmap_pread_pf0_11_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd0_18_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_39_0, 0, "mmap" },
      { &test_mmap_pread_pd0_5_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p248_37",
    &setup_mmap_pread_pa40_2_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2c8_43_0, 0, "mmap" },
      { &test_mmap_pread_pa40_2_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p22_0",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p22_1",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pd4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p22_2",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p22_3",
    &setup_mmap_pread_pf0_22_common,
    { { &setup_mmap_pread_pe0_3_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p2f_5_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p1c_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_1_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p1c_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_4_proc0 }, { &setup_mmap_pread_pf8_0_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_1_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p1a_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p1a_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf4_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p18_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_2_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p18_1",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf0_10_proc0 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p10_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_3_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p10_1",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 0, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p0c_0",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pf8_0_proc0 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p0c_1",
    &setup_mmap_pread_pf8_0_common,
    { { &setup_mmap_pread_pf8_0_proc1 }, { &setup_mmap_pread_pd8_4_proc1 } },
    &setup_mmap_pread_pf8_0_procfinal,
    &setup_mmap_pread_pf8_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pf8_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p0a_0",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p0a_1",
    &setup_mmap_pread_pf4_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd4_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p08_0",
    &setup_mmap_pread_pf0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pd0_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p08_1",
    &setup_mmap_pread_pf0_17_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pe0_3_proc0 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_final,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pd0_0_1, 1, "pread" } },
    &cleanup },
  { "fs-mmap_pread_p00_0",
    &setup_mmap_pread_pe0_0_common,
    { { &setup_mmap_pread_pf4_0_proc1 }, { &setup_mmap_pread_pf4_0_proc1 } },
    &setup_mmap_pread_pf4_0_procfinal,
    &setup_mmap_pread_pf4_0_procfinal,
    { { &test_mmap_pread_p1c_0_0, 0, "mmap" },
      { &test_mmap_pread_pe0_0_1, 1, "pread" } },
    &cleanup },
//+++ common
  {}
};
