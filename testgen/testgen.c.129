//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: mmap open
 */
static int test_mmap_open_pf8_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static int test_mmap_open_pf8_0_1(void) {
  int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
static void setup_mmap_open_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_open_pf8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_open_pf8_0_final(void) {
  unlink("__i0");
}
static void setup_mmap_open_pf8_0_procfinal(void) {
  
}

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf8_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_pf8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf8_2_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pf8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_pf8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_open_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf8_3_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
static void setup_mmap_open_pf8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_open_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pf8_3_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_open_pf8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf8_4_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pf8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_pf8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf8_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf8_5_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_3_common
static void setup_mmap_open_pf8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_open_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf8_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf8_6_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pf8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_pf8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_open_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
static int test_mmap_open_pf70_0_1(void) {
  int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
  
  return xerrno(r);
}
static void setup_mmap_open_pf70_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pf70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_open_pf70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pf70_2_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_mmap_open_pf70_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf70_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
}
// static void setup_mmap_open_pf70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 3993600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pf70_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf70_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pf70_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1c1000);
}
// static void setup_mmap_open_pf70_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf70_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
}
// static void setup_mmap_open_pf70_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_1_common
static void setup_mmap_open_pf70_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24186880, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pf70_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_open_pf70_9_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_open_pf70_9_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
static void setup_mmap_open_pf70_9_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_10_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf70_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pf70_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
static void setup_mmap_open_pf70_10_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_open_pf70_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_11_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24252416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pf70_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_12_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
static void setup_mmap_open_pf70_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
}
// static void setup_mmap_open_pf70_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_13_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x261000);
}
// static void setup_mmap_open_pf70_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pf70_13_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
}
// static void setup_mmap_open_pf70_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_14_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9347072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x8ea000);
}
// static void setup_mmap_open_pf70_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pf70_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_15_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_15_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 19169280, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x16dd000);
}
// static void setup_mmap_open_pf70_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_16_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_16_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
}
// static void setup_mmap_open_pf70_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
static void setup_mmap_open_pf70_16_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_open_pf70_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_17_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x1fa2000);
}
// static void setup_mmap_open_pf70_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
static void setup_mmap_open_pf70_17_final(void) {
  unlink("__i2");
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_open_pf70_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_18_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_18_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1fa2000);
}
// static void setup_mmap_open_pf70_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf70_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_19_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pf70_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_20_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5423104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x261000);
}
// static void setup_mmap_open_pf70_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_21_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf70_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7737344, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0xbb5000);
}
// static void setup_mmap_open_pf70_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_22_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_22_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23977984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x16de000);
}
// static void setup_mmap_open_pf70_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_23_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_23_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_open_pf70_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf70_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_24_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_open_pf70_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_24_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf70_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_25_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_25_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pf70_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf70_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_26_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_26_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pf70_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_27_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_27_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf70_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pf70_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_27_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf70_27_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_28_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
static void setup_mmap_open_pf70_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0xf000);
}
// static void setup_mmap_open_pf70_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_29_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_29_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0xf000);
}
// static void setup_mmap_open_pf70_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pf70_29_final(void) {
  unlink("__i2");
  unlink("__i0");
  unlink("__i1");
}
// static void setup_mmap_open_pf70_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_30_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_30_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23977984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x16dd000);
}
// static void setup_mmap_open_pf70_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_31_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_31_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0xf000);
}
// static void setup_mmap_open_pf70_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_31_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pf70_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_32_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
// static void setup_mmap_open_pf70_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pf70_31_proc0
// static void setup_mmap_open_pf70_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_32_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf70_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_33_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf70_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_open_pf70_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_34_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_pf70_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1843200, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1c1000);
}
// static void setup_mmap_open_pf70_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf70_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_35_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf70_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
static void setup_mmap_open_pf70_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
}
// static void setup_mmap_open_pf70_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_35_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf70_35_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_36_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_36_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x261000);
}
// static void setup_mmap_open_pf70_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_36_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pf70_36_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_37_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_37_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x1fa2000);
}
// static void setup_mmap_open_pf70_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_37_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_17_final
// static void setup_mmap_open_pf70_37_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_38_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_38_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x1fa2000);
}
// static void setup_mmap_open_pf70_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf70_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_39_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_39_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0xf000);
}
// static void setup_mmap_open_pf70_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_39_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf70_39_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_40_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_40_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2420736, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pf70_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf70_40_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pf70_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_41_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_41_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf70_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pf70_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_41_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf70_41_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf70_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf70_42_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf70_42_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf70_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pf70_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf70_42_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pf70_42_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf50_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pf50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf50_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf50_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x8ea000);
}
// static void setup_mmap_open_pf50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf50_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf50_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf50_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pf70_2_proc0
// static void setup_mmap_open_pf50_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf50_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf50_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf50_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pf50_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf50_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pf50_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf50_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_open_pf50_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pf50_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf50_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf50_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pf50_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_pf50_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x8ea000);
}
// static void setup_mmap_open_pf50_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf50_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf50_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
static int test_mmap_open_pf30_0_1(void) {
  int r = open("__f0", O_RDWR | O_CREAT, 0666);
  
  return xerrno(r);
}
// static void setup_mmap_open_pf30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pf30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pf30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x704000);
}
// static void setup_mmap_open_pf30_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
static void setup_mmap_open_pf30_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x704000);
}
// static void setup_mmap_open_pf30_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf30_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pf30_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x704000);
}
// static void setup_mmap_open_pf30_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
static void setup_mmap_open_pf30_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x704000);
}
// static void setup_mmap_open_pf30_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf30_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pf30_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf30_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pf30_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1155072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pf30_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_10_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf30_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pf30_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_11_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1843200, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pf30_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_12_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4681728, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
}
// static void setup_mmap_open_pf30_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_13_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4681728, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x20ad000);
}
// static void setup_mmap_open_pf30_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pf30_13_final(void) {
  unlink("__i1");
  unlink("__i0");
  unlink("__i2");
}
// static void setup_mmap_open_pf30_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_14_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
}
// static void setup_mmap_open_pf30_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pf30_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_15_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pf30_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2191360, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x217000);
}
// static void setup_mmap_open_pf30_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pf30_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_16_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
static void setup_mmap_open_pf30_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_open_pf30_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_17_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_open_pf30_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf30_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_18_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_18_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_mmap_open_pf30_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_19_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x2000);
}
// static void setup_mmap_open_pf30_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_19_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_17_final
// static void setup_mmap_open_pf30_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_20_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
static void setup_mmap_open_pf30_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_open_pf30_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_21_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pf30_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_22_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_22_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf30_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_24_proc0
// static void setup_mmap_open_pf30_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_23_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_pf30_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pf30_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_23_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf30_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_24_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf30_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pf70_23_proc0
// static void setup_mmap_open_pf30_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_24_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_25_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_25_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_open_pf30_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_26_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_pf30_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pf30_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_26_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf30_26_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_27_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pf30_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pf30_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_27_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_28_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_28_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0x2000);
}
// static void setup_mmap_open_pf30_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pf30_28_final(void) {
  unlink("__i2");
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_open_pf30_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_29_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_29_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_open_pf30_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_30_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_30_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf30_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pf30_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_30_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_31_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pf30_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_mmap_open_pf30_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_31_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_32_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_19_common
static void setup_mmap_open_pf30_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x2000);
}
// static void setup_mmap_open_pf30_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_32_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_17_final
// static void setup_mmap_open_pf30_32_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_33_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_30_common
static void setup_mmap_open_pf30_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_open_pf30_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_33_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_33_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_34_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_34_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pf30_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pf30_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_34_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_35_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_30_common
// static void setup_mmap_open_pf30_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pf30_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_35_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_35_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_36_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_29_common
static void setup_mmap_open_pf30_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_open_pf30_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_36_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_37_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pf30_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x26000);
// }
// ^ See setup_mmap_open_pf30_20_proc0
// static void setup_mmap_open_pf30_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_37_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf30_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_38_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pf30_38_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pf30_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x26000);
// }
// ^ See setup_mmap_open_pf30_25_proc0
// static void setup_mmap_open_pf30_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pf30_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_39_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
}
// static void setup_mmap_open_pf30_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_39_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_40_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pf30_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2244608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x20ad000);
}
// static void setup_mmap_open_pf30_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_40_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_41_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_pf30_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2297000);
}
// static void setup_mmap_open_pf30_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf30_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf30_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf30_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf30_42_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf30_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_pf30_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_mmap_open_pf30_33_proc0
// static void setup_mmap_open_pf30_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pf30_42_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pf30_42_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pf10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf10_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pf10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf10_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
static void setup_mmap_open_pf10_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2297000);
}
// static void setup_mmap_open_pf10_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf10_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_15_common
static void setup_mmap_open_pf10_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x2297000);
}
// static void setup_mmap_open_pf10_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf10_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pf10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pf10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf10_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
static void setup_mmap_open_pf10_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2297000);
}
// static void setup_mmap_open_pf10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pf10_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pf10_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pf10_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pf10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_15_common
static void setup_mmap_open_pf10_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x2297000);
}
// static void setup_mmap_open_pf10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pf10_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pf10_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_mmap_open_pee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pee_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_open_pee_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1155072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_9_proc0
// static void setup_mmap_open_pee_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pee_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pee_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pee_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_2_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pee_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pee_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0xf000);
}
// static void setup_mmap_open_pee_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pee_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pee_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pee_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_4_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pee_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_open_pee_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x261000);
// }
// ^ See setup_mmap_open_pf70_7_proc0
// static void setup_mmap_open_pee_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pee_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pee_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pee_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pee_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_pee_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pee_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pee_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0xf000);
}
// static void setup_mmap_open_pee_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pee_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pee_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_pee_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x16dd000);
}
// static void setup_mmap_open_pee_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_10_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pee_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1150976, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x119000);
}
// static void setup_mmap_open_pee_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_11_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_open_pee_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x476000);
}
// static void setup_mmap_open_pee_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pee_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_12_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_open_pee_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x16dd000);
}
// static void setup_mmap_open_pee_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pee_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_13_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pee_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 3993600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pee_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_14_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pee_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pee_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pee_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_15_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_15_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pee_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12279808, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x261000);
}
// static void setup_mmap_open_pee_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pee_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_16_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pee_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_13_common
static void setup_mmap_open_pee_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12279808, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1fa2000);
}
// static void setup_mmap_open_pee_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_17_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pee_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_10_common
static void setup_mmap_open_pee_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1839104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1c1000);
}
// static void setup_mmap_open_pee_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pee_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pee_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_18_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_18_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_open_pee_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0xbb6000);
}
// static void setup_mmap_open_pee_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pee_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_19_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pee_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x261000);
// }
// ^ See setup_mmap_open_pf70_36_proc0
// static void setup_mmap_open_pee_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pee_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pee_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pee_20_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pee_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pee_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pee_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pee_20_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pee_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pea_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pea_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pea_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pea_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pea_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pea_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pea_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pea_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pea_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pea_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pea_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pea_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
// static void setup_mmap_open_pea_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0xf000);
// }
// ^ See setup_mmap_open_pee_3_proc0
// static void setup_mmap_open_pea_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pea_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pea_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pea_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pea_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pea_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pea_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pea_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pea_3_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pea_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pea_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pea_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pea_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_open_pea_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0xf000);
}
// static void setup_mmap_open_pea_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pea_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pea_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pe6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pe6_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pe6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pe6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pe6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pe6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pe6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_2_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pe6_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_1_common
// static void setup_mmap_open_pe6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 33173504, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_8_proc0
// static void setup_mmap_open_pe6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_pe6_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x16dd000);
}
// static void setup_mmap_open_pe6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pe6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pe6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_5_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pe6_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
// static void setup_mmap_open_pe6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0xf000);
// }
// ^ See setup_mmap_open_pea_4_proc0
// static void setup_mmap_open_pe6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_5_common
// static void setup_mmap_open_pe6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pee_7_proc0
// static void setup_mmap_open_pe6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_open_pe6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pee_8_proc0
// static void setup_mmap_open_pe6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pe6_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_13_common
static void setup_mmap_open_pe6_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 19169280, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x16dd000);
}
// static void setup_mmap_open_pe6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_10_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_pe6_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24248320, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1720000);
}
// static void setup_mmap_open_pe6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_11_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_open_pe6_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0xf000);
}
// static void setup_mmap_open_pe6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pe6_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_12_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_open_pe6_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0xf000);
}
// static void setup_mmap_open_pe6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pe6_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_13_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pe6_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 19169280, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x261000);
}
// static void setup_mmap_open_pe6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pe6_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_14_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_pe6_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
}
// static void setup_mmap_open_pe6_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_15_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_13_common
static void setup_mmap_open_pe6_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_open_pe6_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_16_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_16_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pe6_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pe6_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pe6_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_17_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_pe6_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pe6_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pe6_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_18_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe6_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_11_common
static void setup_mmap_open_pe6_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0xf000);
}
// static void setup_mmap_open_pe6_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pe6_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_19_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pe6_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x261000);
// }
// ^ See setup_mmap_open_pf70_36_proc0
// static void setup_mmap_open_pe6_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pe6_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pe6_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe6_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe6_20_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pe6_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_open_pe6_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_26_proc0
// static void setup_mmap_open_pe6_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe6_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe6_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe2_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe2_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pe2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe2_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pe2_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe2_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe2_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pe2_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pe2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe2_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pe2_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe2_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe2_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
// static void setup_mmap_open_pe2_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0xf000);
// }
// ^ See setup_mmap_open_pee_3_proc0
// static void setup_mmap_open_pe2_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe2_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe2_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe2_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe2_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe2_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pe2_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pe2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe2_3_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pe2_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pe2_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pe2_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pe2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pe6_20_common
// static void setup_mmap_open_pe2_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0xf000);
// }
// ^ See setup_mmap_open_pea_4_proc0
// static void setup_mmap_open_pe2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pe2_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pe2_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
static int test_mmap_open_pde_0_1(void) {
  int r = open("__f0", O_RDWR | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static void setup_mmap_open_pde_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pde_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1fa2000);
}
// static void setup_mmap_open_pde_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pde_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x261000);
// }
// ^ See setup_mmap_open_pf70_3_proc0
// static void setup_mmap_open_pde_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_4_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pde_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24252416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pde_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pde_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_5_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pde_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_6_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
// static void setup_mmap_open_pde_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1c1000);
// }
// ^ See setup_mmap_open_pf70_6_proc0
// static void setup_mmap_open_pde_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_7_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x261000);
// }
// ^ See setup_mmap_open_pf70_7_proc0
// static void setup_mmap_open_pde_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_8_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_16_common
// static void setup_mmap_open_pde_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pde_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_9_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1155072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_9_proc0
// static void setup_mmap_open_pde_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_10_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pde_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pde_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_11_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pde_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24186880, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pde_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_12_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pde_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 14786560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0xbb5000);
}
// static void setup_mmap_open_pde_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_13_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5423104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x1fa2000);
}
// static void setup_mmap_open_pde_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pde_13_final(void) {
  unlink("__i0");
  unlink("__i1");
  unlink("__i2");
}
// static void setup_mmap_open_pde_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_14_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
static void setup_mmap_open_pde_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 3993600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
}
// static void setup_mmap_open_pde_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_15_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pde_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33169408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1fa2000);
}
// static void setup_mmap_open_pde_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pde_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_16_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pde_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x760000);
}
// static void setup_mmap_open_pde_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_17_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_31_common
// static void setup_mmap_open_pde_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pee_8_proc0
// static void setup_mmap_open_pde_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pde_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_18_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pde_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_open_pde_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_19_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_24_proc0
// static void setup_mmap_open_pde_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_20_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0xbb6000);
}
// static void setup_mmap_open_pde_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_20_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_17_final
// static void setup_mmap_open_pde_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_21_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_21_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1247000);
}
// static void setup_mmap_open_pde_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_21_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_22_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pde_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_19_proc0
// static void setup_mmap_open_pde_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_23_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_23_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1fa2000);
// }
// ^ See setup_mmap_open_pf70_18_proc0
// static void setup_mmap_open_pde_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_24_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_24_proc0
// static void setup_mmap_open_pde_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_24_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pde_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_25_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_25_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pde_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_26_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_26_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pde_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_26_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pde_26_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_27_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_pde_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 25739264, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pde_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_28_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
// static void setup_mmap_open_pde_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_33_proc0
// static void setup_mmap_open_pde_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_29_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_29_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i2", 0xf000);
// }
// ^ See setup_mmap_open_pf70_29_proc0
// static void setup_mmap_open_pde_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_29_final(void) {
//   unlink("__i2");
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_29_final
// static void setup_mmap_open_pde_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_30_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_30_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 3555328, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x218a000);
}
// static void setup_mmap_open_pde_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_31_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_31_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 23977984, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x16dd000);
// }
// ^ See setup_mmap_open_pf70_30_proc0
// static void setup_mmap_open_pde_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_31_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pde_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_32_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_2_common
static void setup_mmap_open_pde_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 14786560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x675000);
}
// static void setup_mmap_open_pde_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_32_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pde_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_33_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pde_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0xf000);
// }
// ^ See setup_mmap_open_pf70_28_proc0
// static void setup_mmap_open_pde_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_34_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_pde_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1fa2000);
}
// static void setup_mmap_open_pde_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pde_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_35_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_35_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pf70_39_proc0
// static void setup_mmap_open_pde_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_35_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pde_35_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_36_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_36_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0xf000);
}
// static void setup_mmap_open_pde_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_36_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_17_final
// static void setup_mmap_open_pde_36_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_37_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_37_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x760000);
}
// static void setup_mmap_open_pde_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_37_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pde_37_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_38_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_38_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pde_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x98e000);
}
// static void setup_mmap_open_pde_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_39_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
static void setup_mmap_open_pde_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_mmap_open_pde_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_39_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pde_39_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_40_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_11_common
// static void setup_mmap_open_pde_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_26_proc0
// static void setup_mmap_open_pde_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pde_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pde_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_41_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pde_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_38_common
// static void setup_mmap_open_pde_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pde_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_41_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pde_41_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pde_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pde_42_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pde_42_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pde_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pde_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pde_42_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pde_42_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pda_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pda_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pda_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pda_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pda_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pda_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x8ea000);
// }
// ^ See setup_mmap_open_pf50_2_proc0
// static void setup_mmap_open_pda_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pda_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf50_3_common
// static void setup_mmap_open_pda_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pf70_2_proc0
// static void setup_mmap_open_pda_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pda_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_4_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pda_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pda_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pda_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_5_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf50_5_common
// static void setup_mmap_open_pda_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pf50_5_proc0
// static void setup_mmap_open_pda_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pda_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pda_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pda_6_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pda_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
// static void setup_mmap_open_pda_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x704000);
// }
// ^ See setup_mmap_open_pf30_5_proc0
// static void setup_mmap_open_pda_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pda_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pda_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
static int test_mmap_open_pd6_0_1(void) {
  int r = open("__f0", O_RDWR, 0666);
  
  return xerrno(r);
}
// static void setup_mmap_open_pd6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pd6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pd6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x704000);
// }
// ^ See setup_mmap_open_pf30_2_proc0
// static void setup_mmap_open_pd6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
// static void setup_mmap_open_pd6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x704000);
// }
// ^ See setup_mmap_open_pf30_3_proc0
// static void setup_mmap_open_pd6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pd6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pd6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_5_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x704000);
// }
// ^ See setup_mmap_open_pf30_5_proc0
// static void setup_mmap_open_pd6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_6_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
// static void setup_mmap_open_pd6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x704000);
// }
// ^ See setup_mmap_open_pf30_6_proc0
// static void setup_mmap_open_pd6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_7_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pd6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pd6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pd6_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_8_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 33173504, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_8_proc0
// static void setup_mmap_open_pd6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_9_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pd6_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1843200, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pd6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_10_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_10_common
// static void setup_mmap_open_pd6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pd6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_11_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1843200, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf30_11_proc0
// static void setup_mmap_open_pd6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_12_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pd6_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23977984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
}
// static void setup_mmap_open_pd6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_13_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_13_common
static void setup_mmap_open_pd6_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x5000);
}
// static void setup_mmap_open_pd6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pf30_13_final
// static void setup_mmap_open_pd6_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_14_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pd6_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
// }
// ^ See setup_mmap_open_pf30_12_proc0
// static void setup_mmap_open_pd6_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pd6_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_15_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pd6_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
}
// static void setup_mmap_open_pd6_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pd6_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_16_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
static void setup_mmap_open_pd6_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x5000);
}
// static void setup_mmap_open_pd6_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_17_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pd6_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_24_proc0
// static void setup_mmap_open_pd6_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pd6_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_18_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
static void setup_mmap_open_pd6_18_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pd6_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i2", 0x5000);
}
// static void setup_mmap_open_pd6_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
static void setup_mmap_open_pd6_18_final(void) {
  unlink("__i1");
  unlink("__i0");
  unlink("__i2");
  close(20);
  close(21);
}
// static void setup_mmap_open_pd6_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_19_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pd6_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_24_proc0
// static void setup_mmap_open_pd6_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pd6_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_20_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
static void setup_mmap_open_pd6_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pd6_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pf70_23_proc0
// static void setup_mmap_open_pd6_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_21_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pd6_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_19_proc0
// static void setup_mmap_open_pd6_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_21_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_22_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pd6_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pd6_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_22_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pd6_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_23_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_10_common
// static void setup_mmap_open_pd6_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_25_proc0
// static void setup_mmap_open_pd6_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_24_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pd6_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pd6_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_25_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_pd6_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_mmap_open_pf30_29_proc0
// static void setup_mmap_open_pd6_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_26_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_13_common
static void setup_mmap_open_pd6_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i2", 0x5000);
}
// static void setup_mmap_open_pd6_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_26_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pf30_13_final
// static void setup_mmap_open_pd6_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_27_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pd6_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_33_proc0
// static void setup_mmap_open_pd6_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_27_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pd6_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_28_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
static void setup_mmap_open_pd6_28_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pd6_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e29000);
}
// static void setup_mmap_open_pd6_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_28_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pd6_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_29_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_6_common
static void setup_mmap_open_pd6_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_open_pd6_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_30_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pd6_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pd6_16_proc0
// static void setup_mmap_open_pd6_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_31_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd6_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_open_pde_18_proc0
// static void setup_mmap_open_pd6_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_32_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_10_common
// static void setup_mmap_open_pd6_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pf70_23_proc0
// static void setup_mmap_open_pd6_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_32_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_32_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_33_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pd6_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pd6_29_proc0
// static void setup_mmap_open_pd6_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_33_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_34_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
static void setup_mmap_open_pd6_34_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pd6_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_mmap_open_pf30_31_proc0
// static void setup_mmap_open_pd6_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd6_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_35_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pd6_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pde_39_proc0
// static void setup_mmap_open_pd6_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_35_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pd6_35_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_36_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pd6_18_common
static void setup_mmap_open_pd6_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i2", 0x5000);
}
// static void setup_mmap_open_pd6_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_36_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   unlink("__i2");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pd6_18_final
// static void setup_mmap_open_pd6_36_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_37_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_10_common
static void setup_mmap_open_pd6_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_mmap_open_pd6_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_37_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_37_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_38_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pd6_20_common
// static void setup_mmap_open_pd6_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pd6_37_proc0
// static void setup_mmap_open_pd6_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_39_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pd6_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pde_39_proc0
// static void setup_mmap_open_pd6_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_39_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pd6_39_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_40_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pd6_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pd6_24_proc0
// static void setup_mmap_open_pd6_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd6_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd6_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_41_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pd6_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pd6_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_41_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pd6_41_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd6_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd6_42_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd6_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_10_common
// static void setup_mmap_open_pd6_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_41_proc0
// static void setup_mmap_open_pd6_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pd6_42_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pd6_42_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pd2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd2_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pd2_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pd2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd2_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pd2_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2297000);
// }
// ^ See setup_mmap_open_pf10_2_proc0
// static void setup_mmap_open_pd2_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd2_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_15_common
// static void setup_mmap_open_pd2_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x2297000);
// }
// ^ See setup_mmap_open_pf10_3_proc0
// static void setup_mmap_open_pd2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd2_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pd2_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pd2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd2_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_5_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_pd2_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x2297000);
// }
// ^ See setup_mmap_open_pf10_5_proc0
// static void setup_mmap_open_pd2_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pd2_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pd2_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pd2_6_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pd2_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_15_common
// static void setup_mmap_open_pd2_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x2297000);
// }
// ^ See setup_mmap_open_pf10_6_proc0
// static void setup_mmap_open_pd2_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pd2_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pd2_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pc0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
static int test_mmap_open_pc0_0_1(void) {
  int r = open("__f0", O_RDWR, 0666);
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
// static void setup_mmap_open_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pc0_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pc0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pc0_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_pc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf8_1_proc0
// static void setup_mmap_open_pc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pc0_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pc0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pc0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pc0_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_pc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_open_pea_4_common
// static void setup_mmap_open_pc0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_open_pf8_2_proc0
// static void setup_mmap_open_pc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pc0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pc0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pc0_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_pc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_pc0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf8_4_proc0
// static void setup_mmap_open_pc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pc0_3_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_pc0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pc0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_0
// static int test_mmap_open_pc0_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_pc0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_open_pea_4_common
// static void setup_mmap_open_pc0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_open_pf8_6_proc0
// static void setup_mmap_open_pc0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pc0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pc0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_pbe_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_open_pbe_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
static void setup_mmap_open_pbe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbe_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbe_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbe_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
static void setup_mmap_open_pbe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbe_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbe_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbe_2_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pbe_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbe_0_common
static void setup_mmap_open_pbe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_open_pbe_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbe_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbe_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbe_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbe_3_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pbe_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbe_1_common
// static void setup_mmap_open_pbe_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbe_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbe_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbdc_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbdc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pbdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_27_common
// static void setup_mmap_open_pbdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbdc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbdc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbdc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbdc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pbdc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbdc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbdc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbdc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbdc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbdc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbdc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pbdc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbdc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbdc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbdc_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbdc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbdc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbdc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pbdc_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbdc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbdc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbdc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbdc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbd4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbd4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pbd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbdc_2_common
// static void setup_mmap_open_pbd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbd4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbd4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbd4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbd4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pbd4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbd4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbd4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbd4_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbd4_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pbd4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_pbd4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbd4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbd4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbd4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbd4_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbd4_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pbd4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbd4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbd4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbd4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbd4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbcc_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbcc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pbcc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbcc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbcc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbcc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbcc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbcc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pbcc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbcc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbcc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbcc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbcc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbcc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbcc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pbcc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbcc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbcc_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbcc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbcc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbcc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbcc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pbcc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbcc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbcc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbcc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbc4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbc4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbc4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_pbc4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbc4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbc4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbc4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbc4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbc4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pbc4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pbc4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbc4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbc4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbc4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbc4_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbc4_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbc4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_pbc4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbc4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbc4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbc4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbc4_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbc4_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pbc4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_pbc4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbc4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbc4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pbc4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbb8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbb8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pbb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_pbb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pbb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbb8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbb8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pbb8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pbb8_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pbb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_pbb8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pbb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pbb8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pbb8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb98_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb98_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pb98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_pb98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb98_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb98_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb98_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb98_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pb98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_pb98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb98_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb98_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb88_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb88_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pb88_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pb88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb88_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb88_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb88_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb88_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pb88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_pb88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb88_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb88_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb78_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb78_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pb78_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pb78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb78_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb78_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pb78_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pb78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb78_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pb78_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb78_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb78_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pb78_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pb78_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb78_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb78_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pb78_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb78_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb78_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pb78_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pb78_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb78_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb78_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb78_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb68_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb68_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pb68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_22_common
// static void setup_mmap_open_pb68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb68_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pb68_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb68_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb68_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pb68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_pb68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb68_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb68_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb68_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb68_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pb68_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_38_common
// static void setup_mmap_open_pb68_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb68_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb68_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_pb68_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb68_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb68_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pb68_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_10_common
// static void setup_mmap_open_pb68_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb68_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb68_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb68_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb58_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb58_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pb58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb58_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb58_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb58_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb58_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pb58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb58_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pb58_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb58_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb58_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_pb58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb58_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb58_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb58_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb58_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_pb58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb58_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pb58_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb48_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb48_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_pb48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb48_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb48_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb48_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb48_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_pb48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb48_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pb48_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb48_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb48_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb48_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_pb48_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb48_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb48_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb48_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb48_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb48_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pb48_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_pb48_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb48_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb48_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_pb48_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
static void setup_mmap_open_pb0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pb0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pbe_0_0
// static int test_mmap_open_pb0_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pb0_0_common
// static void setup_mmap_open_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_pb0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_pb0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_pae_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_open_pae_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_pae_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pae_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pae_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pae_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pae_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
static void setup_mmap_open_pae_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pae_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pae_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pae_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_padc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 3993600, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf70_4_proc0
// static void setup_mmap_open_padc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_padc_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_padc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1155072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_padc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_padc_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_padc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 6774784, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x22f1000);
}
// static void setup_mmap_open_padc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_1_common
static void setup_mmap_open_padc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 6774784, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_padc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_padc_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_padc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 19169280, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x261000);
}
// static void setup_mmap_open_padc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pde_13_final
// static void setup_mmap_open_padc_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
static void setup_mmap_open_padc_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 6774784, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_padc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
static void setup_mmap_open_padc_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24252416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x261000);
}
// static void setup_mmap_open_padc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
static void setup_mmap_open_padc_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x16dd000);
}
// static void setup_mmap_open_padc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
// static void setup_mmap_open_padc_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24248320, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1720000);
// }
// ^ See setup_mmap_open_pe6_10_proc0
// static void setup_mmap_open_padc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
static void setup_mmap_open_padc_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_open_padc_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_10_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_2_common
static void setup_mmap_open_padc_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36372480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1710000);
}
// static void setup_mmap_open_padc_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_11_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
static void setup_mmap_open_padc_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_open_padc_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_12_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_padc_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_padc_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i2", 0x5000);
// }
// ^ See setup_mmap_open_pd6_26_proc0
// static void setup_mmap_open_padc_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_12_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf70_13_final
// static void setup_mmap_open_padc_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_13_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_padc_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pf70_31_proc0
// static void setup_mmap_open_padc_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_padc_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_14_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_padc_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_padc_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_15_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_padc_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
}
// static void setup_mmap_open_padc_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_16_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_padc_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pf70_26_proc0
// static void setup_mmap_open_padc_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_17_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_2_common
// static void setup_mmap_open_padc_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pf70_31_proc0
// static void setup_mmap_open_padc_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_padc_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_18_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_padc_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 6774784, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1c1000);
}
// static void setup_mmap_open_padc_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_padc_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_padc_19_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_padc_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_1_common
// static void setup_mmap_open_padc_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 36270080, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2297000);
// }
// ^ See setup_mmap_open_pf30_41_proc0
// static void setup_mmap_open_padc_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_padc_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_padc_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pad4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pad4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pad4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pad4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1839104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pad4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pad4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pad4_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pad4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pad4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pad4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pad4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1839104, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pad4_0_proc0
// static void setup_mmap_open_pad4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pad4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pad4_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pacc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pacc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pacc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pacc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pacc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_19_proc0
// static void setup_mmap_open_pacc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pacc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4681728, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pacc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_padc_4_common
static void setup_mmap_open_pacc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23977984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x20ad000);
}
// static void setup_mmap_open_pacc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pde_13_final
// static void setup_mmap_open_pacc_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_2_common
static void setup_mmap_open_pacc_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2498560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x20ad000);
}
// static void setup_mmap_open_pacc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pacc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pd6_16_proc0
// static void setup_mmap_open_pacc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pacc_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pd6_24_proc0
// static void setup_mmap_open_pacc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_padc_4_common
// static void setup_mmap_open_pacc_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i2", 0x5000);
// }
// ^ See setup_mmap_open_pd6_26_proc0
// static void setup_mmap_open_pacc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pde_13_final
// static void setup_mmap_open_pacc_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pacc_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pd6_29_proc0
// static void setup_mmap_open_pacc_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_10_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pacc_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_open_pacc_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pacc_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_11_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pacc_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x704000);
}
// static void setup_mmap_open_pacc_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pacc_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_12_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pacc_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pacc_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_33_proc0
// static void setup_mmap_open_pacc_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pacc_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_13_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
static void setup_mmap_open_pacc_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_open_pacc_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_14_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_29_common
static void setup_mmap_open_pacc_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x704000);
}
// static void setup_mmap_open_pacc_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pacc_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_15_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pacc_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x986000);
}
// static void setup_mmap_open_pacc_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_16_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
static void setup_mmap_open_pacc_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pacc_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_17_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_2_common
static void setup_mmap_open_pacc_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_mmap_open_pacc_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pacc_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_18_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_pacc_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_mmap_open_pf30_29_proc0
// static void setup_mmap_open_pacc_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pacc_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pacc_19_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pacc_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pacc_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_mmap_open_pf30_31_proc0
// static void setup_mmap_open_pacc_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pacc_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pacc_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pac4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pac4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pac4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
static void setup_mmap_open_pac4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pac4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pac4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pac4_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pac4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pac4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_pac4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pac4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_pac4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pac4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pac4_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pab8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pab8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pab8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pab8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pab8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_1_common
static void setup_mmap_open_pab8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5423104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pab8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pab8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pab8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_open_pab8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7737344, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x261000);
}
// static void setup_mmap_open_pab8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pab8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pab8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_open_pea_4_common
static void setup_mmap_open_pab8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9322496, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pab8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pab8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_pab8_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_mmap_open_pab8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pf70_31_proc0
// static void setup_mmap_open_pab8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pab8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pab8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_5_common
static void setup_mmap_open_pab8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23977984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x261000);
}
// static void setup_mmap_open_pab8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pab8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pab8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pab8_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_pab8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_pab8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1839104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
}
// static void setup_mmap_open_pab8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pab8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pab8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa98_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa98_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pa98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_10_common
static void setup_mmap_open_pa98_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12279808, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pa98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa98_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa98_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa98_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_pa98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_1_common
static void setup_mmap_open_pa98_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12279808, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pa98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa98_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pa78_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2498560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pa78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pd6_28_common
static void setup_mmap_open_pa78_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10022912, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_pa78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
static void setup_mmap_open_pa78_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 19169280, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pa78_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pa78_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2195456, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_open_pa78_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa78_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_4_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pa78_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pa78_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12279808, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i2", 0x8ea000);
}
// static void setup_mmap_open_pa78_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pf30_13_final
// static void setup_mmap_open_pa78_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_5_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pa78_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 39837696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1c1000);
}
// static void setup_mmap_open_pa78_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_6_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pa78_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_open_pa78_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_7_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_31_common
static void setup_mmap_open_pa78_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36372480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x16dd000);
}
// static void setup_mmap_open_pa78_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_8_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pa78_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pa78_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36642816, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x16dd000);
}
// static void setup_mmap_open_pa78_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_9_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pa78_8_common
static void setup_mmap_open_pa78_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4681728, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x16dd000);
}
// static void setup_mmap_open_pa78_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_10_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_29_common
static void setup_mmap_open_pa78_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36638720, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x22f1000);
}
// static void setup_mmap_open_pa78_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa78_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_11_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pa78_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pa78_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i2", 0x5000);
// }
// ^ See setup_mmap_open_pd6_26_proc0
// static void setup_mmap_open_pa78_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
static void setup_mmap_open_pa78_11_final(void) {
  unlink("__i0");
  unlink("__i2");
  unlink("__i1");
}
// static void setup_mmap_open_pa78_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_12_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_30_common
static void setup_mmap_open_pa78_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
}
// static void setup_mmap_open_pa78_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa78_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_13_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pa78_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_open_pa78_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1247000);
}
// static void setup_mmap_open_pa78_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_14_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa78_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pacc_10_proc0
// static void setup_mmap_open_pa78_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_15_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pa78_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4677632, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x477000);
}
// static void setup_mmap_open_pa78_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_16_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
// static void setup_mmap_open_pa78_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pd6_24_proc0
// static void setup_mmap_open_pa78_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_17_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_pa78_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_pa78_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0xf000);
// }
// ^ See setup_mmap_open_pf70_31_proc0
// static void setup_mmap_open_pa78_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa78_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_18_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
static void setup_mmap_open_pa78_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 39837696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x261000);
}
// static void setup_mmap_open_pa78_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa78_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa78_19_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa78_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa78_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 36270080, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2297000);
// }
// ^ See setup_mmap_open_pf30_41_proc0
// static void setup_mmap_open_pa78_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa78_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa78_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa68_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa68_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1839104, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pad4_0_proc0
// static void setup_mmap_open_pa68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa68_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa68_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa68_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_pa68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pa68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1839104, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pad4_0_proc0
// static void setup_mmap_open_pa68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa68_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa68_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pacc_0_proc0
// static void setup_mmap_open_pa58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pa58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 3993600, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf70_4_proc0
// static void setup_mmap_open_pa58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pf70_19_proc0
// static void setup_mmap_open_pa58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pa58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_open_pacc_3_proc0
// static void setup_mmap_open_pa58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_padc_4_common
// static void setup_mmap_open_pa58_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 23977984, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i2", 0x20ad000);
// }
// ^ See setup_mmap_open_pacc_4_proc0
// static void setup_mmap_open_pa58_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pde_13_final
// static void setup_mmap_open_pa58_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_5_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
static void setup_mmap_open_pa58_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4681728, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x20ad000);
}
// static void setup_mmap_open_pa58_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_6_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_2_common
static void setup_mmap_open_pa58_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x20ad000);
}
// static void setup_mmap_open_pa58_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_7_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pa58_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pd6_24_proc0
// static void setup_mmap_open_pa58_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_8_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_padc_4_common
// static void setup_mmap_open_pa58_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i2", 0x5000);
// }
// ^ See setup_mmap_open_pd6_26_proc0
// static void setup_mmap_open_pa58_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   unlink("__i2");
// }
// ^ See setup_mmap_open_pde_13_final
// static void setup_mmap_open_pa58_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_9_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_pa58_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x5000);
// }
// ^ See setup_mmap_open_pd6_29_proc0
// static void setup_mmap_open_pa58_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_10_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pa58_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pacc_10_proc0
// static void setup_mmap_open_pa58_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa58_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_11_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pa58_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1fa2000);
}
// static void setup_mmap_open_pa58_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa58_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_12_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa58_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x20ad000);
// }
// ^ See setup_mmap_open_pf30_12_proc0
// static void setup_mmap_open_pa58_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_13_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_pa58_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_33_proc0
// static void setup_mmap_open_pa58_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa58_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_14_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_pa58_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2298000);
}
// static void setup_mmap_open_pa58_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_pa58_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_15_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pa58_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x704000);
}
// static void setup_mmap_open_pa58_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_16_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa58_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_open_pd6_24_proc0
// static void setup_mmap_open_pa58_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_17_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_2_common
static void setup_mmap_open_pa58_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1843200, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x20ad000);
}
// static void setup_mmap_open_pa58_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa58_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_18_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_pa58_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_mmap_open_pf70_33_proc0
// static void setup_mmap_open_pa58_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa58_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa58_19_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa58_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_pa58_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_mmap_open_pa58_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa58_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa58_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa48_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa48_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_pa48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_pa48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa48_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa48_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa48_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_pa48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_pa48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_pa48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa48_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_pa48_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_pa0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pae_0_0
// static int test_mmap_open_pa0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_open_pea_4_common
// static void setup_mmap_open_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p9c_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_open_p9c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p9c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
// static void setup_mmap_open_p9c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p9c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p9c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p9b8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p9b8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p9b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p9b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p9b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p9b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p9b8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p9a8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p9a8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p9a8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p9a8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p9a8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p9a8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p9a8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p998_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p998_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p998_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p998_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p998_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p998_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p998_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p988_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p988_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p988_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p988_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p988_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p988_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p988_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p970_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p970_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p970_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p970_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p970_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p970_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p970_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p950_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p950_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p950_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p950_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p950_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p950_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p950_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p930_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p930_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p930_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p930_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p930_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p930_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p930_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p910_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p910_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p910_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p910_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p910_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p910_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p910_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p8f0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p8f0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p8f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p8f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p8f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p8f0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p8f0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p8d0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p8d0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p8d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p8d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p8d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p8d0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p8d0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p8b0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p8b0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p8b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p8b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p8b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p8b0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p8b0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p89_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p89_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p89_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p89_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p89_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p89_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p89_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p80_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p9c_0_0
// static int test_mmap_open_p80_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p80_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p80_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p7c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p7c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p7c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
// static void setup_mmap_open_p7c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p7c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p7c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p7c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p7c_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p7c_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p7c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
// static void setup_mmap_open_p7c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p7c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p7c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p7c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p778_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p778_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p778_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p778_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p778_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p778_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p778_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_25_common
// static void setup_mmap_open_p778_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p778_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p778_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p778_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p778_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_29_common
// static void setup_mmap_open_p778_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 6774784, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_padc_3_proc0
// static void setup_mmap_open_p778_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p778_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p778_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_p778_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4681728, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p778_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p778_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p778_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_p778_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p778_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p778_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p778_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p778_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_p778_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36642816, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p778_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p778_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p778_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_22_common
// static void setup_mmap_open_p778_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p778_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p778_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p778_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p778_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_p778_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7737344, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p778_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p778_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p778_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p778_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p778_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p778_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbdc_2_common
// static void setup_mmap_open_p778_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p778_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p778_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p778_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p758_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p758_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p758_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p758_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p758_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p758_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p758_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p758_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p758_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p758_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p758_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p758_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p758_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p758_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p738_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_p738_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p738_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p738_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p738_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p738_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p738_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p738_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p738_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p738_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p738_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p738_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p738_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1155072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_9_proc0
// static void setup_mmap_open_p738_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p738_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p738_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p738_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p738_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p738_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p738_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p738_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_p738_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2244608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p738_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p738_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p738_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p738_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1155072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_9_proc0
// static void setup_mmap_open_p738_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p738_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p738_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p738_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_4_proc0
// static void setup_mmap_open_p738_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p738_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p738_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p738_8_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p738_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p738_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p738_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p738_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p738_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p738_9_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p738_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p738_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p738_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p738_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p738_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p718_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p718_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p718_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_p718_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p718_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p718_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p718_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p718_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p718_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p718_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_p718_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p718_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p718_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p718_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6f0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p6f0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p6f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6f0_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p6f0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6f0_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p6f0_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p6f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6f0_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p6f0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6f0_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p6f0_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p6f0_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_p6f0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p6f0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p6f0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p6f0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6f0_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p6f0_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6f0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_5_common
static void setup_mmap_open_p6f0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36372480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p6f0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6f0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p6f0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6f0_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p6f0_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6f0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_13_common
// static void setup_mmap_open_p6f0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pab8_0_proc0
// static void setup_mmap_open_p6f0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6f0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p6f0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6f0_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p6f0_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6f0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pee_11_common
// static void setup_mmap_open_p6f0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p6f0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p6f0_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p6f0_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6b0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p6b0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p6b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6b0_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p6b0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p6b0_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p6b0_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p6b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p6b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p6b0_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p6b0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p670_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p670_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p670_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p670_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p670_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p670_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p670_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p670_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p670_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p670_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p670_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p670_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p670_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p670_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p670_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p670_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p670_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_p670_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p670_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p670_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p670_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p670_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p670_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p670_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pe6_20_common
static void setup_mmap_open_p670_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9322496, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p670_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p670_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p670_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p630_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p630_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p630_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pe6_16_common
// static void setup_mmap_open_p630_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p630_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p630_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p630_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p630_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p630_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p630_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p630_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p630_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p630_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p630_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p5f0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p5f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p5f0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p5f0_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p5f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p5f0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p5f0_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_30_common
static void setup_mmap_open_p5f0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10059776, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p5f0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p5f0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p5f0_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_p5f0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 25739264, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p5f0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p5f0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p5f0_4_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_p5f0_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p5f0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p5f0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p5f0_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p5f0_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p5f0_5_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_10_common
// static void setup_mmap_open_p5f0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p5f0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p5f0_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p5f0_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p5f0_6_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_p5f0_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p5f0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 3993600, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf70_4_proc0
// static void setup_mmap_open_p5f0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p5f0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p5f0_7_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p5f0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7737344, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_8_proc0
// static void setup_mmap_open_p5f0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5f0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p5f0_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p5f0_8_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5f0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_38_common
// static void setup_mmap_open_p5f0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p5f0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p5f0_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p5f0_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5f0_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p5f0_9_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_p5f0_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p5f0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p5f0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p5f0_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p5f0_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5b0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p5b0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p5b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5b0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p5b0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p5b0_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p5b0_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p5b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p5b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p5b0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p5b0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p570_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_p570_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p570_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p570_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p570_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p570_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p570_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p570_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p570_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p570_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p570_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p570_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p570_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_4_proc0
// static void setup_mmap_open_p570_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p570_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p570_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p570_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p570_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p570_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p570_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p570_5_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p570_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 2244608, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p738_5_proc0
// static void setup_mmap_open_p570_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p570_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p570_6_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p570_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_4_proc0
// static void setup_mmap_open_p570_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p570_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p570_7_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p570_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_4_proc0
// static void setup_mmap_open_p570_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p570_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p570_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p570_8_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p570_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p570_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p570_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p570_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p570_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p570_9_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p570_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p570_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p570_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p570_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p570_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p530_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p530_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p530_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_p530_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p530_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p530_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p530_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p530_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p530_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p530_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
// static void setup_mmap_open_p530_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p530_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p530_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p530_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p48_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_0_0
// static int test_mmap_open_p48_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p48_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p48_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p48_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p7c_1_0
// static int test_mmap_open_p48_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p48_1_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p48_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p3e_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_open_p3e_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p3e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbe_0_common
// static void setup_mmap_open_p3e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3e_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3e_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p3e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbe_1_common
// static void setup_mmap_open_p3e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3e_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3e_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3e_2_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p3e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbe_0_common
// static void setup_mmap_open_p3e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3e_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3e_3_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p3e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbe_1_common
// static void setup_mmap_open_p3e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3e_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3dc_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3dc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p3dc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p3dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3dc_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p3dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3dc_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3dc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p3dc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p3dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3dc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3dc_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3dc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p3dc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p3dc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3dc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3dc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3dc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3dc_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3dc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p3dc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_p3dc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3dc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3dc_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3dc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3d4_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3d4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p3d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_22_common
// static void setup_mmap_open_p3d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3d4_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p3d4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3d4_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3d4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p3d4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_p3d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3d4_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3d4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3d4_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3d4_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p3d4_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p3d4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3d4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3d4_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3d4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3d4_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3d4_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p3d4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_p3d4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3d4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3d4_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3d4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3cc_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3cc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3cc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p3cc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3cc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3cc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3cc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3cc_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3cc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3cc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p3cc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3cc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3cc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3cc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3cc_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3cc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3cc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p3cc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3cc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3cc_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3cc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3cc_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3cc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3cc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p3cc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3cc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3cc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3cc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3c4_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3c4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3c4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_p3c4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3c4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3c4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3c4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3c4_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3c4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3c4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_p3c4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3c4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3c4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3c4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3c4_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3c4_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3c4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_p3c4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3c4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3c4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3c4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3c4_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3c4_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p3c4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_p3c4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3c4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3c4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p3c4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3b8_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3b8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p3b8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_p3b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3b8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3b8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3b8_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3b8_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p3b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_p3b8_0_common
// static void setup_mmap_open_p3b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p3b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3b8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3b8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p3a8_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p3a8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
static void setup_mmap_open_p3a8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_p3a8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p3a8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p3a8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p3a8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p398_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p398_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p398_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pb88_0_common
// static void setup_mmap_open_p398_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p398_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p398_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p398_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p398_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p398_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
static void setup_mmap_open_p398_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_open_p398_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p398_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p398_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p398_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p378_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p378_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p378_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_38_common
// static void setup_mmap_open_p378_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p378_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p378_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p378_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p378_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p378_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
static void setup_mmap_open_p378_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_open_p378_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p378_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p378_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p378_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p378_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p378_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p378_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_p3dc_1_common
// static void setup_mmap_open_p378_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p378_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p378_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p378_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p378_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p378_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p378_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_p378_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p378_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p378_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p378_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p368_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p368_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p368_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_22_common
// static void setup_mmap_open_p368_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p368_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p368_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_16_final
// static void setup_mmap_open_p368_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p368_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p368_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p368_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pde_10_common
// static void setup_mmap_open_p368_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p368_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p368_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p368_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p368_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p368_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p368_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_10_common
// static void setup_mmap_open_p368_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p368_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p368_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p368_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p368_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p368_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p368_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbd4_3_common
// static void setup_mmap_open_p368_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p368_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p368_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p368_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p358_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p358_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p358_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p358_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p358_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p358_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p358_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p358_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p358_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p358_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p358_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p358_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p358_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p358_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p358_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p358_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p358_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_7_common
// static void setup_mmap_open_p358_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p358_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p358_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p358_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p358_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p358_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p358_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_36_common
// static void setup_mmap_open_p358_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p358_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p358_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p358_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p348_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p348_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p348_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_p348_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p348_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p348_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p348_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p348_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p348_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p348_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_p348_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p348_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p348_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p348_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p348_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p348_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p348_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_17_common
// static void setup_mmap_open_p348_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p348_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p348_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p348_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p348_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p348_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p348_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pbc4_1_common
// static void setup_mmap_open_p348_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p348_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p348_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_final
// static void setup_mmap_open_p348_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p30_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p30_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pb0_0_common
// static void setup_mmap_open_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc0
// static void setup_mmap_open_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p30_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p3e_0_0
// static int test_mmap_open_p30_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_open_pb0_0_common
// static void setup_mmap_open_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pbe_2_proc0
// static void setup_mmap_open_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_open_pf70_9_proc1
// static void setup_mmap_open_p30_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_10_final
// static void setup_mmap_open_p30_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_open_pf70_9_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2f_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2f_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
// static void setup_mmap_open_p2f_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2f_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2f_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2f_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2f_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2f_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2f_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_1_0
// static int test_mmap_open_p2f_2_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2f_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2f_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2f_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2f_3_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2f_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2f_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2f_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_3_0
// static int test_mmap_open_p2f_4_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2f_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2f_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2f_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2f_5_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2f_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2f_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2f_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2f_6_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2f_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2f_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2f_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2f_7_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p2f_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2f_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2f_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2f_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2f_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2de_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x477000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2de_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
// static void setup_mmap_open_p2de_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24252416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pde_4_proc0
// static void setup_mmap_open_p2de_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p2de_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2de_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1710000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2de_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2de_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 36642816, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_6_proc0
// static void setup_mmap_open_p2de_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2de_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2de_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2de_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_29_common
// static void setup_mmap_open_p2de_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2de_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p2de_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2de_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2de_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pae_1_common
// static void setup_mmap_open_p2de_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pacc_0_proc0
// static void setup_mmap_open_p2de_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2de_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2de_4_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x262000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2de_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_p2de_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 2498560, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pa78_0_proc0
// static void setup_mmap_open_p2de_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p2de_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2de_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x477000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2de_0_0
// static int test_mmap_open_p2de_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p2de_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4681728, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_4_proc0
// static void setup_mmap_open_p2de_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2de_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2de_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2259000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2de_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
static void setup_mmap_open_p2de_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 35172352, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2de_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2de_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2de_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2de_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2de_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p2de_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2de_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2de_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2de_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1fa2000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pacc_12_common
static void setup_mmap_open_p2d6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9347072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2d6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p2d6_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x8eb000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pacc_12_common
static void setup_mmap_open_p2d6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9351168, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2d6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p2d6_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_2_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x986000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
static void setup_mmap_open_p2d6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2d6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2d6_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x8eb000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_p2d6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1839104, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pad4_0_proc0
// static void setup_mmap_open_p2d6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p2d6_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2d6_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x8eb000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_1_0
// static int test_mmap_open_p2d6_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p2d6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1839104, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pad4_0_proc0
// static void setup_mmap_open_p2d6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2d6_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_5_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x8c1000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pd6_34_common
static void setup_mmap_open_p2d6_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9179136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2d6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2d6_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1c2000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p2d6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1843200, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pd6_9_proc0
// static void setup_mmap_open_p2d6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2d6_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2d6_7_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1fa4000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2d6_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2d6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
static void setup_mmap_open_p2d6_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33177600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2d6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2d6_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2d6_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2ce_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p2ce_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pacc_0_proc0
// static void setup_mmap_open_p2ce_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2ce_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2ce_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2ce_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2ce_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2ce_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2ce_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2ce_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2ce_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2ce_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2ce_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2ce_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2ce_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2ce_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2ce_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p2ce_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2ce_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2ce_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2ce_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2ce_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2ce_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2ce_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2ce_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p2ce_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2ce_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2ce_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2ce_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2ce_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2ce_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p2ce_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2ce_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2ce_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2ce_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2c6_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2c6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2c6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2c6_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2c6_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2c6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2c6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2c6_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2c6_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2c6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2c6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2c6_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2c6_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2c6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p2c6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2c6_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2c6_4_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2c6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2c6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2c6_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p2c6_5_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2c6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2c6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2c6_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2c6_6_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p2c6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2c6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2c6_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2c6_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p2c6_7_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p2c6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p2c6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p2c6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2c6_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p2c6_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2bc_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1720000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2bc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2bc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pe6_20_common
// static void setup_mmap_open_p2bc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 36642816, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_6_proc0
// static void setup_mmap_open_p2bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2bc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2bc_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2bc_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1fa2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_0_0
// static int test_mmap_open_p2bc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2bc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_13_common
static void setup_mmap_open_p2bc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33169408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p2bc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2bc_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2bc_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p2bc_2_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1247000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p2bc_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2bc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
// static void setup_mmap_open_p2bc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pab8_0_proc0
// static void setup_mmap_open_p2bc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2bc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2bc_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p2bc_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_3_0
// static int test_mmap_open_p2bc_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p2bc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_1_common
// static void setup_mmap_open_p2bc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pacc_1_proc0
// static void setup_mmap_open_p2bc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p2bc_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p2bc_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p29c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x52d000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p29c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p29c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
// static void setup_mmap_open_p29c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 36642816, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p778_6_proc0
// static void setup_mmap_open_p29c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p29c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p29c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p29c_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x218000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p29c_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p29c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_3_common
static void setup_mmap_open_p29c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2195456, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p29c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p29c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p29c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p29c_2_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x676000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p29c_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p29c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_13_common
// static void setup_mmap_open_p29c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pab8_0_proc0
// static void setup_mmap_open_p29c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p29c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p29c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p29c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p29c_3_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p29c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_10_common
// static void setup_mmap_open_p29c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p29c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p29c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p29c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p27c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x11a000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p27c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
// static void setup_mmap_open_p27c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24252416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pde_4_proc0
// static void setup_mmap_open_p27c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p27c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p27c_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x22af000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p27c_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_34_common
static void setup_mmap_open_p27c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34639872, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p27c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p27c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p27c_2_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0xfe7000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p27c_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p27c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 6774784, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_padc_3_proc0
// static void setup_mmap_open_p27c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p27c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p27c_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x22f1000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p27c_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_4_common
static void setup_mmap_open_p27c_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36638720, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p27c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p27c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p27c_4_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1248000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p27c_4_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_26_common
static void setup_mmap_open_p27c_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 19169280, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p27c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p27c_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p27c_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x262000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2de_4_0
// static int test_mmap_open_p27c_5_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
// static void setup_mmap_open_p27c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 2498560, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pa78_0_proc0
// static void setup_mmap_open_p27c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p27c_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p27c_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x8eb000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_3_0
// static int test_mmap_open_p27c_6_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p27c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 3993600, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf70_4_proc0
// static void setup_mmap_open_p27c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p27c_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p27c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x262000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2de_4_0
// static int test_mmap_open_p27c_7_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p27c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
// static void setup_mmap_open_p27c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 2498560, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pa78_0_proc0
// static void setup_mmap_open_p27c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p27c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p27c_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p26c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x20ad000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p26c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pacc_12_common
// static void setup_mmap_open_p26c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9347072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p2d6_0_proc0
// static void setup_mmap_open_p26c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p26c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p26c_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x22f1000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p26c_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_19_common
// static void setup_mmap_open_p26c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1839104, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pad4_0_proc0
// static void setup_mmap_open_p26c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p26c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p26c_2_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0xcb8000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p26c_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_p26c_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 13336576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p26c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p26c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p26c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x986000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_2_0
// static int test_mmap_open_p26c_3_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pae_1_common
// static void setup_mmap_open_p26c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p2d6_2_proc0
// static void setup_mmap_open_p26c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p26c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p26c_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x986000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_2_0
// static int test_mmap_open_p26c_4_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_9_common
static void setup_mmap_open_p26c_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_open_p26c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_3_final
// static void setup_mmap_open_p26c_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p26c_5_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x986000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p26c_5_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p26c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pacc_0_proc0
// static void setup_mmap_open_p26c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p26c_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p26c_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1c2000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p26c_6_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p26c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1843200, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pd6_9_proc0
// static void setup_mmap_open_p26c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p26c_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p26c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1c2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_6_0
// static int test_mmap_open_p26c_7_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p26c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p26c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1843200, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pd6_9_proc0
// static void setup_mmap_open_p26c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p26c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p26c_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p25c_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p25c_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p25c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pacc_0_proc0
// static void setup_mmap_open_p25c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p25c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p25c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p25c_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p25c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p25c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p25c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p25c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p25c_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p25c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p25c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p25c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p25c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p25c_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p25c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p25c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p25c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p25c_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p25c_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf30_14_common
// static void setup_mmap_open_p25c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p25c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p25c_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p25c_5_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1fa3000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p25c_5_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pd6_34_common
// static void setup_mmap_open_p25c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 33173504, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_8_proc0
// static void setup_mmap_open_p25c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p25c_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p25c_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x11b000UL);
  
  return xerrno(r);
}
// static int test_mmap_open_p25c_6_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pd6_34_common
// static void setup_mmap_open_p25c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 1155072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pf30_9_proc0
// static void setup_mmap_open_p25c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p25c_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p25c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x8eb000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2d6_3_0
// static int test_mmap_open_p25c_7_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p25c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p25c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9351168, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_p2d6_1_proc0
// static void setup_mmap_open_p25c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p25c_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p25c_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p24c_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p24c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p24c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p24c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p24c_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p24c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p24c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p24c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p24c_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p24c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p24c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p24c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p24c_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p24c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pac4_0_proc0
// static void setup_mmap_open_p24c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p24c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p24c_4_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p24c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p24c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p24c_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p24c_5_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p24c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p24c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p24c_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p24c_6_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p24c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p24c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p24c_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p24c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p24c_7_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p24c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pac4_1_common
// static void setup_mmap_open_p24c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p24c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p24c_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_open_pf70_2_final
// static void setup_mmap_open_p24c_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p22_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_0_0
// static int test_mmap_open_p22_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p22_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_open_pea_4_common
// static void setup_mmap_open_p22_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p22_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p22_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p22_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p22_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_1_0
// static int test_mmap_open_p22_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p22_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_10_common
// static void setup_mmap_open_p22_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p22_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p22_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p22_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p22_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_6_0
// static int test_mmap_open_p22_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p22_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_open_pea_4_common
// static void setup_mmap_open_p22_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p22_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p22_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p22_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p22_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_p2f_3_0
// static int test_mmap_open_p22_3_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p22_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_open_pee_10_common
// static void setup_mmap_open_p22_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_open_pae_0_proc0
// static void setup_mmap_open_p22_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p22_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p22_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
static int test_mmap_open_p1c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_open_p1c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf8_0_1
// static void setup_mmap_open_p1c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf8_0_common
// static void setup_mmap_open_p1c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p1c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p1c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p1c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p1b8_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p1b8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p1b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p1b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p1b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p1b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p1b8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p1a8_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p1a8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p1a8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p1a8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p1a8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p1a8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p1a8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p198_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p198_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p198_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p198_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p198_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p198_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p198_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p188_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p188_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p188_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p188_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p188_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p188_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p188_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p170_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p170_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf70_0_1
// static void setup_mmap_open_p170_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p170_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p170_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p170_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p170_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p130_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p130_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p130_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p130_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p130_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p130_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p130_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p110_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p110_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pf30_0_1
// static void setup_mmap_open_p110_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p110_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p110_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p110_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p110_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p0f0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p0f0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p0f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p0f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p0f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p0f0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p0f0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p0d0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p0d0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pde_0_1
// static void setup_mmap_open_p0d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_0_common
// static void setup_mmap_open_p0d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p0d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p0d0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p0d0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p0b0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p0b0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p0b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p0b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p0b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p0b0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p0b0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p09_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p09_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_open_pd6_0_1
// static void setup_mmap_open_p09_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_open_pf70_22_common
// static void setup_mmap_open_p09_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p09_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p09_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_open_pf8_0_final
// static void setup_mmap_open_p09_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

/*
 * calls: mmap open
 */
// static int test_mmap_open_p00_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_open_p1c_0_0
// static int test_mmap_open_p00_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_open_pc0_0_1
// static void setup_mmap_open_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_open_pee_0_common
// static void setup_mmap_open_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_open_pf8_0_proc1
// static void setup_mmap_open_p00_0_final(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal
// static void setup_mmap_open_p00_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_open_pf8_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-mmap_open_pf8_0",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf8_1",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf8_2",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf8_3",
    &setup_mmap_open_pf8_3_common,
    { { &setup_mmap_open_pf8_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf8_4",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf8_5",
    &setup_mmap_open_pf8_3_common,
    { { &setup_mmap_open_pf8_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf8_6",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_1",
    &setup_mmap_open_pf70_1_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_2",
    &setup_mmap_open_pf70_2_common,
    { { &setup_mmap_open_pf70_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_3",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_4",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pf70_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_6",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf70_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_7",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_8",
    &setup_mmap_open_pf70_1_common,
    { { &setup_mmap_open_pf70_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_9",
    &setup_mmap_open_pf70_9_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_10",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_11",
    &setup_mmap_open_pf70_11_common,
    { { &setup_mmap_open_pf70_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_12",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pf70_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_13",
    &setup_mmap_open_pf70_13_common,
    { { &setup_mmap_open_pf70_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_13_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_14",
    &setup_mmap_open_pf70_14_common,
    { { &setup_mmap_open_pf70_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_15",
    &setup_mmap_open_pf70_15_common,
    { { &setup_mmap_open_pf70_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_16",
    &setup_mmap_open_pf70_16_common,
    { { &setup_mmap_open_pf70_16_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_17",
    &setup_mmap_open_pf70_17_common,
    { { &setup_mmap_open_pf70_17_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_17_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_18",
    &setup_mmap_open_pf70_18_common,
    { { &setup_mmap_open_pf70_18_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_19",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pf70_19_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_20",
    &setup_mmap_open_pf70_20_common,
    { { &setup_mmap_open_pf70_20_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_21",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_21_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_22",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf70_22_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_23",
    &setup_mmap_open_pf70_23_common,
    { { &setup_mmap_open_pf70_23_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_24",
    &setup_mmap_open_pf70_24_common,
    { { &setup_mmap_open_pf70_24_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_25",
    &setup_mmap_open_pf70_25_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_26",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf70_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_27",
    &setup_mmap_open_pf70_27_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_28",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pf70_28_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_29",
    &setup_mmap_open_pf70_29_common,
    { { &setup_mmap_open_pf70_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_29_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_30",
    &setup_mmap_open_pf70_30_common,
    { { &setup_mmap_open_pf70_30_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_31",
    &setup_mmap_open_pf70_31_common,
    { { &setup_mmap_open_pf70_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_32",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pf70_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_33",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_33_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_34",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pf70_34_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_35",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_35_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_36",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_36_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_37",
    &setup_mmap_open_pf70_37_common,
    { { &setup_mmap_open_pf70_37_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_17_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_38",
    &setup_mmap_open_pf70_38_common,
    { { &setup_mmap_open_pf70_38_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_39",
    &setup_mmap_open_pf70_39_common,
    { { &setup_mmap_open_pf70_39_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_40",
    &setup_mmap_open_pf70_40_common,
    { { &setup_mmap_open_pf70_40_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_41",
    &setup_mmap_open_pf70_41_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf70_42",
    &setup_mmap_open_pf70_42_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf50_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_3",
    &setup_mmap_open_pf50_3_common,
    { { &setup_mmap_open_pf70_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_5",
    &setup_mmap_open_pf50_5_common,
    { { &setup_mmap_open_pf50_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf50_6",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pf50_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_3",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf30_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_6",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf30_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_7",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_8",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_9",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf30_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_10",
    &setup_mmap_open_pf30_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_11",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_12",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_13",
    &setup_mmap_open_pf30_13_common,
    { { &setup_mmap_open_pf30_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf30_13_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_14",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pf30_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_15",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pf30_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_16",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf30_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_17",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pf30_17_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_18",
    &setup_mmap_open_pf30_18_common,
    { { &setup_mmap_open_pf30_18_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_19",
    &setup_mmap_open_pf30_19_common,
    { { &setup_mmap_open_pf30_19_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_17_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_20",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf30_20_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_21",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_21_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_22",
    &setup_mmap_open_pf30_22_common,
    { { &setup_mmap_open_pf70_24_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_23",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_24",
    &setup_mmap_open_pf30_24_common,
    { { &setup_mmap_open_pf70_23_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_25",
    &setup_mmap_open_pf30_25_common,
    { { &setup_mmap_open_pf30_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_26",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_27",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf30_27_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_28",
    &setup_mmap_open_pf30_28_common,
    { { &setup_mmap_open_pf30_28_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf30_28_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_29",
    &setup_mmap_open_pf30_29_common,
    { { &setup_mmap_open_pf30_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_30",
    &setup_mmap_open_pf30_30_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_31",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf30_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_32",
    &setup_mmap_open_pf30_19_common,
    { { &setup_mmap_open_pf30_32_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_17_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_33",
    &setup_mmap_open_pf30_30_common,
    { { &setup_mmap_open_pf30_33_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_34",
    &setup_mmap_open_pf30_34_common,
    { { &setup_mmap_open_pf30_34_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_35",
    &setup_mmap_open_pf30_30_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_36",
    &setup_mmap_open_pf30_29_common,
    { { &setup_mmap_open_pf30_36_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_37",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf30_20_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_38",
    &setup_mmap_open_pf30_38_common,
    { { &setup_mmap_open_pf30_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_39",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_39_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_40",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_40_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_41",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pf30_41_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf30_42",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pf30_33_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_2",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf10_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_3",
    &setup_mmap_open_pf70_15_common,
    { { &setup_mmap_open_pf10_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_5",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf10_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pf10_6",
    &setup_mmap_open_pf70_15_common,
    { { &setup_mmap_open_pf10_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_1",
    &setup_mmap_open_pee_1_common,
    { { &setup_mmap_open_pf30_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_2",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_3",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pee_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_4",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_5",
    &setup_mmap_open_pee_5_common,
    { { &setup_mmap_open_pf70_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_6",
    &setup_mmap_open_pee_6_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_7",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pee_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_8",
    &setup_mmap_open_pee_8_common,
    { { &setup_mmap_open_pee_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_9",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pee_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_10",
    &setup_mmap_open_pee_10_common,
    { { &setup_mmap_open_pee_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_11",
    &setup_mmap_open_pee_11_common,
    { { &setup_mmap_open_pee_11_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_12",
    &setup_mmap_open_pee_12_common,
    { { &setup_mmap_open_pee_12_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_13",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_pee_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_14",
    &setup_mmap_open_pee_14_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_15",
    &setup_mmap_open_pee_15_common,
    { { &setup_mmap_open_pee_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_16",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_pee_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_17",
    &setup_mmap_open_pee_10_common,
    { { &setup_mmap_open_pee_17_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_18",
    &setup_mmap_open_pee_18_common,
    { { &setup_mmap_open_pee_18_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_19",
    &setup_mmap_open_pee_19_common,
    { { &setup_mmap_open_pf70_36_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pee_20",
    &setup_mmap_open_pee_20_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pea_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pea_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pea_2",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pee_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pea_3",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pea_4",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pea_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_1",
    &setup_mmap_open_pe6_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_2",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_3",
    &setup_mmap_open_pee_1_common,
    { { &setup_mmap_open_pf30_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_4",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pe6_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_5",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_6",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pea_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_7",
    &setup_mmap_open_pee_5_common,
    { { &setup_mmap_open_pee_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_8",
    &setup_mmap_open_pe6_8_common,
    { { &setup_mmap_open_pee_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_9",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_pe6_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_10",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pe6_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_11",
    &setup_mmap_open_pe6_11_common,
    { { &setup_mmap_open_pe6_11_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_12",
    &setup_mmap_open_pe6_12_common,
    { { &setup_mmap_open_pe6_12_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_13",
    &setup_mmap_open_pe6_13_common,
    { { &setup_mmap_open_pe6_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_14",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pe6_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_15",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_pe6_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_16",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_17",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_18",
    &setup_mmap_open_pe6_11_common,
    { { &setup_mmap_open_pe6_18_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_19",
    &setup_mmap_open_pe6_19_common,
    { { &setup_mmap_open_pf70_36_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe6_20",
    &setup_mmap_open_pe6_20_common,
    { { &setup_mmap_open_pf70_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pe2_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pe2_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pe2_2",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pee_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pe2_3",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pe2_4",
    &setup_mmap_open_pe6_20_common,
    { { &setup_mmap_open_pea_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_2",
    &setup_mmap_open_pde_2_common,
    { { &setup_mmap_open_pde_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_3",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_4",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pde_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_6",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf70_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_7",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_8",
    &setup_mmap_open_pf70_16_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_9",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_10",
    &setup_mmap_open_pde_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_11",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pde_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_12",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pde_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_13",
    &setup_mmap_open_pde_13_common,
    { { &setup_mmap_open_pde_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pde_13_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_14",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pde_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_15",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pde_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_16",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pde_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_17",
    &setup_mmap_open_pf70_31_common,
    { { &setup_mmap_open_pee_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_18",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pde_18_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_19",
    &setup_mmap_open_pde_19_common,
    { { &setup_mmap_open_pf70_24_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_20",
    &setup_mmap_open_pde_20_common,
    { { &setup_mmap_open_pde_20_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_17_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_21",
    &setup_mmap_open_pde_21_common,
    { { &setup_mmap_open_pde_21_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_22",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_19_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_23",
    &setup_mmap_open_pde_23_common,
    { { &setup_mmap_open_pf70_18_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_24",
    &setup_mmap_open_pde_24_common,
    { { &setup_mmap_open_pf70_24_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_25",
    &setup_mmap_open_pde_25_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_26",
    &setup_mmap_open_pde_26_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_27",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pde_27_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_28",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pf70_33_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_29",
    &setup_mmap_open_pde_29_common,
    { { &setup_mmap_open_pf70_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_29_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_30",
    &setup_mmap_open_pde_30_common,
    { { &setup_mmap_open_pde_30_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_31",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_pf70_30_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_32",
    &setup_mmap_open_pf70_2_common,
    { { &setup_mmap_open_pde_32_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_33",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf70_28_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_34",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pde_34_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_35",
    &setup_mmap_open_pde_35_common,
    { { &setup_mmap_open_pf70_39_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_36",
    &setup_mmap_open_pde_36_common,
    { { &setup_mmap_open_pde_36_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_17_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_37",
    &setup_mmap_open_pde_37_common,
    { { &setup_mmap_open_pde_37_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_38",
    &setup_mmap_open_pde_38_common,
    { { &setup_mmap_open_pde_38_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_39",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pde_39_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_40",
    &setup_mmap_open_pf70_11_common,
    { { &setup_mmap_open_pf70_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_41",
    &setup_mmap_open_pf30_38_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pde_42",
    &setup_mmap_open_pde_42_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf50_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_3",
    &setup_mmap_open_pf50_3_common,
    { { &setup_mmap_open_pf70_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_5",
    &setup_mmap_open_pf50_5_common,
    { { &setup_mmap_open_pf50_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pda_6",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf30_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_3",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf30_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_4",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_6",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pf30_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_7",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_8",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_9",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pd6_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_10",
    &setup_mmap_open_pf30_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_11",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_12",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pd6_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_13",
    &setup_mmap_open_pf30_13_common,
    { { &setup_mmap_open_pd6_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf30_13_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_14",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pf30_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_15",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_16",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pd6_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_17",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_24_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_18",
    &setup_mmap_open_pd6_18_common,
    { { &setup_mmap_open_pd6_18_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pd6_18_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_19",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_24_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_20",
    &setup_mmap_open_pd6_20_common,
    { { &setup_mmap_open_pf70_23_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_21",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf70_19_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_22",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_23",
    &setup_mmap_open_pf30_10_common,
    { { &setup_mmap_open_pf70_25_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_24",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pd6_24_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_25",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf30_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_26",
    &setup_mmap_open_pf30_13_common,
    { { &setup_mmap_open_pd6_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf30_13_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_27",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pf70_33_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_28",
    &setup_mmap_open_pd6_28_common,
    { { &setup_mmap_open_pd6_28_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_29",
    &setup_mmap_open_pf70_6_common,
    { { &setup_mmap_open_pd6_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_30",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pd6_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_31",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pde_18_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_32",
    &setup_mmap_open_pf30_10_common,
    { { &setup_mmap_open_pf70_23_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_33",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pd6_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_34",
    &setup_mmap_open_pd6_34_common,
    { { &setup_mmap_open_pf30_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_35",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pde_39_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_36",
    &setup_mmap_open_pd6_18_common,
    { { &setup_mmap_open_pd6_36_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pd6_18_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_37",
    &setup_mmap_open_pf30_10_common,
    { { &setup_mmap_open_pd6_37_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_38",
    &setup_mmap_open_pd6_20_common,
    { { &setup_mmap_open_pd6_37_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_39",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pde_39_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_40",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pd6_24_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_41",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd6_42",
    &setup_mmap_open_pf30_10_common,
    { { &setup_mmap_open_pf70_41_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_1",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_2",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf10_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_3",
    &setup_mmap_open_pf70_15_common,
    { { &setup_mmap_open_pf10_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_5",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf10_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pd2_6",
    &setup_mmap_open_pf70_15_common,
    { { &setup_mmap_open_pf10_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pc0_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pc0_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pc0_2",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pf8_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pc0_3",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pc0_4",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pf8_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pf8_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbe_0",
    &setup_mmap_open_pbe_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbe_1",
    &setup_mmap_open_pbe_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbe_2",
    &setup_mmap_open_pbe_0_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbe_3",
    &setup_mmap_open_pbe_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbdc_0",
    &setup_mmap_open_pf70_27_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbdc_1",
    &setup_mmap_open_pbdc_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbdc_2",
    &setup_mmap_open_pbdc_2_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbdc_3",
    &setup_mmap_open_pbdc_3_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbd4_0",
    &setup_mmap_open_pbdc_2_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbd4_1",
    &setup_mmap_open_pbd4_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbd4_2",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbd4_3",
    &setup_mmap_open_pbd4_3_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbcc_0",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbcc_1",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbcc_2",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbcc_3",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbc4_0",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbc4_1",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbc4_2",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbc4_3",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pbb8_0",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pbb8_1",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb98_0",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb98_1",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb88_0",
    &setup_mmap_open_pb88_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb88_1",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb78_0",
    &setup_mmap_open_pb78_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb78_1",
    &setup_mmap_open_pb78_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb78_2",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb78_3",
    &setup_mmap_open_pb78_3_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb68_0",
    &setup_mmap_open_pf30_22_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb68_1",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb68_2",
    &setup_mmap_open_pf30_38_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb68_3",
    &setup_mmap_open_pde_10_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb58_0",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb58_1",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb58_2",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb58_3",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb48_0",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb48_1",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb48_2",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb48_3",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pb0_0",
    &setup_mmap_open_pb0_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pb0_1",
    &setup_mmap_open_pb0_0_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_pbe_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pae_0",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pae_1",
    &setup_mmap_open_pae_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_0",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf70_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_1",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_padc_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_padc_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_3",
    &setup_mmap_open_pf70_1_common,
    { { &setup_mmap_open_padc_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_4",
    &setup_mmap_open_padc_4_common,
    { { &setup_mmap_open_padc_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pde_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_5",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_padc_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_6",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_padc_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_7",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_padc_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_8",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_pe6_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_9",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_padc_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_10",
    &setup_mmap_open_pde_2_common,
    { { &setup_mmap_open_padc_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_11",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_padc_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_12",
    &setup_mmap_open_padc_12_common,
    { { &setup_mmap_open_pd6_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_13",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf70_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_14",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_padc_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_15",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_padc_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_16",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf70_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_17",
    &setup_mmap_open_pde_2_common,
    { { &setup_mmap_open_pf70_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_18",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_padc_18_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_padc_19",
    &setup_mmap_open_pf70_1_common,
    { { &setup_mmap_open_pf30_41_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pad4_0",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pad4_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_1",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pacc_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_19_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_3",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pacc_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_4",
    &setup_mmap_open_padc_4_common,
    { { &setup_mmap_open_pacc_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pde_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_5",
    &setup_mmap_open_pf70_2_common,
    { { &setup_mmap_open_pacc_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_6",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_7",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_24_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_8",
    &setup_mmap_open_padc_4_common,
    { { &setup_mmap_open_pd6_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pde_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_9",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_10",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pacc_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_11",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pacc_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_12",
    &setup_mmap_open_pacc_12_common,
    { { &setup_mmap_open_pf70_33_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_13",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pacc_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_14",
    &setup_mmap_open_pf30_29_common,
    { { &setup_mmap_open_pacc_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_15",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_16",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pacc_16_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_17",
    &setup_mmap_open_pf70_2_common,
    { { &setup_mmap_open_pacc_17_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_18",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf30_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pacc_19",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pac4_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pac4_1",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_0",
    &setup_mmap_open_pab8_0_common,
    { { &setup_mmap_open_pab8_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_1",
    &setup_mmap_open_pee_1_common,
    { { &setup_mmap_open_pab8_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_2",
    &setup_mmap_open_pab8_2_common,
    { { &setup_mmap_open_pab8_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_3",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pab8_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_4",
    &setup_mmap_open_pab8_4_common,
    { { &setup_mmap_open_pf70_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_5",
    &setup_mmap_open_pee_5_common,
    { { &setup_mmap_open_pab8_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pab8_6",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pab8_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa98_0",
    &setup_mmap_open_pee_10_common,
    { { &setup_mmap_open_pa98_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa98_1",
    &setup_mmap_open_pee_1_common,
    { { &setup_mmap_open_pa98_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pa78_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_1",
    &setup_mmap_open_pd6_28_common,
    { { &setup_mmap_open_pa78_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_2",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pa78_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_3",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pa78_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_4",
    &setup_mmap_open_pa78_4_common,
    { { &setup_mmap_open_pa78_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf30_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_5",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pa78_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_6",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pa78_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_7",
    &setup_mmap_open_pde_31_common,
    { { &setup_mmap_open_pa78_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_8",
    &setup_mmap_open_pa78_8_common,
    { { &setup_mmap_open_pa78_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_9",
    &setup_mmap_open_pa78_8_common,
    { { &setup_mmap_open_pa78_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_10",
    &setup_mmap_open_pf30_29_common,
    { { &setup_mmap_open_pa78_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_11",
    &setup_mmap_open_pa78_11_common,
    { { &setup_mmap_open_pd6_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pa78_11_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_12",
    &setup_mmap_open_pde_30_common,
    { { &setup_mmap_open_pa78_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_13",
    &setup_mmap_open_pa78_13_common,
    { { &setup_mmap_open_pa78_13_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_14",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_15",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pa78_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_16",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pd6_24_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_17",
    &setup_mmap_open_pa78_17_common,
    { { &setup_mmap_open_pf70_31_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_18",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pa78_18_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa78_19",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_41_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa68_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pa68_1",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_1",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pf70_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_19_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_3",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pacc_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_4",
    &setup_mmap_open_padc_4_common,
    { { &setup_mmap_open_pacc_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pde_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_5",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pa58_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_6",
    &setup_mmap_open_pf70_2_common,
    { { &setup_mmap_open_pa58_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_7",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_24_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_8",
    &setup_mmap_open_padc_4_common,
    { { &setup_mmap_open_pd6_26_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pde_13_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_9",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_29_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_10",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pacc_10_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_11",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pa58_11_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_12",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_12_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_13",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pf70_33_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_14",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pa58_14_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_15",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pa58_15_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_16",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pd6_24_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_17",
    &setup_mmap_open_pf70_2_common,
    { { &setup_mmap_open_pa58_17_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_18",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_33_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa58_19",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pa58_19_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_pa48_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pa48_1",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_pa0_0",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_pae_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p9c_0",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p9b8_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p9a8_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p998_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p988_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p970_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p950_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p930_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p910_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p8f0_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p8d0_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p8b0_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p89_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p80_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p9c_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p7c_0",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p7c_1",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_1",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_2",
    &setup_mmap_open_pf70_25_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_3",
    &setup_mmap_open_pf30_29_common,
    { { &setup_mmap_open_padc_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_p778_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_5",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_6",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_p778_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_7",
    &setup_mmap_open_pf30_22_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_8",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_p778_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p778_9",
    &setup_mmap_open_pbdc_2_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p758_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p758_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_2",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_3",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pf30_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_4",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_p738_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_6",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf30_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_7",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_p778_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_8",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p738_9",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p718_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p718_1",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p6f0_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p6f0_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p6f0_2",
    &setup_mmap_open_p6f0_2_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p6f0_3",
    &setup_mmap_open_pee_5_common,
    { { &setup_mmap_open_p6f0_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p6f0_4",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_pab8_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p6f0_5",
    &setup_mmap_open_pee_11_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p6b0_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p6b0_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p670_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p670_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p670_2",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p670_3",
    &setup_mmap_open_pe6_20_common,
    { { &setup_mmap_open_p670_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p630_0",
    &setup_mmap_open_pe6_16_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p630_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_2",
    &setup_mmap_open_pf70_30_common,
    { { &setup_mmap_open_p5f0_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_3",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_p5f0_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_4",
    &setup_mmap_open_p5f0_4_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_5",
    &setup_mmap_open_pde_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_6",
    &setup_mmap_open_p5f0_6_common,
    { { &setup_mmap_open_pf70_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_7",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_p778_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_8",
    &setup_mmap_open_pf30_38_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5f0_9",
    &setup_mmap_open_p5f0_9_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p5b0_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p5b0_1",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_1",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_3",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_p778_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_4",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_p738_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_6",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_p778_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_7",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_p778_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_8",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p570_9",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p530_0",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p530_1",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p48_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p48_1",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p7c_1_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3e_0",
    &setup_mmap_open_pbe_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3e_1",
    &setup_mmap_open_pbe_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3e_2",
    &setup_mmap_open_pbe_0_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3e_3",
    &setup_mmap_open_pbe_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3dc_0",
    &setup_mmap_open_p3dc_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3dc_1",
    &setup_mmap_open_p3dc_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3dc_2",
    &setup_mmap_open_p3dc_2_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3dc_3",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3d4_0",
    &setup_mmap_open_pf30_22_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3d4_1",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3d4_2",
    &setup_mmap_open_p3d4_2_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3d4_3",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3cc_0",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3cc_1",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3cc_2",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3cc_3",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3c4_0",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3c4_1",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3c4_2",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3c4_3",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p3b8_0",
    &setup_mmap_open_p3b8_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3b8_1",
    &setup_mmap_open_p3b8_0_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p3a8_0",
    &setup_mmap_open_p3a8_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p398_0",
    &setup_mmap_open_pb88_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p398_1",
    &setup_mmap_open_p398_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p378_0",
    &setup_mmap_open_pf70_38_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p378_1",
    &setup_mmap_open_p378_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p378_2",
    &setup_mmap_open_p3dc_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p378_3",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p368_0",
    &setup_mmap_open_pf30_22_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_16_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p368_1",
    &setup_mmap_open_pde_10_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p368_2",
    &setup_mmap_open_pf70_10_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p368_3",
    &setup_mmap_open_pbd4_3_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p358_0",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p358_1",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p358_2",
    &setup_mmap_open_pf30_7_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p358_3",
    &setup_mmap_open_pf70_36_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p348_0",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p348_1",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p348_2",
    &setup_mmap_open_pf30_17_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p348_3",
    &setup_mmap_open_pbc4_1_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_9_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p30_0",
    &setup_mmap_open_pb0_0_common,
    { { &setup_mmap_open_pf70_9_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p30_1",
    &setup_mmap_open_pb0_0_common,
    { { &setup_mmap_open_pbe_2_proc0 }, { &setup_mmap_open_pf70_9_proc1 } },
    &setup_mmap_open_pf70_9_procfinal,
    &setup_mmap_open_pf70_10_final,
    { { &test_mmap_open_p3e_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_0",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_1",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_1_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_2",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_1_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_3",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_3_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_4",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_3_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_5",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_6",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2f_7",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_0",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pde_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2de_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_1",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_p778_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2de_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_2",
    &setup_mmap_open_pf30_29_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_3",
    &setup_mmap_open_pae_1_common,
    { { &setup_mmap_open_pacc_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_4",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pa78_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2de_4_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_p778_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2de_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_6",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_p2de_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2de_6_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2de_7",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_0",
    &setup_mmap_open_pacc_12_common,
    { { &setup_mmap_open_p2d6_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2d6_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_1",
    &setup_mmap_open_pacc_12_common,
    { { &setup_mmap_open_p2d6_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2d6_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_2",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_p2d6_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_2_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_3",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2d6_3_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_1_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_5",
    &setup_mmap_open_pd6_34_common,
    { { &setup_mmap_open_p2d6_5_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_5_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_6",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pd6_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2d6_6_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2d6_7",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_p2d6_7_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_7_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_1",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_2",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_3",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_4",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_5",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_6",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2ce_7",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_1",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_2",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_3",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_4",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_5",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_6",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2c6_7",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p2bc_0",
    &setup_mmap_open_pe6_20_common,
    { { &setup_mmap_open_p778_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2bc_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2bc_1",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_p2bc_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2bc_2",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_pab8_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2bc_2_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p2bc_3",
    &setup_mmap_open_pee_1_common,
    { { &setup_mmap_open_pacc_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_3_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p29c_0",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_p778_6_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p29c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p29c_1",
    &setup_mmap_open_pee_3_common,
    { { &setup_mmap_open_p29c_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p29c_1_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p29c_2",
    &setup_mmap_open_pee_13_common,
    { { &setup_mmap_open_pab8_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p29c_2_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p29c_3",
    &setup_mmap_open_pee_10_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_0",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_pde_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p27c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_1",
    &setup_mmap_open_pf30_34_common,
    { { &setup_mmap_open_p27c_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p27c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_2",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_padc_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p27c_2_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_3",
    &setup_mmap_open_pf70_4_common,
    { { &setup_mmap_open_p27c_3_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p27c_3_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_4",
    &setup_mmap_open_pf70_26_common,
    { { &setup_mmap_open_p27c_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p27c_4_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_5",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_pa78_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2de_4_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_6",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf70_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_3_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p27c_7",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pa78_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2de_4_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_0",
    &setup_mmap_open_pacc_12_common,
    { { &setup_mmap_open_p2d6_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p26c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_1",
    &setup_mmap_open_pf70_19_common,
    { { &setup_mmap_open_pad4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p26c_1_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_2",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_p26c_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p26c_2_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_3",
    &setup_mmap_open_pae_1_common,
    { { &setup_mmap_open_p2d6_2_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2d6_2_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_4",
    &setup_mmap_open_pf30_9_common,
    { { &setup_mmap_open_p26c_4_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_3_final,
    { { &test_mmap_open_p2d6_2_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_5",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p26c_5_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_6",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pd6_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p26c_6_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p26c_7",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pd6_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2d6_6_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pacc_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_1",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_2",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_3",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_4",
    &setup_mmap_open_pf30_14_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_5",
    &setup_mmap_open_pd6_34_common,
    { { &setup_mmap_open_pf30_8_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p25c_5_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_6",
    &setup_mmap_open_pd6_34_common,
    { { &setup_mmap_open_pf30_9_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p25c_6_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p25c_7",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_p2d6_1_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2d6_3_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_1",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_2",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_3",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pac4_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_4",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_5",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_6",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p24c_7",
    &setup_mmap_open_pac4_1_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf70_2_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p22_0",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p22_1",
    &setup_mmap_open_pee_10_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_1_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p22_2",
    &setup_mmap_open_pea_4_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_6_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p22_3",
    &setup_mmap_open_pee_10_common,
    { { &setup_mmap_open_pae_0_proc0 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p2f_3_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p1c_0",
    &setup_mmap_open_pf8_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf8_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p1b8_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p1a8_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p198_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p188_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p170_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf70_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p130_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p110_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pf30_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p0f0_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p0d0_0",
    &setup_mmap_open_pf70_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pde_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p0b0_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 0, "open" } },
    &cleanup },
  { "fs-mmap_open_p09_0",
    &setup_mmap_open_pf70_22_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_final,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pd6_0_1, 1, "open" } },
    &cleanup },
  { "fs-mmap_open_p00_0",
    &setup_mmap_open_pee_0_common,
    { { &setup_mmap_open_pf8_0_proc1 }, { &setup_mmap_open_pf8_0_proc1 } },
    &setup_mmap_open_pf8_0_procfinal,
    &setup_mmap_open_pf8_0_procfinal,
    { { &test_mmap_open_p1c_0_0, 0, "mmap" },
      { &test_mmap_open_pc0_0_1, 0, "open" } },
    &cleanup },
//+++ common
  {}
};
