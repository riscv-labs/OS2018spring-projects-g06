//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: memread read
 */
static int test_memread_read_pfc_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int r, signal;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    r = *p;
  pf_active = 0;
  expect_result("r", r, 0);
  expect_result("signal", signal, 0);
  return r;
}
static int test_memread_read_pfc_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_memread_read_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pfc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_read_pfc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_memread_read_pfc_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_memread_read_pfc_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: memread read
 */
// static int test_memread_read_pfc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pfc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pfc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
static void setup_memread_read_pfc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pfc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pfb_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
static int test_memread_read_pfb_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(11);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_memread_read_pfb_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pfb_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_read_pfb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pfb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pfb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pfb_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pfb_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pfb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfb_0_common
static void setup_memread_read_pfb_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pfb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pfb_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pfb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pfa_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
static int test_memread_read_pfa_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_memread_read_pfa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pfa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_read_pfa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_memread_read_pfa_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pfa_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pfa_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pfa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pfa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfa_0_common
static void setup_memread_read_pfa_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pfa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_pfa_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pfa_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pf8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
static int test_memread_read_pf8_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_memread_read_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_memread_read_pf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pfb_0_proc0
// static void setup_memread_read_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pf8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pf8_0_common
// static void setup_memread_read_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pfb_1_proc0
// static void setup_memread_read_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pf8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pf4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pf4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_pf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_read_pf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_read_pf4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_memread_read_pf4_0_final(void) {
  unlink("__i0");
}
static void setup_memread_read_pf4_0_procfinal(void) {
  
}

/*
 * calls: memread read
 */
// static int test_memread_read_pf4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pf4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pf4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pf4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pf4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pf4_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pf0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pf0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memread_read_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pf4_0_proc0
// static void setup_memread_read_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pf0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pf0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pf4_1_proc0
// static void setup_memread_read_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pf0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pf0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pe_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pe_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
static void setup_memread_read_pe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
static void setup_memread_read_pe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memread_read_pe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pe_0_final(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal
// static void setup_memread_read_pe_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pe_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pe_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_read_pe_0_common
static void setup_memread_read_pe_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pe_1_final(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal
// static void setup_memread_read_pe_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pdc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pdc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
static void setup_memread_read_pdc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_read_pdc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_memread_read_pdc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pdc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pdc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pdc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pdc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
static void setup_memread_read_pdc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pdc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_pdc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pdc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pdb_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pdb_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pdb_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfb_0_common
// static void setup_memread_read_pdb_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pdc_0_proc0
static void setup_memread_read_pdb_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_memread_read_pdb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pdb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pdb_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pdb_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pdb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfb_0_common
// static void setup_memread_read_pdb_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pdc_1_proc0
// static void setup_memread_read_pdb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pdb_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pdb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pda_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pda_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pda_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfa_0_common
static void setup_memread_read_pda_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
static void setup_memread_read_pda_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_memread_read_pda_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pda_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pda_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pda_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pda_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfa_0_common
static void setup_memread_read_pda_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memread_read_pda_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_pda_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pda_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pd8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pd8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pf8_0_common
// static void setup_memread_read_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pdc_0_proc0
// static void setup_memread_read_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pd8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pf8_0_common
// static void setup_memread_read_pd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pdc_1_proc0
// static void setup_memread_read_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pd8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pd4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pd4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pe_0_proc0
static void setup_memread_read_pd4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_read_pd4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pd4_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pd4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pd4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pd4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pe_1_proc0
// static void setup_memread_read_pd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd4_0_proc1
// static void setup_memread_read_pd4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pd4_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pd0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pd0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pe_0_proc0
static void setup_memread_read_pd0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_read_pd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pd0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pe_1_proc0
// static void setup_memread_read_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_pd0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pd0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_read_pe_0_common
// static void setup_memread_read_pc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memread_read_pe_0_proc0
// static void setup_memread_read_pc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pc_0_final(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal
// static void setup_memread_read_pc_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_pc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_read_pe_0_common
// static void setup_memread_read_pc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memread_read_pe_1_proc0
// static void setup_memread_read_pc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pc_1_final(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal
// static void setup_memread_read_pc_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
static int test_memread_read_pbe_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int r, signal;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    r = *p;
  pf_active = 0;
  expect_result("signal", signal, 7);
  expect_result("r", r, -1);
  return r;
}
// static int test_memread_read_pbe_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
static void setup_memread_read_pbe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pbe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbe_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
static void setup_memread_read_pbe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pbe_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_read_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
static void setup_memread_read_pbe_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_memread_read_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbe_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbe_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pbe_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbe_1_common
static void setup_memread_read_pbe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_read_pbe_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbe_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbe_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbe_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbe_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pbe_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbe_0_common
static void setup_memread_read_pbe_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_read_pbe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbe_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbe_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
static void setup_memread_read_pbd8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pbd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pbd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
static void setup_memread_read_pbd8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pbd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_read_pbd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbd8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pbd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pbd8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memread_read_pbd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbd8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbd8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pbd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_0_common
static void setup_memread_read_pbd8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_read_pbd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbd8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbd8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pbd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
static void setup_memread_read_pbd0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pbd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_pbd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pbd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pbd0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_read_pbd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_pbd0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbd0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd0_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pbd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_0_common
static void setup_memread_read_pbd0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_read_pbd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_pbd0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbd0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbd0_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbd0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pbd0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pbd0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memread_read_pbd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_pbd0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbd0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pbc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_memread_read_pbc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pbd8_0_proc0
// static void setup_memread_read_pbc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pbc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_pbc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_read_pbc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbc_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbc_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pbc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbc_1_common
static void setup_memread_read_pbc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_read_pbc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbc_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pbc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pbc_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pbc_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pbc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbc_0_common
// static void setup_memread_read_pbc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pbd8_3_proc0
// static void setup_memread_read_pbc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_pbc_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pbc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pba_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pba_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_pba_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_pba_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_read_pba_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
static void setup_memread_read_pba_0_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_memread_read_pba_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pba_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pba_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pba_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pba_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x985000);
}
// static void setup_memread_read_pba_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pba_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pba_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pba_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pba_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_pba_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_pba_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d5000);
}
// static void setup_memread_read_pba_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pba_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_pba_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pba_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pba_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pba_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pba_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
}
// static void setup_memread_read_pba_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pba_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pba_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pba_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pba_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pba_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pba_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_read_pba_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pba_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pba_4_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pba_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pba_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pba_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pba_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_read_pba_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pba_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pba_5_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pb8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pb8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pba_0_common
static void setup_memread_read_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_read_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pb8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pb8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pb8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pb8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_pb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pb8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pb8_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pb8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pb8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pba_0_common
static void setup_memread_read_pb8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4000);
}
// static void setup_memread_read_pb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pb8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_pb8_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pb8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pb8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pb8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
static void setup_memread_read_pb8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memread_read_pb8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pb8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pb8_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pb0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pb0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pb0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pb0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pb0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_pb0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_read_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pb0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pb0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pae_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pae_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbe_0_common
static void setup_memread_read_pae_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_pae_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pae_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pae_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pae_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pae_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbe_1_common
static void setup_memread_read_pae_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_memread_read_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_pae_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pae_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pae_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pae_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pae_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbe_1_common
static void setup_memread_read_pae_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memread_read_pae_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_pae_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pae_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pae_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pae_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pae_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbe_0_common
static void setup_memread_read_pae_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_read_pae_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_pae_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pae_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pad8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_0_common
// static void setup_memread_read_pad8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pae_0_proc0
// static void setup_memread_read_pad8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pad8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pad8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pad8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pad8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_read_pad8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pad8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pad8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pad8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pad8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memread_read_pad8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pad8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pad8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_pad8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_0_common
// static void setup_memread_read_pad8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pae_3_proc0
// static void setup_memread_read_pad8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pad8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pad8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pad0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
static void setup_memread_read_pad0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_memread_read_pad0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_pad0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pad0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pad0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pad0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memread_read_pad0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_pad0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pad0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad0_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pad0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbd8_1_common
static void setup_memread_read_pad0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memread_read_pad0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_pad0_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pad0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pad0_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pad0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_pad0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
static void setup_memread_read_pad0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memread_read_pad0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_pad0_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pad0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pac_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pac_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbc_0_common
// static void setup_memread_read_pac_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pae_0_proc0
// static void setup_memread_read_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pac_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pac_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pac_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pac_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbc_1_common
// static void setup_memread_read_pac_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memread_read_pae_1_proc0
// static void setup_memread_read_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pac_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pac_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pac_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pac_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pac_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbc_1_common
// static void setup_memread_read_pac_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memread_read_pae_2_proc0
// static void setup_memread_read_pac_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pac_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_pac_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pac_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pac_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pac_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pbc_0_common
// static void setup_memread_read_pac_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pae_3_proc0
// static void setup_memread_read_pac_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_pac_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_pac_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_paa_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_paa_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_paa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_read_paa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
static void setup_memread_read_paa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_read_paa_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_paa_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_paa_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_paa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_paa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_paa_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pb0_0_proc0
// static void setup_memread_read_paa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_paa_0_proc1
// static void setup_memread_read_paa_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_paa_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_paa_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_paa_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_paa_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_paa_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pb0_0_proc0
// static void setup_memread_read_paa_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd4_0_proc1
// static void setup_memread_read_paa_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_paa_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_paa_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_paa_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_paa_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_read_paa_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_memread_read_paa_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd4_0_proc1
// static void setup_memread_read_paa_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_paa_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_paa_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_paa_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_paa_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_paa_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_memread_read_paa_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_paa_0_proc1
// static void setup_memread_read_paa_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_paa_4_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_paa_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_paa_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_paa_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
static void setup_memread_read_paa_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memread_read_paa_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_paa_0_proc1
// static void setup_memread_read_paa_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_paa_5_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pa8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pa8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pa8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_memread_read_pa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x26000);
// }
// ^ See setup_memread_read_paa_0_proc0
static void setup_memread_read_pa8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_memread_read_pa8_0_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_memread_read_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pa8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pa8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pa8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memread_read_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pb0_0_proc0
// static void setup_memread_read_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pa8_0_proc1
// static void setup_memread_read_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pa8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pa8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_pa8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_pa8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
}
// static void setup_memread_read_pa8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pa8_0_proc1
// static void setup_memread_read_pa8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_pa8_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pa8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pa8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_pa8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
static void setup_memread_read_pa8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memread_read_pa8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_pa8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pa8_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pa0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pa0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pb0_0_proc0
// static void setup_memread_read_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_pa0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_pbe_0_0
// static int test_memread_read_pa0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memread_read_pb0_1_proc0
// static void setup_memread_read_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_pa0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_pa0_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9e_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
static void setup_memread_read_p9e_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_p9e_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_read_p9e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9e_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
static void setup_memread_read_p9e_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_p9e_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_read_p9e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9e_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9e_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9e_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p9e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9e_0_common
static void setup_memread_read_p9e_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_read_p9e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9e_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9e_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p9e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9e_1_common
static void setup_memread_read_p9e_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_read_p9e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9e_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
static void setup_memread_read_p9d8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_p9d8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_read_p9d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
static void setup_memread_read_p9d8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_p9d8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_memread_read_p9d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9d8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p9d8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p9d8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_read_p9d8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9d8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9d8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p9d8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p9d8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_memread_read_p9d8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9d8_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9d8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p9d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p9d0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_read_p9d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_p9d0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p9d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p9d0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_memread_read_p9d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_p9d0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9d0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d0_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p9d0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p9d0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_memread_read_p9d0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_p9d0_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9d0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9d0_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9d0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p9d0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p9d0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_read_p9d0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_p9d0_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9d0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_p9c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_p9c_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_read_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_p9c_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memread_read_p9c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_read_p9c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9c_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p9c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9c_0_common
static void setup_memread_read_p9c_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_read_p9c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p9c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9c_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p9c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9c_1_common
static void setup_memread_read_p9c_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_read_p9c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p9c_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p9c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_p9a_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_p9a_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_read_p9a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p9a_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p9a_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p9a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
static void setup_memread_read_p9a_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_read_p9a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p9a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p9a_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9a_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_p9a_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_read_p9a_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memread_read_p9a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p9a_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p9a_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p9a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p9a_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_p9a_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_p9a_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_read_p9a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p9a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p9a_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p98_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_p98_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_p98_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_read_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p98_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p98_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p98_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p98_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_p98_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_p98_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memread_read_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p98_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p98_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p98_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_p98_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_p98_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_memread_read_p98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p98_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p98_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p98_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p98_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
static void setup_memread_read_p98_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memread_read_p98_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_read_p98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p98_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p98_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p98_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p98_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p98_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_p98_3_common
static void setup_memread_read_p98_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memread_read_p98_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p98_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p98_4_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p98_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p98_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p98_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
static void setup_memread_read_p98_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_read_p98_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p98_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p98_5_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p90_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p90_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
static void setup_memread_read_p90_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_read_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p90_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p90_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p90_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
static void setup_memread_read_p90_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_read_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p90_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8e_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p8e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9e_0_common
static void setup_memread_read_p8e_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memread_read_p8e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_p8e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8e_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p8e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9e_1_common
static void setup_memread_read_p8e_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_read_p8e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_p8e_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8e_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8e_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p8e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9e_0_common
static void setup_memread_read_p8e_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memread_read_p8e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_p8e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8e_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8e_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p8e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9e_1_common
static void setup_memread_read_p8e_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_read_p8e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_p8e_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p8d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p8d8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_read_p8d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p8d8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p8d8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_memread_read_p8d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8d8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p8d8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p8d8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_read_p8d8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8d8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8d8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p8d8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p8d8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_memread_read_p8d8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8d8_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8d8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p8d0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
// static void setup_memread_read_p8d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_p8d0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p8d0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x3000);
}
// static void setup_memread_read_p8d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_p8d0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8d0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d0_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d0_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8d0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_1_common
static void setup_memread_read_p8d0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
// static void setup_memread_read_p8d0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_p8d0_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8d0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8d0_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8d0_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8d0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9d8_0_common
static void setup_memread_read_p8d0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memread_read_p8d0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_p8d0_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8d0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9c_0_common
// static void setup_memread_read_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_read_p8e_0_proc0
// static void setup_memread_read_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p8c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9c_1_common
// static void setup_memread_read_p8c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_read_p8e_1_proc0
// static void setup_memread_read_p8c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8c_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8c_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p8c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9c_0_common
// static void setup_memread_read_p8c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_read_p8e_2_proc0
// static void setup_memread_read_p8c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p8c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8c_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8c_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p8c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_p9c_1_common
// static void setup_memread_read_p8c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memread_read_p8e_3_proc0
// static void setup_memread_read_p8c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p8c_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pbe_1_final
// static void setup_memread_read_p8c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_paa_3_common
static void setup_memread_read_p8a_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memread_read_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd4_0_proc1
// static void setup_memread_read_p8a_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_read_p90_0_proc0
// static void setup_memread_read_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd4_0_proc1
// static void setup_memread_read_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8a_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
static void setup_memread_read_p8a_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memread_read_p8a_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
}
static void setup_memread_read_p8a_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_read_p8a_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p8a_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p8a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p8a_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p8a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p8a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_read_p90_1_proc0
static void setup_memread_read_p8a_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_read_p8a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p8a_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p88_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p88_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_p98_0_common
// static void setup_memread_read_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memread_read_p8a_0_proc0
// static void setup_memread_read_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pa8_0_proc1
// static void setup_memread_read_p88_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p88_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p88_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p88_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_p98_0_common
static void setup_memread_read_p88_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memread_read_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pa8_0_proc1
// static void setup_memread_read_p88_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memread_read_pba_0_final
// static void setup_memread_read_p88_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p88_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p88_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p88_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_p9a_3_common
static void setup_memread_read_p88_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x3000);
}
static void setup_memread_read_p88_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memread_read_p88_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p88_2_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p88_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p88_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p88_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_p98_3_common
static void setup_memread_read_p88_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memread_read_p88_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_p88_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p88_3_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p88_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p88_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p88_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_p98_3_common
static void setup_memread_read_p88_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memread_read_p88_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_p88_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p88_4_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p88_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p88_5_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p88_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p88_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_read_p90_1_proc0
// static void setup_memread_read_p88_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_p88_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p88_5_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p80_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p80_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memread_read_p90_0_proc0
// static void setup_memread_read_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p80_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p80_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("r", r, 0);
//   expect_result("signal", signal, 0);
//   return r;
// }
// ^ See test_memread_read_pfc_0_0
// static int test_memread_read_p80_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p80_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p80_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memread_read_p90_1_proc0
// static void setup_memread_read_p80_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p80_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p80_1_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
static int test_memread_read_p78_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int r, signal;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    r = *p;
  pf_active = 0;
  expect_result("signal", signal, 11);
  expect_result("r", r, -1);
  return r;
}
// static int test_memread_read_p78_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
// static void setup_memread_read_p78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_p78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p76_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p76_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p76_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfb_0_common
// static void setup_memread_read_p76_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p76_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p76_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p76_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p74_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p74_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfa_0_common
// static void setup_memread_read_p74_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_p74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_p74_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p74_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p70_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p70_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pf8_0_common
// static void setup_memread_read_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p68_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_p68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p68_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p60_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p60_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p60_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p60_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_read_pe_0_common
// static void setup_memread_read_p4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p4_0_final(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal
// static void setup_memread_read_p4_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p38_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p38_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfc_0_common
// static void setup_memread_read_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdc_0_proc1
// static void setup_memread_read_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p36_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p36_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfb_0_1
// static void setup_memread_read_p36_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfb_0_common
// static void setup_memread_read_p36_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p36_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p36_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p36_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p34_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p34_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p34_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pfb_0_common
// static void setup_memread_read_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfa_0_proc1
// static void setup_memread_read_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pda_0_proc1
// static void setup_memread_read_p34_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p34_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p30_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p30_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memread_read_pf8_0_common
// static void setup_memread_read_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pfc_0_proc1
// static void setup_memread_read_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memread_read_pdb_0_proc1
// static void setup_memread_read_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_final
// static void setup_memread_read_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memread_read_pfc_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p28_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfa_0_1
// static void setup_memread_read_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memread_read_pf4_0_common
// static void setup_memread_read_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd4_0_proc1
// static void setup_memread_read_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p28_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p20_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p20_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pf8_0_1
// static void setup_memread_read_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memread_read_pf0_0_common
// static void setup_memread_read_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memread_read_pd0_0_proc1
// static void setup_memread_read_p20_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memread_read_pf4_0_final
// static void setup_memread_read_p20_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

/*
 * calls: memread read
 */
// static int test_memread_read_p0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int r, signal;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     r = *p;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memread_read_p78_0_0
// static int test_memread_read_p0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_memread_read_pfc_0_1
// static void setup_memread_read_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memread_read_pe_0_common
// static void setup_memread_read_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memread_read_pf4_0_proc1
// static void setup_memread_read_p0_0_final(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal
// static void setup_memread_read_p0_0_procfinal(void) {
//   
// }
// ^ See setup_memread_read_pf4_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-memread_read_pfc_0",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pfc_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pfc_1",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pfc_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pfb_0",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pfb_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pfb_1",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pfb_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pfa_0",
    &setup_memread_read_pfa_0_common,
    { { &setup_memread_read_pfa_0_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pfa_1",
    &setup_memread_read_pfa_0_common,
    { { &setup_memread_read_pfa_1_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pf8_0",
    &setup_memread_read_pf8_0_common,
    { { &setup_memread_read_pfb_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pf8_1",
    &setup_memread_read_pf8_0_common,
    { { &setup_memread_read_pfb_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pf4_0",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pf4_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pf4_1",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pf4_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pf0_0",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pf4_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pf0_1",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pf4_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pe_0",
    &setup_memread_read_pe_0_common,
    { { &setup_memread_read_pe_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_procfinal,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pe_1",
    &setup_memread_read_pe_0_common,
    { { &setup_memread_read_pe_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_procfinal,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pdc_0",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pdc_0_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pdc_1",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pdc_1_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pdb_0",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pdc_0_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pdb_1",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pdc_1_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pda_0",
    &setup_memread_read_pfa_0_common,
    { { &setup_memread_read_pda_0_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pda_1",
    &setup_memread_read_pfa_0_common,
    { { &setup_memread_read_pda_1_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pd8_0",
    &setup_memread_read_pf8_0_common,
    { { &setup_memread_read_pdc_0_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pd8_1",
    &setup_memread_read_pf8_0_common,
    { { &setup_memread_read_pdc_1_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pd4_0",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pe_0_proc0 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pd4_1",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pe_1_proc0 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pd0_0",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pe_0_proc0 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pd0_1",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pe_1_proc0 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pc_0",
    &setup_memread_read_pe_0_common,
    { { &setup_memread_read_pe_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_procfinal,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pc_1",
    &setup_memread_read_pe_0_common,
    { { &setup_memread_read_pe_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_procfinal,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pbe_0",
    &setup_memread_read_pbe_0_common,
    { { &setup_memread_read_pbe_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbe_1",
    &setup_memread_read_pbe_1_common,
    { { &setup_memread_read_pbe_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbe_2",
    &setup_memread_read_pbe_1_common,
    { { &setup_memread_read_pbe_2_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbe_3",
    &setup_memread_read_pbe_0_common,
    { { &setup_memread_read_pbe_3_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd8_0",
    &setup_memread_read_pbd8_0_common,
    { { &setup_memread_read_pbd8_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd8_1",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pbd8_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd8_2",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pbd8_2_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd8_3",
    &setup_memread_read_pbd8_0_common,
    { { &setup_memread_read_pbd8_3_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd0_0",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pbd0_0_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd0_1",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pbd0_1_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd0_2",
    &setup_memread_read_pbd8_0_common,
    { { &setup_memread_read_pbd0_2_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbd0_3",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pbd0_3_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbc_0",
    &setup_memread_read_pbc_0_common,
    { { &setup_memread_read_pbd8_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbc_1",
    &setup_memread_read_pbc_1_common,
    { { &setup_memread_read_pbc_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbc_2",
    &setup_memread_read_pbc_1_common,
    { { &setup_memread_read_pbc_2_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pbc_3",
    &setup_memread_read_pbc_0_common,
    { { &setup_memread_read_pbd8_3_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pba_0",
    &setup_memread_read_pba_0_common,
    { { &setup_memread_read_pba_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pba_1",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pba_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pba_2",
    &setup_memread_read_pba_2_common,
    { { &setup_memread_read_pba_2_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pba_3",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pba_3_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pba_4",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pba_4_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pba_5",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pba_5_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pb8_0",
    &setup_memread_read_pba_0_common,
    { { &setup_memread_read_pb8_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pb8_1",
    &setup_memread_read_pb8_1_common,
    { { &setup_memread_read_pb8_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pb8_2",
    &setup_memread_read_pba_0_common,
    { { &setup_memread_read_pb8_2_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pb8_3",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pb8_3_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pb0_0",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pb0_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pb0_1",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pb0_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_pae_0",
    &setup_memread_read_pbe_0_common,
    { { &setup_memread_read_pae_0_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pae_1",
    &setup_memread_read_pbe_1_common,
    { { &setup_memread_read_pae_1_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pae_2",
    &setup_memread_read_pbe_1_common,
    { { &setup_memread_read_pae_2_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pae_3",
    &setup_memread_read_pbe_0_common,
    { { &setup_memread_read_pae_3_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad8_0",
    &setup_memread_read_pbd8_0_common,
    { { &setup_memread_read_pae_0_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad8_1",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pad8_1_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad8_2",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pad8_2_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad8_3",
    &setup_memread_read_pbd8_0_common,
    { { &setup_memread_read_pae_3_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad0_0",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pad0_0_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad0_1",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pad0_1_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad0_2",
    &setup_memread_read_pbd8_1_common,
    { { &setup_memread_read_pad0_2_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pad0_3",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pad0_3_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pac_0",
    &setup_memread_read_pbc_0_common,
    { { &setup_memread_read_pae_0_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pac_1",
    &setup_memread_read_pbc_1_common,
    { { &setup_memread_read_pae_1_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pac_2",
    &setup_memread_read_pbc_1_common,
    { { &setup_memread_read_pae_2_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pac_3",
    &setup_memread_read_pbc_0_common,
    { { &setup_memread_read_pae_3_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_paa_0",
    &setup_memread_read_paa_0_common,
    { { &setup_memread_read_paa_0_proc0 }, { &setup_memread_read_paa_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_paa_1",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pb0_0_proc0 }, { &setup_memread_read_paa_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_paa_2",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pb0_0_proc0 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_paa_3",
    &setup_memread_read_paa_3_common,
    { { &setup_memread_read_paa_3_proc0 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_paa_4",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_paa_4_proc0 }, { &setup_memread_read_paa_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_paa_5",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_paa_5_proc0 }, { &setup_memread_read_paa_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pa8_0",
    &setup_memread_read_pa8_0_common,
    { { &setup_memread_read_paa_0_proc0 }, { &setup_memread_read_pa8_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pa8_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pa8_1",
    &setup_memread_read_pa8_1_common,
    { { &setup_memread_read_pb0_0_proc0 }, { &setup_memread_read_pa8_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pa8_2",
    &setup_memread_read_pa8_2_common,
    { { &setup_memread_read_pa8_2_proc0 }, { &setup_memread_read_pa8_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pa8_3",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pa8_3_proc0 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pa0_0",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pb0_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_pa0_1",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pb0_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pbe_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p9e_0",
    &setup_memread_read_p9e_0_common,
    { { &setup_memread_read_p9e_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9e_1",
    &setup_memread_read_p9e_1_common,
    { { &setup_memread_read_p9e_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9e_2",
    &setup_memread_read_p9e_0_common,
    { { &setup_memread_read_p9e_2_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9e_3",
    &setup_memread_read_p9e_1_common,
    { { &setup_memread_read_p9e_3_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d8_0",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p9d8_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d8_1",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p9d8_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d8_2",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p9d8_2_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d8_3",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p9d8_3_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d0_0",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p9d0_0_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d0_1",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p9d0_1_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d0_2",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p9d0_2_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9d0_3",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p9d0_3_proc0 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9c_0",
    &setup_memread_read_p9c_0_common,
    { { &setup_memread_read_p9c_0_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9c_1",
    &setup_memread_read_p9c_1_common,
    { { &setup_memread_read_p9c_1_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9c_2",
    &setup_memread_read_p9c_0_common,
    { { &setup_memread_read_p9c_2_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9c_3",
    &setup_memread_read_p9c_1_common,
    { { &setup_memread_read_p9c_3_proc0 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9a_0",
    &setup_memread_read_p9a_0_common,
    { { &setup_memread_read_p9a_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9a_1",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p9a_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9a_2",
    &setup_memread_read_p9a_2_common,
    { { &setup_memread_read_p9a_2_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p9a_3",
    &setup_memread_read_p9a_3_common,
    { { &setup_memread_read_p9a_3_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p98_0",
    &setup_memread_read_p98_0_common,
    { { &setup_memread_read_p98_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p98_1",
    &setup_memread_read_p98_1_common,
    { { &setup_memread_read_p98_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p98_2",
    &setup_memread_read_p98_2_common,
    { { &setup_memread_read_p98_2_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p98_3",
    &setup_memread_read_p98_3_common,
    { { &setup_memread_read_p98_3_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p98_4",
    &setup_memread_read_p98_3_common,
    { { &setup_memread_read_p98_4_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p98_5",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p98_5_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p90_0",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p90_1",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p8e_0",
    &setup_memread_read_p9e_0_common,
    { { &setup_memread_read_p8e_0_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8e_1",
    &setup_memread_read_p9e_1_common,
    { { &setup_memread_read_p8e_1_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8e_2",
    &setup_memread_read_p9e_0_common,
    { { &setup_memread_read_p8e_2_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8e_3",
    &setup_memread_read_p9e_1_common,
    { { &setup_memread_read_p8e_3_proc0 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d8_0",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p8d8_0_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d8_1",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p8d8_1_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d8_2",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p8d8_2_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d8_3",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p8d8_3_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d0_0",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p8d0_0_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d0_1",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p8d0_1_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d0_2",
    &setup_memread_read_p9d8_1_common,
    { { &setup_memread_read_p8d0_2_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8d0_3",
    &setup_memread_read_p9d8_0_common,
    { { &setup_memread_read_p8d0_3_proc0 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8c_0",
    &setup_memread_read_p9c_0_common,
    { { &setup_memread_read_p8e_0_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8c_1",
    &setup_memread_read_p9c_1_common,
    { { &setup_memread_read_p8e_1_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8c_2",
    &setup_memread_read_p9c_0_common,
    { { &setup_memread_read_p8e_2_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8c_3",
    &setup_memread_read_p9c_1_common,
    { { &setup_memread_read_p8e_3_proc0 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pbe_1_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8a_0",
    &setup_memread_read_paa_3_common,
    { { &setup_memread_read_p8a_0_proc0 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8a_1",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_0_proc0 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8a_2",
    &setup_memread_read_p8a_2_common,
    { { &setup_memread_read_p8a_2_proc0 }, { &setup_memread_read_p8a_2_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p8a_3",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_1_proc0 }, { &setup_memread_read_p8a_3_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p88_0",
    &setup_memread_read_p98_0_common,
    { { &setup_memread_read_p8a_0_proc0 }, { &setup_memread_read_pa8_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p88_1",
    &setup_memread_read_p98_0_common,
    { { &setup_memread_read_p88_1_proc0 }, { &setup_memread_read_pa8_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pba_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p88_2",
    &setup_memread_read_p9a_3_common,
    { { &setup_memread_read_p88_2_proc0 }, { &setup_memread_read_p88_2_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p88_3",
    &setup_memread_read_p98_3_common,
    { { &setup_memread_read_p88_3_proc0 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p88_4",
    &setup_memread_read_p98_3_common,
    { { &setup_memread_read_p88_4_proc0 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p88_5",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_1_proc0 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p80_0",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_0_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p80_1",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_p90_1_proc0 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_pfc_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p78_0",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pdc_0_proc1 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p76_0",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pdb_0_proc1 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p74_0",
    &setup_memread_read_pfa_0_common,
    { { &setup_memread_read_pda_0_proc1 }, { &setup_memread_read_pfa_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p70_0",
    &setup_memread_read_pf8_0_common,
    { { &setup_memread_read_pdb_0_proc1 }, { &setup_memread_read_pfc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p68_0",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pd0_0_proc1 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p60_0",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pd0_0_proc1 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p4_0",
    &setup_memread_read_pe_0_common,
    { { &setup_memread_read_pf4_0_proc1 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_procfinal,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-memread_read_p38_0",
    &setup_memread_read_pfc_0_common,
    { { &setup_memread_read_pfc_0_proc1 }, { &setup_memread_read_pdc_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p36_0",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pfc_0_proc1 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfb_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p34_0",
    &setup_memread_read_pfb_0_common,
    { { &setup_memread_read_pfa_0_proc1 }, { &setup_memread_read_pda_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p30_0",
    &setup_memread_read_pf8_0_common,
    { { &setup_memread_read_pfc_0_proc1 }, { &setup_memread_read_pdb_0_proc1 } },
    &setup_memread_read_pfc_0_procfinal,
    &setup_memread_read_pfc_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p28_0",
    &setup_memread_read_pf4_0_common,
    { { &setup_memread_read_pf4_0_proc1 }, { &setup_memread_read_pd4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfa_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p20_0",
    &setup_memread_read_pf0_0_common,
    { { &setup_memread_read_pf4_0_proc1 }, { &setup_memread_read_pd0_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_final,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pf8_0_1, 1, "read" } },
    &cleanup },
  { "fs-memread_read_p0_0",
    &setup_memread_read_pe_0_common,
    { { &setup_memread_read_pf4_0_proc1 }, { &setup_memread_read_pf4_0_proc1 } },
    &setup_memread_read_pf4_0_procfinal,
    &setup_memread_read_pf4_0_procfinal,
    { { &test_memread_read_p78_0_0, 0, "memread" },
      { &test_memread_read_pfc_0_1, 1, "read" } },
    &cleanup },
//+++ common
  {}
};
