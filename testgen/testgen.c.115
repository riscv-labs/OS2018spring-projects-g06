//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: memwrite open
 */
static int test_memwrite_open_pfc_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int signal, r = 0;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    *p = 0;
  pf_active = 0;
  expect_result("signal", signal, 0);
  expect_result("r", r, 0);
  return r;
}
static int test_memwrite_open_pfc_0_1(void) {
  int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
static void setup_memwrite_open_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_memwrite_open_pfc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
static void setup_memwrite_open_pfc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_memwrite_open_pfc_0_final(void) {
  unlink("__i0");
}
static void setup_memwrite_open_pfc_0_procfinal(void) {
  
}

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pfb8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
static int test_memwrite_open_pfb8_0_1(void) {
  int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
  
  return xerrno(r);
}
static void setup_memwrite_open_pfb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_memwrite_open_pfb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pfb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pfb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pfb8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pfa8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pfa8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pfa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_pfa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pfa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pfa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pfa8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pf98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
static int test_memwrite_open_pf98_0_1(void) {
  int r = open("__f0", O_RDWR | O_CREAT, 0666);
  
  return xerrno(r);
}
static void setup_memwrite_open_pf98_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_memwrite_open_pf98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pf98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pf98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pf98_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pf88_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pf88_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pf88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_pf88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pf88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pf88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pf88_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pf70_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pf70_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
static void setup_memwrite_open_pf70_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_memwrite_open_pf70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pf70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pf70_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pf70_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pf50_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pf50_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pf50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pf50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pf50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pf50_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pf50_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pf30_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pf30_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pf30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pf30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pf30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pf30_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pf30_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pf10_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pf10_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pf10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pf10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pf10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pf10_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pf10_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pef0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
static int test_memwrite_open_pef0_0_1(void) {
  int r = open("__f0", O_RDWR | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static void setup_memwrite_open_pef0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_pef0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pef0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pef0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pef0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_ped0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_ped0_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_ped0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_ped0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_ped0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_ped0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_ped0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_peb_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
static int test_memwrite_open_peb_0_1(void) {
  int r = open("__f0", O_RDWR, 0666);
  
  return xerrno(r);
}
// static void setup_memwrite_open_peb_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_peb_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_peb_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_peb_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_peb_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pe9_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pe9_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pe9_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_pe9_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pe9_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pe9_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pe9_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pe0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
static int test_memwrite_open_pe0_0_1(void) {
  int r = open("__f0", O_RDWR, 0666);
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
// static void setup_memwrite_open_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_open_pfc_0_proc0
// static void setup_memwrite_open_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pe0_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
static int test_memwrite_open_pde_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int signal, r = 0;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    *p = 0;
  pf_active = 0;
  expect_result("signal", signal, 7);
  expect_result("r", r, -1);
  return r;
}
// static int test_memwrite_open_pde_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_pde_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
static void setup_memwrite_open_pde_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_open_pde_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pde_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pde_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pde_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pde_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
static void setup_memwrite_open_pde_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_memwrite_open_pde_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memwrite_open_pde_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
static void setup_memwrite_open_pde_1_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_memwrite_open_pde_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pddc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pddc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
static void setup_memwrite_open_pddc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_memwrite_open_pddc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_open_pde_0_proc0
// static void setup_memwrite_open_pddc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pddc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pddc_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pddc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pddc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pddc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
// static void setup_memwrite_open_pddc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x26000);
// }
// ^ See setup_memwrite_open_pde_1_proc0
// static void setup_memwrite_open_pddc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pddc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pddc_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdd4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdd4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
static void setup_memwrite_open_pdd4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_memwrite_open_pdd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x26000);
// }
// ^ See setup_memwrite_open_pde_1_proc0
// static void setup_memwrite_open_pdd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdd4_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pdd4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdd4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdd4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pdd4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_pdd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_open_pde_0_proc0
// static void setup_memwrite_open_pdd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdd4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pdd4_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdcc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdcc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pdcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
static void setup_memwrite_open_pdcc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
}
// static void setup_memwrite_open_pdcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdcc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pdcc_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdcc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdcc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pdcc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
static void setup_memwrite_open_pdcc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x985000);
}
// static void setup_memwrite_open_pdcc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdcc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pdcc_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdc4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdc4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pdc4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_pdc4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x985000);
// }
// ^ See setup_memwrite_open_pdcc_0_proc0
// static void setup_memwrite_open_pdc4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdc4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pdc4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdc4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdc4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pdc4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
// static void setup_memwrite_open_pdc4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x985000);
// }
// ^ See setup_memwrite_open_pdcc_1_proc0
// static void setup_memwrite_open_pdc4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdc4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pdc4_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pdb8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pdb8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
static void setup_memwrite_open_pdb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_open_pdb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memwrite_open_pdb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pdb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pdb8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pda8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pda8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
static void setup_memwrite_open_pda8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_open_pda8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_open_pda8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pda8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pda8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd98_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pd98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_pd98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x27000);
// }
// ^ See setup_memwrite_open_pdb8_0_proc0
// static void setup_memwrite_open_pd98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd98_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd88_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd88_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pd88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_pd88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x27000);
// }
// ^ See setup_memwrite_open_pdb8_0_proc0
// static void setup_memwrite_open_pd88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd88_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd78_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd78_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_pd78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pd78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x26000);
// }
// ^ See setup_memwrite_open_pde_1_proc0
// static void setup_memwrite_open_pd78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd78_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pd78_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd78_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd78_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_pd78_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pddc_0_common
// static void setup_memwrite_open_pd78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_open_pde_0_proc0
// static void setup_memwrite_open_pd78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd78_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd78_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd68_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd68_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_pd68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
static void setup_memwrite_open_pd68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x704000);
}
// static void setup_memwrite_open_pd68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd68_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd68_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd68_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_pd68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
// static void setup_memwrite_open_pd68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x26000);
// }
// ^ See setup_memwrite_open_pde_1_proc0
// static void setup_memwrite_open_pd68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd68_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pd68_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd58_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd58_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pd58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_pd58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x985000);
// }
// ^ See setup_memwrite_open_pdcc_0_proc0
// static void setup_memwrite_open_pd58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd58_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd58_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd58_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pd58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
// static void setup_memwrite_open_pd58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x985000);
// }
// ^ See setup_memwrite_open_pdcc_1_proc0
// static void setup_memwrite_open_pd58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd58_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pd58_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd48_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd48_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pd48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_pd48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x985000);
// }
// ^ See setup_memwrite_open_pdcc_0_proc0
// static void setup_memwrite_open_pd48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd48_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd48_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd48_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pd48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
// static void setup_memwrite_open_pd48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x985000);
// }
// ^ See setup_memwrite_open_pdcc_1_proc0
// static void setup_memwrite_open_pd48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd48_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pd48_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pd0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pde_0_0
// static int test_memwrite_open_pd0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pe0_0_1
static void setup_memwrite_open_pd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_memwrite_open_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_open_pde_0_proc0
// static void setup_memwrite_open_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pce_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pce_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_pce_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pddc_0_common
static void setup_memwrite_open_pce_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_open_pce_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pce_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pce_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pce_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pce_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_pce_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
static void setup_memwrite_open_pce_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memwrite_open_pce_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pce_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pce_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pcdc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pcdc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pcdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pcdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pcdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pcdc_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pcdc_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pcd4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pcd4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pcd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pcd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pcd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pcd4_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pcd4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pccc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pccc_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pccc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pddc_0_common
// static void setup_memwrite_open_pccc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pccc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pccc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pccc_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pccc_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pccc_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pccc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pccc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pccc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pccc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pccc_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pcc4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pcc4_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pcc4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pddc_0_common
// static void setup_memwrite_open_pcc4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pcc4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pcc4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pcc4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pcc4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pcc4_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pcc4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pcc4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pcc4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pcc4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pcc4_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pcb8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pcb8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pcb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_pcb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pcb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pcb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pcb8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pca8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pca8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pca8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pda8_0_common
static void setup_memwrite_open_pca8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_open_pca8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pca8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pca8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc98_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
static void setup_memwrite_open_pc98_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_open_pc98_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_open_pc98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pc98_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc88_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc88_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pc88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_pc88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pc88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pc88_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc78_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc78_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_pc78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pc78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pc78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc78_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pc78_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc68_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc68_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_pc68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pc68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pc68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc68_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pc68_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc58_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc58_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pc58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pddc_0_common
// static void setup_memwrite_open_pc58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pc58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pc58_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc58_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc58_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pc58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pc58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pc58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc58_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pc58_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc48_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc48_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pc48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pddc_0_common
// static void setup_memwrite_open_pc48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pc48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pc48_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc48_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc48_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_pc48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pdd4_0_common
// static void setup_memwrite_open_pc48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_open_pce_1_proc0
// static void setup_memwrite_open_pc48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc48_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pc48_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pc0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_open_pfc_0_0
// static int test_memwrite_open_pc0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pe0_0_1
// static void setup_memwrite_open_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pce_0_proc0
// static void setup_memwrite_open_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
static int test_memwrite_open_pb8_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int signal, r = 0;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    *p = 0;
  pf_active = 0;
  expect_result("signal", signal, 11);
  expect_result("r", r, -1);
  return r;
}
// static int test_memwrite_open_pb8_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
static void setup_memwrite_open_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_open_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb8_1_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pde_1_common
static void setup_memwrite_open_pb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memwrite_open_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pb8_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb8_2_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_pb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
static void setup_memwrite_open_pb8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memwrite_open_pb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb8_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb70_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb70_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pb70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
static void setup_memwrite_open_pb70_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
}
// static void setup_memwrite_open_pb70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb70_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb70_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb70_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb70_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
static void setup_memwrite_open_pb70_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_memwrite_open_pb70_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1c1000);
}
// static void setup_memwrite_open_pb70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb70_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pb70_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb70_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb70_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pb70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_pb70_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pb70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb70_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb70_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb50_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb50_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pb50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
static void setup_memwrite_open_pb50_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x8ea000);
}
// static void setup_memwrite_open_pb50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb50_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb50_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb50_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pb50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pb70_1_common
static void setup_memwrite_open_pb50_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x8ea000);
}
// static void setup_memwrite_open_pb50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb50_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pb50_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb50_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb50_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pb50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_pb50_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pb50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb50_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb3_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb3_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pb3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
static void setup_memwrite_open_pb3_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x704000);
}
// static void setup_memwrite_open_pb3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb3_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb3_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb3_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb3_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
static void setup_memwrite_open_pb3_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_memwrite_open_pb3_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x704000);
}
// static void setup_memwrite_open_pb3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb3_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pb3_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb3_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb3_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pb3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_pb3_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pb3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb3_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb3_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb1_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb1_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pb1_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
static void setup_memwrite_open_pb1_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2297000);
}
// static void setup_memwrite_open_pb1_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb1_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb1_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb1_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb1_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pb1_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pb70_1_common
static void setup_memwrite_open_pb1_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x2297000);
}
// static void setup_memwrite_open_pb1_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb1_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_pb1_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pb1_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pb1_2_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pb1_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_pb1_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pb1_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pb1_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pb1_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pae_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pae_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_pae_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
// }
// ^ See setup_memwrite_open_pb70_0_proc0
// static void setup_memwrite_open_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pae_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pae_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pae_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pae_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_pae_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pae_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pae_1_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pae_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_paa_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_paa_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_paa_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pdb8_0_common
// static void setup_memwrite_open_paa_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
// }
// ^ See setup_memwrite_open_pb70_0_proc0
// static void setup_memwrite_open_paa_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_paa_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_paa_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_paa_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_paa_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_paa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_paa_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_paa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_paa_1_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_paa_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pa6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pa6_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_open_pc98_0_common
// static void setup_memwrite_open_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
// }
// ^ See setup_memwrite_open_pb70_0_proc0
// static void setup_memwrite_open_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pa6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pa6_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pa6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pa6_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pa6_1_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pa6_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pa2_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pa2_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
static void setup_memwrite_open_pa2_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_open_pa2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
// }
// ^ See setup_memwrite_open_pb70_0_proc0
// static void setup_memwrite_open_pa2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pa2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_pa2_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_pa2_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_pa2_1_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_pa2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_pa2_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_pa2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_pa2_1_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_pa2_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p9e_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p9e_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p9e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p9e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1c1000);
// }
// ^ See setup_memwrite_open_pb70_0_proc0
// static void setup_memwrite_open_p9e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p9e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p9e_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p9e_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p9e_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p9e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pb70_1_common
// static void setup_memwrite_open_p9e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1c1000);
// }
// ^ See setup_memwrite_open_pb70_1_proc0
// static void setup_memwrite_open_p9e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p9e_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_p9e_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p9e_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p9e_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p9e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p9e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_p9e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p9e_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p9e_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p9a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p9a_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
static void setup_memwrite_open_p9a_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_memwrite_open_p9a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x8ea000);
// }
// ^ See setup_memwrite_open_pb50_1_proc0
// static void setup_memwrite_open_p9a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
static void setup_memwrite_open_p9a_0_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_memwrite_open_p9a_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p9a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p9a_1_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p9a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_p9a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_p9a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p9a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p9a_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p9a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p9a_2_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p9a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p9a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x8ea000);
// }
// ^ See setup_memwrite_open_pb50_0_proc0
// static void setup_memwrite_open_p9a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p9a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p9a_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p96_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p96_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p96_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p96_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x704000);
// }
// ^ See setup_memwrite_open_pb3_0_proc0
// static void setup_memwrite_open_p96_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p96_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p96_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p96_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p96_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p96_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pb3_1_common
// static void setup_memwrite_open_p96_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x704000);
// }
// ^ See setup_memwrite_open_pb3_1_proc0
// static void setup_memwrite_open_p96_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p96_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_p96_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p96_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p96_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p96_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p96_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_p96_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p96_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p96_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p92_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p92_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p92_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p92_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2297000);
// }
// ^ See setup_memwrite_open_pb1_0_proc0
// static void setup_memwrite_open_p92_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p92_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p92_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p92_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p92_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p92_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pb70_1_common
// static void setup_memwrite_open_p92_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x2297000);
// }
// ^ See setup_memwrite_open_pb1_1_proc0
// static void setup_memwrite_open_p92_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p92_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pde_1_final
// static void setup_memwrite_open_p92_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p92_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p92_2_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p92_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p92_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_p92_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p92_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p92_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p8_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pe0_0_1
// static void setup_memwrite_open_p8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_open_pd0_0_common
// static void setup_memwrite_open_p8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_open_pb8_0_proc0
// static void setup_memwrite_open_p8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p8_1_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pe0_0_1
// static void setup_memwrite_open_p8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_p8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_open_pb8_2_proc0
// static void setup_memwrite_open_p8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p8_1_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_p8_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p7_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p7_0_1(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfc_0_1
// static void setup_memwrite_open_p7_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfc_0_common
// static void setup_memwrite_open_p7_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p7_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p7_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p7_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p6e_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p6e_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_p6e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p6e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p6e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p6e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p6e_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p6a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p6a_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_p6a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p6a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p6a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p6a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p6a_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p66_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p66_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_p66_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p66_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p66_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p66_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p66_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p62_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p62_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_p62_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p62_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p62_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p62_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p62_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p5c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p5c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_p5c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_p5c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p5c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p5c_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_p5c_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p54_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p54_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pfb8_0_1
// static void setup_memwrite_open_p54_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_p54_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p54_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p54_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_p54_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p4c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p4c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_p4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_p4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p4c_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_p4c_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p44_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p44_0_1(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pf98_0_1
// static void setup_memwrite_open_p44_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_p44_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p44_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_p44_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p3c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p3c_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p3c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p3c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p3c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p3c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p3c_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p34_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p34_0_1(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pef0_0_1
// static void setup_memwrite_open_p34_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pfb8_0_common
// static void setup_memwrite_open_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p34_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p34_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p2c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p2c_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p2c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p2c_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p24_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p24_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_open_peb_0_1
// static void setup_memwrite_open_p24_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_memwrite_open_pf98_0_common
// static void setup_memwrite_open_p24_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p24_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p24_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_open_pfc_0_final
// static void setup_memwrite_open_p24_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

/*
 * calls: memwrite open
 */
// static int test_memwrite_open_p0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_open_pb8_0_0
// static int test_memwrite_open_p0_0_1(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_memwrite_open_pe0_0_1
// static void setup_memwrite_open_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_open_pf70_0_common
// static void setup_memwrite_open_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_open_pfc_0_proc1
// static void setup_memwrite_open_p0_0_final(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal
// static void setup_memwrite_open_p0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_open_pfc_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-memwrite_open_pfc_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pfb8_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pfa8_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pf98_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pf88_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pf70_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pf50_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pf30_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pf10_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pef0_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_ped0_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_peb_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pe9_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pe0_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pe0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pde_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pde_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pde_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pde_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pddc_0",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pde_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pddc_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pde_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdd4_0",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pde_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdd4_1",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pde_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdcc_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pdcc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdcc_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pdcc_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdc4_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pdcc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdc4_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pdcc_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pdb8_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pdb8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pda8_0",
    &setup_memwrite_open_pda8_0_common,
    { { &setup_memwrite_open_pda8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd98_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pdb8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd88_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pdb8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd78_0",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pde_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd78_1",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pde_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd68_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pd68_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd68_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pde_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd58_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pdcc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd58_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pdcc_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd48_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pdcc_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd48_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pdcc_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pd0_0",
    &setup_memwrite_open_pd0_0_common,
    { { &setup_memwrite_open_pde_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pde_0_0, 0, "memwrite" },
      { &test_memwrite_open_pe0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pce_0",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pce_1",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pcdc_0",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pcd4_0",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pccc_0",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pccc_1",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pcc4_0",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pcc4_1",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pcb8_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pca8_0",
    &setup_memwrite_open_pda8_0_common,
    { { &setup_memwrite_open_pca8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc98_0",
    &setup_memwrite_open_pc98_0_common,
    { { &setup_memwrite_open_pc98_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc88_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc78_0",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc68_0",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc58_0",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc58_1",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc48_0",
    &setup_memwrite_open_pddc_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc48_1",
    &setup_memwrite_open_pdd4_0_common,
    { { &setup_memwrite_open_pce_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pc0_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pce_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pfc_0_0, 0, "memwrite" },
      { &test_memwrite_open_pe0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb8_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pb8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb8_1",
    &setup_memwrite_open_pde_1_common,
    { { &setup_memwrite_open_pb8_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb8_2",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb70_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pb70_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb70_1",
    &setup_memwrite_open_pb70_1_common,
    { { &setup_memwrite_open_pb70_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb70_2",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb50_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pb50_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb50_1",
    &setup_memwrite_open_pb70_1_common,
    { { &setup_memwrite_open_pb50_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb50_2",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb3_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb3_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb3_1",
    &setup_memwrite_open_pb3_1_common,
    { { &setup_memwrite_open_pb3_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb3_2",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb1_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb1_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb1_1",
    &setup_memwrite_open_pb70_1_common,
    { { &setup_memwrite_open_pb1_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pb1_2",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pae_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pb70_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pae_1",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_paa_0",
    &setup_memwrite_open_pdb8_0_common,
    { { &setup_memwrite_open_pb70_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_paa_1",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pa6_0",
    &setup_memwrite_open_pc98_0_common,
    { { &setup_memwrite_open_pb70_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pa6_1",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_pa2_0",
    &setup_memwrite_open_pa2_0_common,
    { { &setup_memwrite_open_pb70_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_pa2_1",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p9e_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pb70_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p9e_1",
    &setup_memwrite_open_pb70_1_common,
    { { &setup_memwrite_open_pb70_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p9e_2",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p9a_0",
    &setup_memwrite_open_p9a_0_common,
    { { &setup_memwrite_open_pb50_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_p9a_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p9a_1",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p9a_2",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pb50_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p96_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb3_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p96_1",
    &setup_memwrite_open_pb3_1_common,
    { { &setup_memwrite_open_pb3_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p96_2",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p92_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb1_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p92_1",
    &setup_memwrite_open_pb70_1_common,
    { { &setup_memwrite_open_pb1_1_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pde_1_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p92_2",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p8_0",
    &setup_memwrite_open_pd0_0_common,
    { { &setup_memwrite_open_pb8_0_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pe0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p8_1",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pb8_2_proc0 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pe0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p7_0",
    &setup_memwrite_open_pfc_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfc_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p6e_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p6a_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p66_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p62_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p5c_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p54_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pfb8_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p4c_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p44_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pf98_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p3c_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p34_0",
    &setup_memwrite_open_pfb8_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pef0_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p2c_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 0, "open" } },
    &cleanup },
  { "fs-memwrite_open_p24_0",
    &setup_memwrite_open_pf98_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_final,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_peb_0_1, 1, "open" } },
    &cleanup },
  { "fs-memwrite_open_p0_0",
    &setup_memwrite_open_pf70_0_common,
    { { &setup_memwrite_open_pfc_0_proc1 }, { &setup_memwrite_open_pfc_0_proc1 } },
    &setup_memwrite_open_pfc_0_procfinal,
    &setup_memwrite_open_pfc_0_procfinal,
    { { &test_memwrite_open_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_open_pe0_0_1, 0, "open" } },
    &cleanup },
//+++ common
  {}
};
