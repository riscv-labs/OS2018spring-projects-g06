//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: memwrite mmap
 */
static int test_memwrite_mmap_pfe_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int signal, r = 0;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    *p = 0;
  pf_active = 0;
  expect_result("signal", signal, 0);
  expect_result("r", r, 0);
  return r;
}
static int test_memwrite_mmap_pfe_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pfe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
static void setup_memwrite_mmap_pfe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 1, 0);
}
static void setup_memwrite_mmap_pfe_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_memwrite_mmap_pfe_0_final(void) {
  
}
static void setup_memwrite_mmap_pfe_0_procfinal(void) {
  
}

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
static void setup_memwrite_mmap_pfe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memwrite_mmap_pfe_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pfe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
static void setup_memwrite_mmap_pfe_1_final(void) {
  unlink("__i0");
}
// static void setup_memwrite_mmap_pfe_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pfe_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
static void setup_memwrite_mmap_pfe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memwrite_mmap_pfe_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_2_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pfe_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pfe_3_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pfe_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pfe_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pfe_1_proc0
// static void setup_memwrite_mmap_pfe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfe_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pfe_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pfe_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pfe_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_4_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pfe_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pfe_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
static void setup_memwrite_mmap_pfe_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pfe_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_5_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pfe_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pfe_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pfe_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pfe_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfe_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pfe_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pfe_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pfe_6_proc0
// static void setup_memwrite_mmap_pfe_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfe_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pfe_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pfe_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pfe_5_proc0
// static void setup_memwrite_mmap_pfe_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_8_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pfe_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfe_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pfe_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pfe_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_0_proc0
// static void setup_memwrite_mmap_pfe_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_9_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pfe_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfe_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pfe_10_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pfe_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pfe_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pfe_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfe_10_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pfe_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfb_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pfb_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
static void setup_memwrite_mmap_pfb_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memwrite_mmap_pfb_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
static void setup_memwrite_mmap_pfb_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_memwrite_mmap_pfb_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_memwrite_mmap_pfb_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfb_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfb_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pfb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_pfb_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memwrite_mmap_pfb_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pfb_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pfb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pfac_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pfac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pfac_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pfac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pfac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pfac_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memwrite_mmap_pfac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pfac_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pfac_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pfac_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pfac_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pfac_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pfac_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pfac_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pfac_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pfac_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
static void setup_memwrite_mmap_pfac_4_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_memwrite_mmap_pfac_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pfac_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pfac_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pfac_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pfac_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pfac_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pfac_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pfac_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pfac_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pfac_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pfac_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfac_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfac_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pfac_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pfac_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pfac_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfac_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfac_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfa8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pfa8_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_memwrite_mmap_pfa8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pfa8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memwrite_mmap_pfa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfa8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pfa8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pfa8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfa8_0_1
// static void setup_memwrite_mmap_pfa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfa8_0_common
static void setup_memwrite_mmap_pfa8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memwrite_mmap_pfa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pfa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pfa8_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf8_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf8_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pf8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf6_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pf6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pf6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf6_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pf6_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf6_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pf6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pf6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf6_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pf6_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf3_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf3_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pf3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfb_0_proc0
// static void setup_memwrite_mmap_pf3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pf3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pf3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf3_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pf3_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pf3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pf3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfb_1_proc0
// static void setup_memwrite_mmap_pf3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pf3_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pf3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf28_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pf28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfac_1_proc0
// static void setup_memwrite_mmap_pf28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pf28_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf28_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pf28_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pf28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pf28_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_memwrite_mmap_pf28_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf28_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pf28_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf28_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf28_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf28_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pf28_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfac_1_proc0
// static void setup_memwrite_mmap_pf28_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf28_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pf28_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf28_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pf28_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pf28_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pf28_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pf28_1_proc0
// static void setup_memwrite_mmap_pf28_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf28_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pf28_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pf0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pf0_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pf0_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pec_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pec_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
static void setup_memwrite_mmap_pec_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memwrite_mmap_pec_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pec_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pec_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pec_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
static void setup_memwrite_mmap_pec_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pec_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pec_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pec_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pec_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pec_2_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pec_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pec_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pec_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pec_3_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pec_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pec_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pec_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pec_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pec_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
static void setup_memwrite_mmap_pec_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pec_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pec_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_peb_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_peb_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_peb_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_peb_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
static void setup_memwrite_mmap_peb_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_memwrite_mmap_peb_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_peb_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_peb_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_peb_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_peb_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_peb_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_peb_0_proc0
static void setup_memwrite_mmap_peb_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_memwrite_mmap_peb_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_peb_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pea_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pea_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pea_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
static void setup_memwrite_mmap_pea_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pea_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pea_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pe8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pe8_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pe8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pe6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pe6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pe6_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pe6_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pe6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pe6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pe6_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pe6_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe3_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe3_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pe3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pe3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_peb_0_proc0
// static void setup_memwrite_mmap_pe3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pe3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pe3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe3_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe3_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pe3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pe3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_peb_0_proc0
// static void setup_memwrite_mmap_pe3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pe3_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pe3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe28_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pe28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pe28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pe28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pe28_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe28_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe28_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pe28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pe28_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
static void setup_memwrite_mmap_pe28_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pe28_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pe28_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe28_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe28_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pe28_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pe28_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe28_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pe28_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pe28_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe28_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pe28_3_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pe28_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pe28_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe28_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pe28_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pe28_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pe0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pe0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pe0_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
static int test_memwrite_mmap_pdf0_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int signal, r = 0;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    *p = 0;
  pf_active = 0;
  expect_result("signal", signal, 7);
  expect_result("r", r, -1);
  return r;
}
// static int test_memwrite_mmap_pdf0_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
static void setup_memwrite_mmap_pdf0_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memwrite_mmap_pdf0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i1", 0x26000);
}
// static void setup_memwrite_mmap_pdf0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
static void setup_memwrite_mmap_pdf0_4_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_memwrite_mmap_pdf0_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdf0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i1", 0x26000);
}
// static void setup_memwrite_mmap_pdf0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdf0_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x27000);
}
// static void setup_memwrite_mmap_pdf0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdf0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdf0_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdf0_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pdf0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdf0_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdf0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdf0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdf0_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
static void setup_memwrite_mmap_pdd8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memwrite_mmap_pdd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pdd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pdd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
static void setup_memwrite_mmap_pdd8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memwrite_mmap_pdd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
static void setup_memwrite_mmap_pdd8_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_memwrite_mmap_pdd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pdd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
static void setup_memwrite_mmap_pdd8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pdd8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pdd8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pdd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
static void setup_memwrite_mmap_pdd8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pdd8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pdd8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_memwrite_mmap_pdd6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memwrite_mmap_pdd6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memwrite_mmap_pdd6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_2_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x985000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x2297000);
}
// static void setup_memwrite_mmap_pdd6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_3_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x20ad000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x20ae000);
  init_map_file(0x12345601000, 1, "__i0", 0x20ae000);
}
// static void setup_memwrite_mmap_pdd6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_4_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pdd6_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memwrite_mmap_pdd6_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i2", 0x0);
}
// static void setup_memwrite_mmap_pdd6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
static void setup_memwrite_mmap_pdd6_4_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
}
// static void setup_memwrite_mmap_pdd6_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_5_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x20af000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pdd6_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memwrite_mmap_pdd6_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34267136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x20ad000);
  init_map_file(0x12345601000, 0, "__i1", 0x20ad000);
}
// static void setup_memwrite_mmap_pdd6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_6_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_12_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_7_proc0
// static void setup_memwrite_mmap_pdd6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_9_proc0
// static void setup_memwrite_mmap_pdd6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_8_proc0
// static void setup_memwrite_mmap_pdd6_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_14_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_11_proc0
// static void setup_memwrite_mmap_pdd6_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_15_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_10_proc0
// static void setup_memwrite_mmap_pdd6_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_16_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_17_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x28000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x27000);
}
// static void setup_memwrite_mmap_pdd6_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_17_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_17_1
// static void setup_memwrite_mmap_pdd6_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
  init_map_file(0x12345601000, 0, "__i0", 0x29000);
}
// static void setup_memwrite_mmap_pdd6_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_18_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_19_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_19_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_20_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i2", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_20_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_20_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_21_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_21_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_22_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_file(0x12345601000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_21_proc0
// static void setup_memwrite_mmap_pdd6_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_23_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_24_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_24_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_25_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_26_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_26_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_file(0x12345601000, 0, "__i0", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_24_proc0
// static void setup_memwrite_mmap_pdd6_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_27_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_27_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_28_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_26_proc0
// static void setup_memwrite_mmap_pdd6_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_28_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_29_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_25_proc0
// static void setup_memwrite_mmap_pdd6_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_29_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_30_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_30_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_30_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_31_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_31_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_32_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_32_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 1, "__i1", 0x28000);
}
// static void setup_memwrite_mmap_pdd6_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_32_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_32_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_33_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_33_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_34_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_34_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_34_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_35_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_34_1
// static void setup_memwrite_mmap_pdd6_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_33_proc0
// static void setup_memwrite_mmap_pdd6_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_35_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_36_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_36_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_36_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_37_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_37_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_38_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_38_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_38_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_39_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_34_1
// static void setup_memwrite_mmap_pdd6_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_36_proc0
// static void setup_memwrite_mmap_pdd6_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_39_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_39_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_40_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_34_1
// static void setup_memwrite_mmap_pdd6_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_37_proc0
// static void setup_memwrite_mmap_pdd6_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_40_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_40_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_41_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_34_1
// static void setup_memwrite_mmap_pdd6_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_38_proc0
// static void setup_memwrite_mmap_pdd6_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_41_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_42_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i2", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_42_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_42_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_43_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_43_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_43_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_44_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e29000);
}
// static void setup_memwrite_mmap_pdd6_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_44_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_44_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_45_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_45_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i2", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_45_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_45_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_46_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i1", 0x22fc000);
}
// static void setup_memwrite_mmap_pdd6_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_46_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_46_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_47_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_47_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i2", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_47_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_47_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_48_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_48_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_48_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_49_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i1", 0x22fc000);
}
// static void setup_memwrite_mmap_pdd6_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_49_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_49_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_50_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_50_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_50_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_50_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_51_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_51_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
//   init_map_file(0x12345601000, 1, "__i1", 0x22fc000);
// }
// ^ See setup_memwrite_mmap_pdd6_46_proc0
// static void setup_memwrite_mmap_pdd6_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_51_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_51_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_52_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_52_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x986000);
}
// static void setup_memwrite_mmap_pdd6_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_52_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_52_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_53_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_53_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x705000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x704000);
}
// static void setup_memwrite_mmap_pdd6_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_53_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_54_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_54_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x98c000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_memwrite_mmap_pdd6_54_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pdd6_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10010624, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x98d000);
}
// static void setup_memwrite_mmap_pdd6_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_54_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_54_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_55_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i2", 0x4d5000);
}
// static void setup_memwrite_mmap_pdd6_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_55_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_55_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_56_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4d5000);
}
// static void setup_memwrite_mmap_pdd6_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_56_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_56_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_57_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_57_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_57_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_58_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_58_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_58_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_59_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_59_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d5000);
}
// static void setup_memwrite_mmap_pdd6_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_59_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_59_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_60_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_60_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_60_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_61_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_61_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_62_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_62_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_62_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_63_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_63_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_64_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i2", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_64_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_64_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_65_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_65_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_65_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_66_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_66_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_file(0x12345601000, 0, "__i1", 0x4d5000);
// }
// ^ See setup_memwrite_mmap_pdd6_56_proc0
// static void setup_memwrite_mmap_pdd6_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_66_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_66_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_67_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_4_common
static void setup_memwrite_mmap_pdd6_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i2", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_67_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pdd6_67_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_68_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_68_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_file(0x12345601000, 1, "__i1", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_58_proc0
// static void setup_memwrite_mmap_pdd6_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_68_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_68_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_69_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_69_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_69_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
//   init_map_file(0x12345601000, 1, "__i1", 0x4d5000);
// }
// ^ See setup_memwrite_mmap_pdd6_59_proc0
// static void setup_memwrite_mmap_pdd6_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_69_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_69_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_70_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_70_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
//   init_map_file(0x12345601000, 1, "__i1", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_60_proc0
// static void setup_memwrite_mmap_pdd6_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_70_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_70_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_71_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_71_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_71_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
//   init_map_file(0x12345601000, 0, "__i1", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_57_proc0
// static void setup_memwrite_mmap_pdd6_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_71_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_71_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_72_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_72_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_62_proc0
// static void setup_memwrite_mmap_pdd6_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_72_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_72_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_73_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_73_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_61_proc0
// static void setup_memwrite_mmap_pdd6_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_73_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_73_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_74_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_74_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memwrite_mmap_pdd6_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_74_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_74_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_75_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_52_1
// static void setup_memwrite_mmap_pdd6_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x985000);
  init_map_file(0x12345601000, 0, "__i0", 0x985000);
}
// static void setup_memwrite_mmap_pdd6_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_75_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_75_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_76_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x986000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_52_1
// static void setup_memwrite_mmap_pdd6_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x985000);
  init_map_file(0x12345601000, 1, "__i0", 0x985000);
}
// static void setup_memwrite_mmap_pdd6_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_76_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_76_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_77_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_77_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_77_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_78_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_78_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_78_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_79_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x16a6000);
  init_map_file(0x12345601000, 0, "__i0", 0x16a7000);
}
// static void setup_memwrite_mmap_pdd6_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_79_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_79_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_80_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d5000);
}
// static void setup_memwrite_mmap_pdd6_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_80_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_80_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_81_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d5000);
}
// static void setup_memwrite_mmap_pdd6_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_81_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_81_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_82_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_82_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_82_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_82_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_83_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_83_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_84_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pdd6_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_84_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_84_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_85_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pdd6_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_85_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_86_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pdd6_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_86_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_86_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_87_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pdd6_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_87_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_88_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_88_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_88_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_8_proc0
// static void setup_memwrite_mmap_pdd6_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_88_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_88_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_89_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_89_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_89_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_90_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_90_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_90_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_90_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_91_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_91_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_91_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_92_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_92_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_7_proc0
// static void setup_memwrite_mmap_pdd6_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_92_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_92_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_93_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_93_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_93_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_93_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_93_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_93_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_94_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_94_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_94_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_94_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_95_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_95_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_95_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_82_proc0
// static void setup_memwrite_mmap_pdd6_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_95_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_95_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_96_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_96_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pdd6_96_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_96_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_96_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_97_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_97_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_97_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_97_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_85_proc0
// static void setup_memwrite_mmap_pdd6_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_97_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_97_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_98_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_98_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_98_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_84_proc0
// static void setup_memwrite_mmap_pdd6_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_98_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_98_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_99_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_99_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pdd6_99_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_86_proc0
// static void setup_memwrite_mmap_pdd6_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_99_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pdd6_99_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_100_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_100_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_100_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_100_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_100_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_101_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_101_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pdd6_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_101_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_87_proc0
// static void setup_memwrite_mmap_pdd6_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_101_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_101_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_102_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_102_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_102_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_102_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_102_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_103_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_103_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_102_1
// static void setup_memwrite_mmap_pdd6_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_103_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_103_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_103_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_104_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_104_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_104_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_102_proc0
// static void setup_memwrite_mmap_pdd6_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_104_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_104_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_105_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_105_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_105_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_105_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i1", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_36_proc0
// static void setup_memwrite_mmap_pdd6_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_105_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_105_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_106_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_106_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_106_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_106_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_106_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_107_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_107_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_107_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_84_proc0
// static void setup_memwrite_mmap_pdd6_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_107_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_107_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_108_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_108_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_108_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_108_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_108_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_108_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_108_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_109_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_109_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_109_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_109_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_109_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_109_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_109_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_110_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_110_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_110_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_110_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_87_proc0
// static void setup_memwrite_mmap_pdd6_110_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_110_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_110_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_111_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_111_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_111_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_111_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_111_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_111_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_111_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_112_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_112_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_112_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_112_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_112_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_112_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_112_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_113_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_113_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_113_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_113_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_113_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_113_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_113_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_114_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_114_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_114_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_114_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_90_proc0
// static void setup_memwrite_mmap_pdd6_114_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_114_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_114_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_115_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_115_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_115_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_115_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_91_proc0
// static void setup_memwrite_mmap_pdd6_115_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_115_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_115_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_116_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_116_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_116_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_116_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_116_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_116_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_116_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_117_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_117_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_117_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_117_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_94_proc0
// static void setup_memwrite_mmap_pdd6_117_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_117_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_117_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_118_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_118_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_118_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_118_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_82_proc0
// static void setup_memwrite_mmap_pdd6_118_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_118_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_118_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_119_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_119_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_119_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_119_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_119_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_119_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_119_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_120_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_120_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pdd6_120_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_120_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_120_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_120_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_120_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_121_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_121_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_121_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_121_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_121_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_121_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_121_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_122_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_122_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_122_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_122_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_102_proc0
// static void setup_memwrite_mmap_pdd6_122_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_122_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_122_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_123_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_123_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_123_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_123_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i1", 0x16a6000);
}
// static void setup_memwrite_mmap_pdd6_123_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_123_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_123_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_124_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_124_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_124_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_124_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x16a6000);
}
// static void setup_memwrite_mmap_pdd6_124_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_124_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_124_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_125_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_125_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_125_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_125_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_106_proc0
// static void setup_memwrite_mmap_pdd6_125_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_125_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_125_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_126_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_126_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_126_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_126_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_126_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_126_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_126_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_127_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_127_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_127_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_127_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i1", 0x16a6000);
}
// static void setup_memwrite_mmap_pdd6_127_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_127_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_127_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_128_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_128_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_128_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_128_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x16a6000);
}
// static void setup_memwrite_mmap_pdd6_128_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_128_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_128_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_129_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_129_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_129_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_129_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_111_proc0
// static void setup_memwrite_mmap_pdd6_129_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_129_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_129_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_130_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_130_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_130_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_130_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 23748608, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_130_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_130_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_130_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_131_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_131_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_131_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_131_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pdd6_113_proc0
// static void setup_memwrite_mmap_pdd6_131_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_131_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_131_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_132_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_132_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_132_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_132_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_90_proc0
// static void setup_memwrite_mmap_pdd6_132_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_132_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_132_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_133_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_133_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_133_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_133_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_91_proc0
// static void setup_memwrite_mmap_pdd6_133_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_133_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_133_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_134_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_134_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_134_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_134_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_119_proc0
// static void setup_memwrite_mmap_pdd6_134_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_134_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_134_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_135_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_135_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_135_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_135_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pdd6_116_proc0
// static void setup_memwrite_mmap_pdd6_135_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_135_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_135_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_136_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_136_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_136_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_136_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_94_proc0
// static void setup_memwrite_mmap_pdd6_136_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_136_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_136_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_137_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_137_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_137_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_137_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_82_proc0
// static void setup_memwrite_mmap_pdd6_137_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_137_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_137_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_138_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_138_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pdd6_138_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_138_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_120_proc0
// static void setup_memwrite_mmap_pdd6_138_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_138_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_138_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_139_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_139_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_139_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_139_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_33_proc0
// static void setup_memwrite_mmap_pdd6_139_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_139_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_139_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_140_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_140_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_140_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_140_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_102_proc0
// static void setup_memwrite_mmap_pdd6_140_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_140_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_140_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_141_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_141_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_141_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pdd6_141_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_141_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_141_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_141_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_142_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_142_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_142_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_142_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i1", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_109_proc0
// static void setup_memwrite_mmap_pdd6_142_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_142_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_142_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_143_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_143_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pdd6_143_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_143_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_143_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_143_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_143_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_144_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_144_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_144_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_144_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pdd6_144_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_144_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_144_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_145_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_145_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
// static void setup_memwrite_mmap_pdd6_145_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_145_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 1, "__i0", 0x4d6000);
}
// static void setup_memwrite_mmap_pdd6_145_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_145_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_145_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_146_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_146_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_146_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_146_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e29000);
}
// static void setup_memwrite_mmap_pdd6_146_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_146_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_146_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_147_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_147_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_45_1
// static void setup_memwrite_mmap_pdd6_147_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_147_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
}
// static void setup_memwrite_mmap_pdd6_147_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_147_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_147_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_148_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_148_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_148_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_148_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_108_proc0
// static void setup_memwrite_mmap_pdd6_148_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_148_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_148_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_149_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_149_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_6_1
// static void setup_memwrite_mmap_pdd6_149_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_149_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_149_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_149_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_149_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_150_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_150_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pdd6_150_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_150_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_112_proc0
// static void setup_memwrite_mmap_pdd6_150_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_150_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_150_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_151_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_151_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_151_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_151_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_103_proc0
// static void setup_memwrite_mmap_pdd6_151_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_151_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_151_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_152_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_152_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_152_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pdd6_152_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i1", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_141_proc0
// static void setup_memwrite_mmap_pdd6_152_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_152_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pdd6_152_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_153_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_153_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_153_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_153_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_84_proc0
// static void setup_memwrite_mmap_pdd6_153_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_153_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_153_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_154_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_154_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_34_1
// static void setup_memwrite_mmap_pdd6_154_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_154_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pdd6_154_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_154_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_154_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_155_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_155_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_155_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_155_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 0, "__i0", 0x28000);
}
// static void setup_memwrite_mmap_pdd6_155_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_155_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_155_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_156_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_156_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x987000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_156_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_156_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9994240, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
  init_map_file(0x12345601000, 1, "__i0", 0x986000);
}
// static void setup_memwrite_mmap_pdd6_156_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_156_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_156_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_157_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_157_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_142_1
// static void setup_memwrite_mmap_pdd6_157_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_157_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pdd6_157_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_157_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_157_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_158_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_158_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x29000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_158_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_158_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdd6_158_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_158_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_158_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_159_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_159_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_159_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_159_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_87_proc0
// static void setup_memwrite_mmap_pdd6_159_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_159_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_159_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_160_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pdd6_160_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pdd6_160_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_160_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d4000);
}
// static void setup_memwrite_mmap_pdd6_160_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_160_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_160_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_161_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_161_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_161_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_161_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5070848, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pdd6_161_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_161_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_161_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_162_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_162_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_162_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_162_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e28000);
}
// static void setup_memwrite_mmap_pdd6_162_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_162_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_162_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_163_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_163_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_20_1
// static void setup_memwrite_mmap_pdd6_163_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_163_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5070848, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pdd6_163_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_163_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_163_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_164_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_164_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_164_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_164_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pdd6_90_proc0
// static void setup_memwrite_mmap_pdd6_164_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_164_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_164_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_165_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_165_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_165_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_165_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
// }
// ^ See setup_memwrite_mmap_pdd6_147_proc0
// static void setup_memwrite_mmap_pdd6_165_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_165_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_165_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_166_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_166_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_166_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_166_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pdd6_166_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_166_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_166_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_167_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_167_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_32_1
// static void setup_memwrite_mmap_pdd6_167_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_167_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x28000);
//   init_map_file(0x12345601000, 0, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdd6_158_proc0
// static void setup_memwrite_mmap_pdd6_167_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_167_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_167_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_168_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_168_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pdd6_168_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_168_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_100_proc0
// static void setup_memwrite_mmap_pdd6_168_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_168_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_168_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_169_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_169_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_32_1
// static void setup_memwrite_mmap_pdd6_169_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_169_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdd6_169_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_169_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_169_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_170_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_170_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pdd6_170_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_170_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31625216, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pdd6_149_proc0
// static void setup_memwrite_mmap_pdd6_170_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_170_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_170_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_171_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_171_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_0_1
// static void setup_memwrite_mmap_pdd6_171_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdd6_171_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_103_proc0
// static void setup_memwrite_mmap_pdd6_171_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_171_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_171_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdd6_172_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdd6_172_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_32_1
// static void setup_memwrite_mmap_pdd6_172_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pdd6_172_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x28000);
  init_map_file(0x12345601000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pdd6_172_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdd6_172_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdd6_172_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdc_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdc_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdb0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdb0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pdb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pdb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdb0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pdb0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pdb0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pdb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pdb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pdb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pdb0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pdb0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd98_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
// static void setup_memwrite_mmap_pd98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdd8_0_proc0
// static void setup_memwrite_mmap_pd98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pd98_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pd98_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd98_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd98_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
// static void setup_memwrite_mmap_pd98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pdd8_1_proc0
// static void setup_memwrite_mmap_pd98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pd98_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pd98_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd98_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd98_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd98_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
// static void setup_memwrite_mmap_pd98_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pdd8_2_proc0
// static void setup_memwrite_mmap_pd98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pd98_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pd98_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd98_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd98_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd98_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
// static void setup_memwrite_mmap_pd98_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdd8_3_proc0
// static void setup_memwrite_mmap_pd98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pd98_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pd98_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e28000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd94_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pd94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd94_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_0_1
// static void setup_memwrite_mmap_pd94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pd94_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pd94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd94_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d5000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd94_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_63_proc0
// static void setup_memwrite_mmap_pd94_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_3_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d5000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd94_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pdd6_63_proc0
// static void setup_memwrite_mmap_pd94_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd94_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_2_1
// static void setup_memwrite_mmap_pd94_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pd94_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x4d4000);
}
// static void setup_memwrite_mmap_pd94_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd94_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x27000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd94_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 147456, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memwrite_mmap_pd94_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_6_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x26000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd94_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memwrite_mmap_pd94_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd94_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_0_1
// static void setup_memwrite_mmap_pd94_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pd94_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pd94_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd94_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_8_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd94_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pd94_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_9_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e27000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd94_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1e28000);
// }
// ^ See setup_memwrite_mmap_pdd6_33_proc0
// static void setup_memwrite_mmap_pd94_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd94_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_8_1
// static void setup_memwrite_mmap_pd94_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pd94_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd94_7_proc0
// static void setup_memwrite_mmap_pd94_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd94_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_11_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x27000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd94_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memwrite_mmap_pd94_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_12_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x985000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd94_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
}
// static void setup_memwrite_mmap_pd94_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd94_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd94_13_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd94_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd94_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x985000);
// }
// ^ See setup_memwrite_mmap_pd94_12_proc0
// static void setup_memwrite_mmap_pd94_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd94_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd94_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd8_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pd6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
}
static void setup_memwrite_mmap_pd6_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pd6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x27000);
}
// static void setup_memwrite_mmap_pd6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x27000);
// }
// ^ See setup_memwrite_mmap_pd6_2_proc0
static void setup_memwrite_mmap_pd6_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x28000);
}
// static void setup_memwrite_mmap_pd6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pd6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
static void setup_memwrite_mmap_pd6_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memwrite_mmap_pd6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pd6_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pd6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pd6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
static void setup_memwrite_mmap_pd6_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_memwrite_mmap_pd6_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pd6_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd6_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd6_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pd6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x27000);
// }
// ^ See setup_memwrite_mmap_pd6_2_proc0
// static void setup_memwrite_mmap_pd6_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd6_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd58_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd58_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pd58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
static void setup_memwrite_mmap_pd58_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pd58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pd58_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pd58_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd58_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd58_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pd58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
static void setup_memwrite_mmap_pd58_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_memwrite_mmap_pd58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pd58_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pd58_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd58_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd58_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pd58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
// static void setup_memwrite_mmap_pd58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd58_1_proc0
// static void setup_memwrite_mmap_pd58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pd58_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pd58_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd58_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd58_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pd58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
// static void setup_memwrite_mmap_pd58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pd58_0_proc0
// static void setup_memwrite_mmap_pd58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pd58_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pd58_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd50_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd50_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pd50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
static void setup_memwrite_mmap_pd50_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd50_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd50_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd50_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pd50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pd50_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
static void setup_memwrite_mmap_pd50_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd50_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd50_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd50_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd50_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pd50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd50_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd6_1_proc0
static void setup_memwrite_mmap_pd50_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd50_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd30_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd30_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pd30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd6_1_proc0
// static void setup_memwrite_mmap_pd30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd30_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd30_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd30_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd30_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pd30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd6_1_proc0
// static void setup_memwrite_mmap_pd30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd30_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd30_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd18_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd18_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
// static void setup_memwrite_mmap_pd18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pd58_0_proc0
// static void setup_memwrite_mmap_pd18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pd18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pd18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd18_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd18_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
// static void setup_memwrite_mmap_pd18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd58_1_proc0
// static void setup_memwrite_mmap_pd18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pd18_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pd18_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd18_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd18_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_1_common
// static void setup_memwrite_mmap_pd18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd58_1_proc0
// static void setup_memwrite_mmap_pd18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pd18_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pd18_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd18_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd18_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pd18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pdd8_0_common
// static void setup_memwrite_mmap_pd18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pd58_0_proc0
// static void setup_memwrite_mmap_pd18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pd18_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pd18_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pd14_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd14_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd6_1_proc0
// static void setup_memwrite_mmap_pd14_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd50_1_proc1
// static void setup_memwrite_mmap_pd14_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pd14_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd14_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pd14_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_pd14_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pd14_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pd14_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
static void setup_memwrite_mmap_pd14_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd14_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd14_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd14_3_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d4000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd14_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd14_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
}
static void setup_memwrite_mmap_pd14_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd14_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pd14_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pd14_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_2_proc0
// static void setup_memwrite_mmap_pd14_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_pd14_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd14_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_8_1
// static void setup_memwrite_mmap_pd14_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd14_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd6_1_proc0
// static void setup_memwrite_mmap_pd14_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd50_1_proc1
// static void setup_memwrite_mmap_pd14_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd14_6_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2298000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd14_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd14_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2297000);
}
static void setup_memwrite_mmap_pd14_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd14_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_13_1
// static void setup_memwrite_mmap_pd14_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd14_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x985000);
}
static void setup_memwrite_mmap_pd14_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd14_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_0_1
// static void setup_memwrite_mmap_pd14_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_pd14_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd50_1_proc0
static void setup_memwrite_mmap_pd14_8_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pd14_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd14_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e28000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_0_1
// static void setup_memwrite_mmap_pd14_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd14_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pd6_1_proc0
// static void setup_memwrite_mmap_pd14_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd14_8_proc1
// static void setup_memwrite_mmap_pd14_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4d4000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd14_3_1
// static void setup_memwrite_mmap_pd14_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd14_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pd14_3_proc0
// static void setup_memwrite_mmap_pd14_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd50_0_proc1
// static void setup_memwrite_mmap_pd14_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_13_1
// static void setup_memwrite_mmap_pd14_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pd14_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x986000);
}
// static void setup_memwrite_mmap_pd14_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd50_1_proc1
// static void setup_memwrite_mmap_pd14_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pd14_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd14_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x985000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pd94_13_1
// static void setup_memwrite_mmap_pd14_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pd14_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x986000);
}
// static void setup_memwrite_mmap_pd14_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd50_1_proc1
// static void setup_memwrite_mmap_pd14_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd14_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
static int test_memwrite_mmap_pd14_13_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4d4000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pd14_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd14_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x4d4000);
// }
// ^ See setup_memwrite_mmap_pd14_3_proc0
// static void setup_memwrite_mmap_pd14_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pd50_0_proc1
// static void setup_memwrite_mmap_pd14_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd14_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pd0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 7);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pdf0_0_0
// static int test_memwrite_mmap_pd0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x26000);
// }
// ^ See setup_memwrite_mmap_pdf0_3_proc0
// static void setup_memwrite_mmap_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_10_1
// static void setup_memwrite_mmap_pcf8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfa8_0_common
static void setup_memwrite_mmap_pcf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pcf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
static void setup_memwrite_mmap_pcf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcf0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
static void setup_memwrite_mmap_pcf0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcf0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcf0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pcf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pcf0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pcf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pcf0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_1_common
static void setup_memwrite_mmap_pcf0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcf0_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pcf0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
static void setup_memwrite_mmap_pcf0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcf0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pcf0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pcf0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcf0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pcf0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
static void setup_memwrite_mmap_pcf0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcf0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pcf0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
static void setup_memwrite_mmap_pcf0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcf0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcf0_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcf0_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
static void setup_memwrite_mmap_pcf0_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcf0_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x4000);
}
// static void setup_memwrite_mmap_pcf0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcf0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcf0_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
static void setup_memwrite_mmap_pcd8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memwrite_mmap_pcd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pcd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pcd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
static void setup_memwrite_mmap_pcd8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_memwrite_mmap_pcd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pcd8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pcd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pcd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
static void setup_memwrite_mmap_pcd8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pcd8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pcd8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pcd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
static void setup_memwrite_mmap_pcd8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pcd8_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pcd8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_0_1
static void setup_memwrite_mmap_pcd4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 1, "__i2", 0x0);
}
// static void setup_memwrite_mmap_pcd4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
static void setup_memwrite_mmap_pcd4_3_final(void) {
  unlink("__i0");
  unlink("__i1");
  unlink("__i2");
}
// static void setup_memwrite_mmap_pcd4_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i2", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_5_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_6_common
static void setup_memwrite_mmap_pcd4_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
static void setup_memwrite_mmap_pcd4_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pcd4_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4d5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_19_1
static void setup_memwrite_mmap_pcd4_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pcd4_11_proc0
// static void setup_memwrite_mmap_pcd4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_14_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_15_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_15_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i1", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_15_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_16_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_16_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i1", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_16_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
static void setup_memwrite_mmap_pcd4_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_17_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_18_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_18_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_18_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_18_1
static void setup_memwrite_mmap_pcd4_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_19_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_20_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x989000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_20_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9998336, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_20_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_21_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e59000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_21_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31825920, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_21_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
static void setup_memwrite_mmap_pcd4_22_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval12, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i1", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_22_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
static void setup_memwrite_mmap_pcd4_23_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd4_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_23_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_23_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_24_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_24_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_23_common
// static void setup_memwrite_mmap_pcd4_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pcd4_23_proc0
// static void setup_memwrite_mmap_pcd4_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_25_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_25_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pcd4_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_26_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_24_1
static void setup_memwrite_mmap_pcd4_27_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval12, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval13, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval14, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_27_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_27_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_28_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_120_proc0
// static void setup_memwrite_mmap_pcd4_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_28_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_29_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_29_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_29_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_29_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_30_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_30_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_30_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval12, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pcd4_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x6000);
//   init_map_file(0x12345601000, 0, "__i1", 0x6000);
// }
// ^ See setup_memwrite_mmap_pcd4_27_proc0
// static void setup_memwrite_mmap_pcd4_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_30_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_30_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_31_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_31_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_31_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_31_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_32_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_30_1
static void setup_memwrite_mmap_pcd4_32_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_32_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_33_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_24_1
static void setup_memwrite_mmap_pcd4_33_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_33_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_33_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_34_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_34_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_34_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_34_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_34_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_35_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_29_1
static void setup_memwrite_mmap_pcd4_35_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_35_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_35_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_36_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_31_1
static void setup_memwrite_mmap_pcd4_36_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_36_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_36_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_37_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_31_1
// static void setup_memwrite_mmap_pcd4_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_37_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_37_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_38_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
static void setup_memwrite_mmap_pcd4_38_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_38_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_39_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
static void setup_memwrite_mmap_pcd4_39_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pcd4_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_10_proc0
// static void setup_memwrite_mmap_pcd4_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_39_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_39_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_40_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_39_common
// static void setup_memwrite_mmap_pcd4_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pdd6_11_proc0
// static void setup_memwrite_mmap_pcd4_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_40_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_41_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_24_1
static void setup_memwrite_mmap_pcd4_41_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_41_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_41_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_42_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_30_1
static void setup_memwrite_mmap_pcd4_42_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i1", 0x2d000);
}
// static void setup_memwrite_mmap_pcd4_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_42_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_42_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_43_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_30_1
static void setup_memwrite_mmap_pcd4_43_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i1", 0x2d000);
}
// static void setup_memwrite_mmap_pcd4_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_43_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_43_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_44_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_24_1
static void setup_memwrite_mmap_pcd4_44_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_44_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_44_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_45_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_142_1
static void setup_memwrite_mmap_pcd4_45_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x29000);
}
// static void setup_memwrite_mmap_pcd4_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_45_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_45_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_46_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
// static void setup_memwrite_mmap_pcd4_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_4_common
static void setup_memwrite_mmap_pcd4_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e2e000);
}
// static void setup_memwrite_mmap_pcd4_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_46_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_46_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_47_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_34_1
// static void setup_memwrite_mmap_pcd4_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_34_common
static void setup_memwrite_mmap_pcd4_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_47_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_47_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_48_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x27000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_32_1
// static void setup_memwrite_mmap_pcd4_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x26000);
}
// static void setup_memwrite_mmap_pcd4_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_48_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_48_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_49_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_49_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_91_proc0
// static void setup_memwrite_mmap_pcd4_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_49_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_50_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_50_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_82_proc0
// static void setup_memwrite_mmap_pcd4_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_50_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_50_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_51_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_51_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_51_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_51_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_51_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_51_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_52_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_52_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_51_1
static void setup_memwrite_mmap_pcd4_52_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_52_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_52_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_53_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pcd4_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_53_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_54_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_54_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_91_proc0
// static void setup_memwrite_mmap_pcd4_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_54_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_54_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_55_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_55_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_102_1
static void setup_memwrite_mmap_pcd4_55_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pcd4_55_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_102_proc0
// static void setup_memwrite_mmap_pcd4_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_55_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_55_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_56_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_142_1
static void setup_memwrite_mmap_pcd4_56_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i2", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_56_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_56_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_57_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_51_1
static void setup_memwrite_mmap_pcd4_57_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 1, "__i2", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_57_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_57_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_58_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_51_1
static void setup_memwrite_mmap_pcd4_58_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 0, "__i2", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_58_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_58_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_59_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_59_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd4_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_59_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_59_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_60_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_60_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2d000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_58_common
static void setup_memwrite_mmap_pcd4_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31641600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 0, "__i2", 0x784000);
}
// static void setup_memwrite_mmap_pcd4_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_60_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_60_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_61_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_61_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2b000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_34_common
static void setup_memwrite_mmap_pcd4_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_61_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_61_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_62_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_59_1
// static void setup_memwrite_mmap_pcd4_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_10_common
static void setup_memwrite_mmap_pcd4_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_62_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_62_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_63_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_59_1
// static void setup_memwrite_mmap_pcd4_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_10_common
static void setup_memwrite_mmap_pcd4_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_63_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_64_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
// static void setup_memwrite_mmap_pcd4_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_17_common
static void setup_memwrite_mmap_pcd4_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_64_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_64_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_65_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
// static void setup_memwrite_mmap_pcd4_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_17_common
static void setup_memwrite_mmap_pcd4_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_65_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_65_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_66_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2a000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_18_1
// static void setup_memwrite_mmap_pcd4_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_18_common
static void setup_memwrite_mmap_pcd4_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_66_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_66_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_67_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_67_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2b000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_20_common
static void setup_memwrite_mmap_pcd4_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_67_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_67_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_68_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2b000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_67_1
// static void setup_memwrite_mmap_pcd4_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_20_common
static void setup_memwrite_mmap_pcd4_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_68_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_68_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_69_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_69_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_102_1
static void setup_memwrite_mmap_pcd4_69_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_69_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_69_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_69_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_70_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2b000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_61_1
// static void setup_memwrite_mmap_pcd4_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_34_common
static void setup_memwrite_mmap_pcd4_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_70_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_70_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_71_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_71_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2b000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_67_1
// static void setup_memwrite_mmap_pcd4_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_34_common
static void setup_memwrite_mmap_pcd4_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31633408, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_71_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_71_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_72_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2b000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_67_1
// static void setup_memwrite_mmap_pcd4_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_38_common
// static void setup_memwrite_mmap_pcd4_72_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31633408, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x3000);
//   init_map_file(0x12345601000, 1, "__i0", 0x3000);
// }
// ^ See setup_memwrite_mmap_pcd4_70_proc0
// static void setup_memwrite_mmap_pcd4_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_72_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_72_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_73_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2d000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_60_1
static void setup_memwrite_mmap_pcd4_73_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31641600, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_73_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_73_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_74_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_74_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
// static void setup_memwrite_mmap_pcd4_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pcd4_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_74_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_74_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_75_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_75_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2d000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_73_common
// static void setup_memwrite_mmap_pcd4_75_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31641600, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
//   init_map_file(0x12345601000, 1, "__i0", 0x5000);
// }
// ^ See setup_memwrite_mmap_pcd4_73_proc0
// static void setup_memwrite_mmap_pcd4_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_75_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_75_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_76_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_76_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_76_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_76_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_76_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_77_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_77_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_77_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i2", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_77_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_77_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_78_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1e28000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_47_1
static void setup_memwrite_mmap_pcd4_78_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
  init_map_file(0x12345601000, 0, "__i2", 0x0);
}
// static void setup_memwrite_mmap_pcd4_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_78_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pdd6_4_final
// static void setup_memwrite_mmap_pcd4_78_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_79_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
static void setup_memwrite_mmap_pcd4_79_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd4_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_79_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_79_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_80_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_34_1
static void setup_memwrite_mmap_pcd4_80_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
}
// static void setup_memwrite_mmap_pcd4_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_80_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_80_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_81_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
// static void setup_memwrite_mmap_pcd4_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_4_common
static void setup_memwrite_mmap_pcd4_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e2e000);
}
// static void setup_memwrite_mmap_pcd4_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_81_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_81_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_82_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_29_1
static void setup_memwrite_mmap_pcd4_82_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_82_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_82_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_83_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_24_1
static void setup_memwrite_mmap_pcd4_83_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_83_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_84_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
// static void setup_memwrite_mmap_pcd4_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_24_common
static void setup_memwrite_mmap_pcd4_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e2e000);
}
// static void setup_memwrite_mmap_pcd4_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_84_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_84_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_85_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_24_1
static void setup_memwrite_mmap_pcd4_85_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_85_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_86_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2e000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_16_1
static void setup_memwrite_mmap_pcd4_86_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e2e000);
}
// static void setup_memwrite_mmap_pcd4_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_86_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_87_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_87_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_87_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_88_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_88_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_88_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_88_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_89_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
static void setup_memwrite_mmap_pcd4_89_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_89_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_89_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_90_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_90_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_90_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_90_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_91_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_91_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1fa4000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x1fa4000);
}
// static void setup_memwrite_mmap_pcd4_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_91_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_92_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pcd4_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_31_common
static void setup_memwrite_mmap_pcd4_92_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_92_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_92_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_93_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_93_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
static void setup_memwrite_mmap_pcd4_93_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_93_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_93_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_93_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_94_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_94_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_142_1
static void setup_memwrite_mmap_pcd4_94_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 172032, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_94_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_94_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_95_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_95_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pcd4_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_20_common
static void setup_memwrite_mmap_pcd4_95_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_95_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_95_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_96_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_96_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_44_common
static void setup_memwrite_mmap_pcd4_96_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_96_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_96_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_97_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_97_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_142_1
static void setup_memwrite_mmap_pcd4_97_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_97_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34279424, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pcd4_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_97_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_97_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_98_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_98_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_29_1
// static void setup_memwrite_mmap_pcd4_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_73_common
static void setup_memwrite_mmap_pcd4_98_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34287616, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x4000);
}
// static void setup_memwrite_mmap_pcd4_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_98_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_98_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_99_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_99_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_96_1
// static void setup_memwrite_mmap_pcd4_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_73_common
static void setup_memwrite_mmap_pcd4_99_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x20b3000);
}
// static void setup_memwrite_mmap_pcd4_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_99_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_99_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_100_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_100_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x8ec000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pcd4_100_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9351168, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x8ec000);
}
// static void setup_memwrite_mmap_pcd4_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_100_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_100_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_101_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_101_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x4da000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_101_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_101_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5087232, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x4da000);
}
// static void setup_memwrite_mmap_pcd4_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_101_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_101_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_102_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_102_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1e2c000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_102_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
}
// static void setup_memwrite_mmap_pcd4_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_102_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_102_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_103_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_103_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pcd4_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_103_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31625216, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1e29000);
// }
// ^ See setup_memwrite_mmap_pcd4_102_proc0
// static void setup_memwrite_mmap_pcd4_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_103_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_103_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_104_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_104_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0xa000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
static void setup_memwrite_mmap_pcd4_104_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 45056, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_104_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_104_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_105_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_105_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1c8000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_105_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_105_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1867776, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x1c8000);
}
// static void setup_memwrite_mmap_pcd4_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_105_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_105_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_106_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_106_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
// static void setup_memwrite_mmap_pcd4_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_35_common
static void setup_memwrite_mmap_pcd4_106_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
  init_map_file(0x12345601000, 0, "__i1", 0x4000);
}
// static void setup_memwrite_mmap_pcd4_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_106_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_106_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_107_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_107_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_96_1
// static void setup_memwrite_mmap_pcd4_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_101_common
static void setup_memwrite_mmap_pcd4_107_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34287616, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_107_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_107_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_108_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_108_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_108_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_108_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34271232, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_108_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_108_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_108_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_109_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_109_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_96_1
static void setup_memwrite_mmap_pcd4_109_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_109_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34287616, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_109_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_109_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_109_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_110_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_110_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_96_1
static void setup_memwrite_mmap_pcd4_110_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_110_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34287616, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i1", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_110_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_110_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_110_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_111_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_111_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pcd4_111_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_89_common
static void setup_memwrite_mmap_pcd4_111_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_111_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_111_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_111_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_112_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_112_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_112_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_94_common
static void setup_memwrite_mmap_pcd4_112_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_112_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_112_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_112_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_113_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_113_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_113_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_31_common
// static void setup_memwrite_mmap_pcd4_113_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pcd4_92_proc0
// static void setup_memwrite_mmap_pcd4_113_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_113_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_113_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_114_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_114_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_114_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_31_common
static void setup_memwrite_mmap_pcd4_114_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_114_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_114_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_114_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_115_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_115_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_96_1
// static void setup_memwrite_mmap_pcd4_115_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_83_common
static void setup_memwrite_mmap_pcd4_115_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pcd4_115_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_115_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_115_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_116_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_116_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_116_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_34_common
static void setup_memwrite_mmap_pcd4_116_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_116_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_116_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_116_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_117_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_117_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_117_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_45_common
static void setup_memwrite_mmap_pcd4_117_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_117_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_117_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_117_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_118_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_118_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4d6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_160_1
// static void setup_memwrite_mmap_pcd4_118_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_118_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5070848, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x4d6000);
}
// static void setup_memwrite_mmap_pcd4_118_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_118_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_118_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_119_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_119_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
// static void setup_memwrite_mmap_pcd4_119_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_119_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_119_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_119_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_119_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_120_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_120_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
static void setup_memwrite_mmap_pcd4_120_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_120_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_120_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_120_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_120_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_121_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_121_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_4_1
static void setup_memwrite_mmap_pcd4_121_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_121_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_121_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_121_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_121_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_122_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_122_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_29_1
static void setup_memwrite_mmap_pcd4_122_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_122_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2523136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_122_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_122_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_122_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_123_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_123_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
static void setup_memwrite_mmap_pcd4_123_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_123_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_123_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_123_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_123_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_124_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_124_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_124_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_124_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_124_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_124_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_124_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_125_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_125_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_125_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_125_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_125_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_125_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_125_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_126_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_126_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_126_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_121_common
static void setup_memwrite_mmap_pcd4_126_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_126_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_126_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_126_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_127_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_127_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
static void setup_memwrite_mmap_pcd4_127_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_127_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_127_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_127_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_127_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_128_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_128_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
static void setup_memwrite_mmap_pcd4_128_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_128_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_128_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_128_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_128_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_129_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_129_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
static void setup_memwrite_mmap_pcd4_129_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_129_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_129_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_129_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_129_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_130_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_130_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_82_1
// static void setup_memwrite_mmap_pcd4_130_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
// static void setup_memwrite_mmap_pcd4_130_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pcd4_31_proc0
// static void setup_memwrite_mmap_pcd4_130_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_130_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_130_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_131_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_131_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
// static void setup_memwrite_mmap_pcd4_131_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_131_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_131_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_131_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_131_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_132_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_132_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_132_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
// static void setup_memwrite_mmap_pcd4_132_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_131_proc0
// static void setup_memwrite_mmap_pcd4_132_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_132_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_132_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_133_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_133_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_133_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
static void setup_memwrite_mmap_pcd4_133_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_133_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_133_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_133_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_134_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_134_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_134_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_127_common
static void setup_memwrite_mmap_pcd4_134_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_134_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_134_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_134_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_135_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_135_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
static void setup_memwrite_mmap_pcd4_135_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pcd4_135_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_file(0x12345601000, 0, "__i1", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_134_proc0
// static void setup_memwrite_mmap_pcd4_135_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_135_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_135_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_136_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_136_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
// static void setup_memwrite_mmap_pcd4_136_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
static void setup_memwrite_mmap_pcd4_136_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_136_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_136_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_136_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_137_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_137_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_137_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
static void setup_memwrite_mmap_pcd4_137_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_137_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_137_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_137_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_138_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_138_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_138_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_128_common
static void setup_memwrite_mmap_pcd4_138_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_138_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_138_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_138_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_139_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_139_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_139_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_139_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_139_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_139_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_139_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_140_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_140_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
static void setup_memwrite_mmap_pcd4_140_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pcd4_140_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pcd4_139_proc0
// static void setup_memwrite_mmap_pcd4_140_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_140_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_140_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_141_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_141_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_141_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_83_common
static void setup_memwrite_mmap_pcd4_141_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_141_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_141_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_141_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_142_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_142_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_142_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_121_common
// static void setup_memwrite_mmap_pcd4_142_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_file(0x12345601000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_137_proc0
// static void setup_memwrite_mmap_pcd4_142_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_142_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_142_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_143_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_143_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x16e5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_143_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_24_common
static void setup_memwrite_mmap_pcd4_143_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24002560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_143_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_143_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_143_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_144_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_144_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_144_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_86_common
static void setup_memwrite_mmap_pcd4_144_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_144_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_144_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_144_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_145_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_145_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
static void setup_memwrite_mmap_pcd4_145_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_145_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_145_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_145_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_145_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_146_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_146_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
static void setup_memwrite_mmap_pcd4_146_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pcd4_146_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_file(0x12345601000, 1, "__i1", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_145_proc0
// static void setup_memwrite_mmap_pcd4_146_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_146_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_146_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_147_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_147_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_147_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_128_common
static void setup_memwrite_mmap_pcd4_147_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_147_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_147_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_147_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_148_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_148_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
static void setup_memwrite_mmap_pcd4_148_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_148_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pcd4_148_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_148_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_148_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_149_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_149_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_31_1
// static void setup_memwrite_mmap_pcd4_149_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_73_common
static void setup_memwrite_mmap_pcd4_149_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x4000);
}
// static void setup_memwrite_mmap_pcd4_149_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_149_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_149_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_150_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_150_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x20b1000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_150_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_94_common
static void setup_memwrite_mmap_pcd4_150_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34283520, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x20b1000);
}
// static void setup_memwrite_mmap_pcd4_150_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_150_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_150_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_151_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_151_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x3000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_31_1
// static void setup_memwrite_mmap_pcd4_151_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_94_common
static void setup_memwrite_mmap_pcd4_151_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9998336, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
  init_map_file(0x12345601000, 1, "__i0", 0x98a000);
}
// static void setup_memwrite_mmap_pcd4_151_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_151_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_151_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_152_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_152_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_152_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pcd4_152_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x2298000);
}
// static void setup_memwrite_mmap_pcd4_152_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_152_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_152_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_153_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_153_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_153_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_10_common
static void setup_memwrite_mmap_pcd4_153_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9994240, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_153_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_153_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_153_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_154_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_154_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x70b000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_154_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_82_common
static void setup_memwrite_mmap_pcd4_154_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 1, "__i0", 0x70a000);
}
// static void setup_memwrite_mmap_pcd4_154_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_154_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_154_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_155_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_155_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x7000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_30_1
// static void setup_memwrite_mmap_pcd4_155_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_155_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 32768, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_155_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_155_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_155_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_156_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_156_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_51_1
// static void setup_memwrite_mmap_pcd4_156_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_85_common
static void setup_memwrite_mmap_pcd4_156_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 184320, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_156_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_156_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_156_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_157_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_157_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
static void setup_memwrite_mmap_pcd4_157_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_157_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
  init_map_file(0x12345601000, 0, "__i1", 0x4000);
}
// static void setup_memwrite_mmap_pcd4_157_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_157_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_157_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_158_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_158_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_157_1
// static void setup_memwrite_mmap_pcd4_158_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_83_common
static void setup_memwrite_mmap_pcd4_158_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 0, "__i0", 0x4000);
}
// static void setup_memwrite_mmap_pcd4_158_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_158_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_158_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_159_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_159_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_159_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pcd4_159_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x263000);
}
// static void setup_memwrite_mmap_pcd4_159_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_159_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_159_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_160_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_160_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_160_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pcd4_160_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_91_proc0
// static void setup_memwrite_mmap_pcd4_160_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_160_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_160_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_161_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_161_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pcd4_161_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pcd4_161_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pcd4_161_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_161_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_161_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_162_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_162_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_162_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_162_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i1", 0x264000);
}
// static void setup_memwrite_mmap_pcd4_162_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_162_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_162_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_163_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_163_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_122_1
// static void setup_memwrite_mmap_pcd4_163_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_36_common
static void setup_memwrite_mmap_pcd4_163_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pcd4_163_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_163_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pcd4_163_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_164_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pcd4_164_1(void) {
  int* va = (int*) 0x12345601000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x8f1000UL);
  expect_result("r", r, 1250999406592);
  return xerrno(r);
}
// static void setup_memwrite_mmap_pcd4_164_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_32_common
static void setup_memwrite_mmap_pcd4_164_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9375744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x8f2000);
}
// static void setup_memwrite_mmap_pcd4_164_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_164_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_164_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_165_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_165_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x4000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_15_1
static void setup_memwrite_mmap_pcd4_165_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pcd4_165_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
  init_map_file(0x12345601000, 1, "__i1", 0x2b000);
}
// static void setup_memwrite_mmap_pcd4_165_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_165_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pcd4_165_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_166_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_166_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x5000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_157_1
// static void setup_memwrite_mmap_pcd4_166_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_32_common
static void setup_memwrite_mmap_pcd4_166_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_166_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_166_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_166_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_167_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_167_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_51_1
// static void setup_memwrite_mmap_pcd4_167_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_32_common
static void setup_memwrite_mmap_pcd4_167_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_file(0x12345601000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pcd4_167_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_167_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_167_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_168_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_168_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_88_1
// static void setup_memwrite_mmap_pcd4_168_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_31_common
// static void setup_memwrite_mmap_pcd4_168_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
//   init_map_file(0x12345601000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_129_proc0
// static void setup_memwrite_mmap_pcd4_168_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_168_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_168_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_169_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_169_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x6000UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pcd4_51_1
// static void setup_memwrite_mmap_pcd4_169_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_83_common
static void setup_memwrite_mmap_pcd4_169_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pcd4_169_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_169_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_169_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_170_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_170_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x1000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_140_1
// static void setup_memwrite_mmap_pcd4_170_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pcd4_170_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pcd4_170_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_170_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_170_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_171_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_171_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_102_1
// static void setup_memwrite_mmap_pcd4_171_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_31_common
static void setup_memwrite_mmap_pcd4_171_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pcd4_171_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_171_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_171_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcd4_172_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcd4_172_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x2000UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_102_1
// static void setup_memwrite_mmap_pcd4_172_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_10_common
// static void setup_memwrite_mmap_pcd4_172_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_133_proc0
// static void setup_memwrite_mmap_pcd4_172_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcd4_172_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcd4_172_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcc_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcc_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pcc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcc_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcb0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcb0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pcb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pcb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pcb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcb0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pcb0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pcb0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pcb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pcb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pcb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pcb0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pcb0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc98_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
// static void setup_memwrite_mmap_pc98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pcd8_0_proc0
// static void setup_memwrite_mmap_pc98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pc98_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pc98_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc98_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc98_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
// static void setup_memwrite_mmap_pc98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pcd8_1_proc0
// static void setup_memwrite_mmap_pc98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pc98_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pc98_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc98_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc98_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc98_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
// static void setup_memwrite_mmap_pc98_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pcd8_2_proc0
// static void setup_memwrite_mmap_pc98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pc98_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pc98_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc98_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc98_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc98_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
// static void setup_memwrite_mmap_pc98_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pcd8_3_proc0
// static void setup_memwrite_mmap_pc98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pc98_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pc98_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x3000UL);
  
  return xerrno(r);
}
static void setup_memwrite_mmap_pc94_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pc94_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pc94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pc94_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x4000UL);
  
  return xerrno(r);
}
static void setup_memwrite_mmap_pc94_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pc94_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_memwrite_mmap_pc94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pc94_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x4000UL);
  
  return xerrno(r);
}
static void setup_memwrite_mmap_pc94_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pc94_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_memwrite_mmap_pc94_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pc94_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc94_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
static void setup_memwrite_mmap_pc94_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pc94_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x5000);
}
// static void setup_memwrite_mmap_pc94_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pc94_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_4_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc94_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_105_common
static void setup_memwrite_mmap_pc94_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pc94_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x6000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc94_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_73_common
static void setup_memwrite_mmap_pc94_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pc94_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_6_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e29000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc94_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
static void setup_memwrite_mmap_pc94_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pc94_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc94_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pc94_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
static void setup_memwrite_mmap_pc94_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pc94_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc94_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x6000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc94_5_1
// static void setup_memwrite_mmap_pc94_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_109_common
static void setup_memwrite_mmap_pc94_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x5000);
}
// static void setup_memwrite_mmap_pc94_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_9_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x3000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc94_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_31_common
// static void setup_memwrite_mmap_pc94_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_pcd4_171_proc0
// static void setup_memwrite_mmap_pc94_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc94_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x5000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc94_4_1
// static void setup_memwrite_mmap_pc94_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_101_common
// static void setup_memwrite_mmap_pc94_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x5000);
// }
// ^ See setup_memwrite_mmap_pc94_8_proc0
// static void setup_memwrite_mmap_pc94_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_11_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x6000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc94_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_32_common
static void setup_memwrite_mmap_pc94_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31645696, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x6000);
}
// static void setup_memwrite_mmap_pc94_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc94_12_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc94_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_11_common
// static void setup_memwrite_mmap_pc94_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pdd6_102_proc0
// static void setup_memwrite_mmap_pc94_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc94_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc94_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pc94_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcd4_12_common
// static void setup_memwrite_mmap_pc94_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pcd4_26_proc0
// static void setup_memwrite_mmap_pc94_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc94_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc94_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc8_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc8_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pc8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pc6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pc6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_1_common
// static void setup_memwrite_mmap_pc6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
static void setup_memwrite_mmap_pc6_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pc6_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pc6_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_pc6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_1_common
// static void setup_memwrite_mmap_pc6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
static void setup_memwrite_mmap_pc6_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pc6_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pc6_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_8_common
static void setup_memwrite_mmap_pc6_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x3000);
}
// static void setup_memwrite_mmap_pc6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pc6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc6_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc6_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pc6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pc6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_1_proc0
// static void setup_memwrite_mmap_pc6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc6_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc6_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc58_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc58_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pc58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
static void setup_memwrite_mmap_pc58_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pc58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pc58_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pc58_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc58_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc58_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pc58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
static void setup_memwrite_mmap_pc58_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pc58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pc58_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pc58_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc58_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc58_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pc58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
// static void setup_memwrite_mmap_pc58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pc58_0_proc0
// static void setup_memwrite_mmap_pc58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pc58_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pc58_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc58_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc58_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pc58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
// static void setup_memwrite_mmap_pc58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc58_1_proc0
// static void setup_memwrite_mmap_pc58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pc58_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pc58_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc50_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc50_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pc50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
static void setup_memwrite_mmap_pc50_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pc50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc50_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc50_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc50_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
static void setup_memwrite_mmap_pc50_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_memwrite_mmap_pc50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_5_proc1
// static void setup_memwrite_mmap_pc50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc50_0_proc1
// static void setup_memwrite_mmap_pc50_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pc50_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc50_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc50_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pc50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc50_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc50_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pc4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc30_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc30_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pc30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc30_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc30_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc30_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc30_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pc30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc30_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc30_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc18_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc18_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
// static void setup_memwrite_mmap_pc18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pc58_0_proc0
// static void setup_memwrite_mmap_pc18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pc18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pc18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc18_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc18_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
// static void setup_memwrite_mmap_pc18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc58_1_proc0
// static void setup_memwrite_mmap_pc18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_pc18_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pc18_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc18_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc18_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_0_common
// static void setup_memwrite_mmap_pc18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pc58_0_proc0
// static void setup_memwrite_mmap_pc18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pc18_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pc18_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc18_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc18_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pc18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pcd8_1_common
// static void setup_memwrite_mmap_pc18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc58_1_proc0
// static void setup_memwrite_mmap_pc18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_pc18_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pdd8_1_final
// static void setup_memwrite_mmap_pc18_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pc14_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc14_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc14_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc50_0_proc1
// static void setup_memwrite_mmap_pc14_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc14_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc14_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc50_1_common
// static void setup_memwrite_mmap_pc14_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_5_proc1
// static void setup_memwrite_mmap_pc14_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc50_0_proc1
// static void setup_memwrite_mmap_pc14_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pc14_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_pc14_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc50_1_common
// static void setup_memwrite_mmap_pc14_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_5_proc1
// static void setup_memwrite_mmap_pc14_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc50_0_proc1
// static void setup_memwrite_mmap_pc14_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pc14_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pc14_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pc14_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_1_proc0
// static void setup_memwrite_mmap_pc14_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_pc14_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc14_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc14_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
static int test_memwrite_mmap_pc14_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static void setup_memwrite_mmap_pc14_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pc14_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_1_proc0
// static void setup_memwrite_mmap_pc14_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_pc14_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pc14_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_1_proc0
// static void setup_memwrite_mmap_pc14_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pc14_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
// static void setup_memwrite_mmap_pc14_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_2_proc0
// static void setup_memwrite_mmap_pc14_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pc14_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pc14_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pc14_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_1_proc0
// static void setup_memwrite_mmap_pc14_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pc14_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
// static void setup_memwrite_mmap_pc14_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_2_proc0
// static void setup_memwrite_mmap_pc14_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pc14_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pc14_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc14_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc14_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc94_12_1
static void setup_memwrite_mmap_pc14_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pc14_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x4000);
}
static void setup_memwrite_mmap_pc14_11_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_memwrite_mmap_pc14_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_pc14_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc14_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc14_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc14_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc14_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pc14_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc14_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc14_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_pc14_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc14_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pc0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 0);
//   expect_result("r", r, 0);
//   return r;
// }
// ^ See test_memwrite_mmap_pfe_0_0
// static int test_memwrite_mmap_pc0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pcf0_0_common
// static void setup_memwrite_mmap_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
static int test_memwrite_mmap_pb8_0_0(void) {
  char* p = (char*) 0x12345600000UL;
  int signal, r = 0;
  pf_active = 1;
  if ((signal = sigsetjmp(pf_jmpbuf, 1)))
    r = -1;
  else
    *p = 0;
  pf_active = 0;
  expect_result("signal", signal, 11);
  expect_result("r", r, -1);
  return r;
}
// static int test_memwrite_mmap_pb8_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pb8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb8_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pb8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pb8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pb8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pb8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_5_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pb8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pb8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_6_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pb8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pb8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb8_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb8_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb8_0_proc0
// static void setup_memwrite_mmap_pb8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pb8_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb8_14_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb8_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_15_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb8_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb8_11_proc0
// static void setup_memwrite_mmap_pb8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_16_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pb8_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb8_17_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb8_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_18_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb8_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb8_7_proc0
// static void setup_memwrite_mmap_pb8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_19_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb8_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pb8_9_proc0
// static void setup_memwrite_mmap_pb8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_20_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pb8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb8_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pb8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_21_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
static void setup_memwrite_mmap_pb8_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_22_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_22_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
static void setup_memwrite_mmap_pb8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_23_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_23_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_pb8_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb8_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_24_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pb8_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb8_22_proc0
// static void setup_memwrite_mmap_pb8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_25_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_25_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb8_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pb8_10_proc0
// static void setup_memwrite_mmap_pb8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_26_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pb8_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pb8_23_proc0
// static void setup_memwrite_mmap_pb8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_27_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_27_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_28_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_3_1
// static void setup_memwrite_mmap_pb8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb8_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb8_28_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb8_29_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb8_29_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_pb8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pb8_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pb8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb8_29_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb8_29_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb6_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pb6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_pb6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pb6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pb6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
static void setup_memwrite_mmap_pb6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_memwrite_mmap_pb6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
static void setup_memwrite_mmap_pb6_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_memwrite_mmap_pb6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pb6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_pb6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memwrite_mmap_pb6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pb6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pb6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pb6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_pb6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pb6_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pb6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb6_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb6_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pb6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
static void setup_memwrite_mmap_pb6_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pb6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_pb6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb6_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb6_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_pb6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_pb6_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memwrite_mmap_pb6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pb6_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pb6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pb4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pb4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pb4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_memwrite_mmap_pb4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 0, "__i2", 0x0);
}
// static void setup_memwrite_mmap_pb4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
static void setup_memwrite_mmap_pb4_3_final(void) {
  unlink("__i0");
  unlink("__i2");
  unlink("__i1");
}
// static void setup_memwrite_mmap_pb4_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
static void setup_memwrite_mmap_pb4_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_memwrite_mmap_pb4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_5_proc0
// static void setup_memwrite_mmap_pb4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb4_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memwrite_mmap_pb4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb4_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_7_proc0
// static void setup_memwrite_mmap_pb4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pb4_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb4_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_14_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_15_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb4_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_16_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_17_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_18_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_18_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_19_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_pb4_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_4_proc0
// static void setup_memwrite_mmap_pb4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_19_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_20_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_11_proc0
// static void setup_memwrite_mmap_pb4_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_20_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_21_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_pb4_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_12_proc0
// static void setup_memwrite_mmap_pb4_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_21_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_22_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb4_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_9_proc0
// static void setup_memwrite_mmap_pb4_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_22_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_23_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_pb4_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb4_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_23_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_24_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb4_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_24_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_25_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb4_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pb4_13_proc0
// static void setup_memwrite_mmap_pb4_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_25_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_26_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb4_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_26_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_27_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_15_proc0
// static void setup_memwrite_mmap_pb4_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_27_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_27_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_28_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb4_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pb4_16_proc0
// static void setup_memwrite_mmap_pb4_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_28_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_29_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_17_proc0
// static void setup_memwrite_mmap_pb4_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_29_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_29_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_30_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_1_proc0
// static void setup_memwrite_mmap_pb4_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_30_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_30_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_31_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pb4_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_31_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_31_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_32_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_32_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_32_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_33_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pb4_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_pb4_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_33_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_33_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_34_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_34_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_pb4_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_34_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_35_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
static void setup_memwrite_mmap_pb4_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_pb4_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_35_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_35_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_36_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_2_proc0
// static void setup_memwrite_mmap_pb4_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_36_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_36_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_37_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_1_proc0
// static void setup_memwrite_mmap_pb4_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_37_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_37_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_38_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pb4_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pb4_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_38_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_38_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_39_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_32_proc0
// static void setup_memwrite_mmap_pb4_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_39_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_39_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_40_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pb4_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
}
// static void setup_memwrite_mmap_pb4_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_40_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_40_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_41_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_34_proc0
// static void setup_memwrite_mmap_pb4_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_41_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_41_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_42_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pb4_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pb4_35_proc0
// static void setup_memwrite_mmap_pb4_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_42_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_42_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_43_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_pb4_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_43_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_43_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_44_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_44_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_0_proc0
// static void setup_memwrite_mmap_pb4_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_44_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_45_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_3_common
static void setup_memwrite_mmap_pb4_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i2", 0x0);
}
// static void setup_memwrite_mmap_pb4_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_45_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pb4_3_final
// static void setup_memwrite_mmap_pb4_45_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_46_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pb4_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb4_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_46_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_46_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_47_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_pb4_47_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_18_proc0
// static void setup_memwrite_mmap_pb4_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_47_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pb4_47_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_48_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_48_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_23_proc0
// static void setup_memwrite_mmap_pb4_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_48_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_48_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_49_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_49_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_0_proc0
// static void setup_memwrite_mmap_pb4_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_49_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_50_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_3_common
// static void setup_memwrite_mmap_pb4_50_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_file(0x12345601000, 0, "__i2", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_3_proc0
// static void setup_memwrite_mmap_pb4_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_50_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pb4_3_final
// static void setup_memwrite_mmap_pb4_50_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_51_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_3_common
// static void setup_memwrite_mmap_pb4_51_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_file(0x12345601000, 1, "__i2", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_45_proc0
// static void setup_memwrite_mmap_pb4_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_51_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pb4_3_final
// static void setup_memwrite_mmap_pb4_51_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_52_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_52_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pb4_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb4_52_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_7_proc0
// static void setup_memwrite_mmap_pb4_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_52_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_52_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_53_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb4_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_53_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_54_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc14_11_common
static void setup_memwrite_mmap_pb4_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x27000);
}
// static void setup_memwrite_mmap_pb4_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_54_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_54_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_55_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pb4_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pb4_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_55_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_55_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_56_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pb4_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pb4_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_56_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_56_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_57_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
// static void setup_memwrite_mmap_pb4_57_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
//   init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pb4_55_proc0
// static void setup_memwrite_mmap_pb4_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_57_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_57_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_58_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pb4_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_58_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_58_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_59_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_59_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pb4_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_59_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_59_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_60_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_60_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pb4_58_proc0
// static void setup_memwrite_mmap_pb4_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_60_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_60_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_61_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_61_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
// }
// ^ See setup_memwrite_mmap_pb4_59_proc0
// static void setup_memwrite_mmap_pb4_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_61_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_62_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_62_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_62_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_63_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb4_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_63_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_64_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb4_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_64_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_64_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_65_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 0, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pb4_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_65_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_65_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_66_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_66_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_62_proc0
// static void setup_memwrite_mmap_pb4_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_66_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_66_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_67_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1e27000);
  init_map_file(0x12345601000, 1, "__i0", 0x1e27000);
}
// static void setup_memwrite_mmap_pb4_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_67_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_67_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_68_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_68_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_68_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_69_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_69_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_pb4_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_69_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_5_proc0
// static void setup_memwrite_mmap_pb4_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_69_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_69_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_70_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_70_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_71_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_71_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_71_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_71_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_72_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_pb4_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_72_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_72_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_73_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc14_11_common
static void setup_memwrite_mmap_pb4_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pb4_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_73_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_73_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_74_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_74_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_74_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_74_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_75_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_75_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_75_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_76_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_76_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_76_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_77_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_pb4_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_pb4_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_77_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_77_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_78_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
// static void setup_memwrite_mmap_pb4_78_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_43_proc0
// static void setup_memwrite_mmap_pb4_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_78_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_78_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_79_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pb4_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_79_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_79_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_80_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_80_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x26000);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_70_proc0
// static void setup_memwrite_mmap_pb4_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_80_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_80_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_81_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_81_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_71_proc0
// static void setup_memwrite_mmap_pb4_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_81_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_81_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_82_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
// static void setup_memwrite_mmap_pb4_82_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_72_proc0
// static void setup_memwrite_mmap_pb4_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_82_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_pb4_82_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_83_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb4_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_83_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_84_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pb4_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pb4_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_84_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_84_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_85_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_85_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_75_proc0
// static void setup_memwrite_mmap_pb4_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_85_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_86_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_86_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_76_proc0
// static void setup_memwrite_mmap_pb4_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_86_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb4_87_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb4_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pdd6_12_1
// static void setup_memwrite_mmap_pb4_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pb4_87_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_77_proc0
// static void setup_memwrite_mmap_pb4_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb4_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb4_87_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pb0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pb0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pb0_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pb0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pac_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pac_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pac_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pac_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pac_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pac_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pac_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pac_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pac_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pac_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pac_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pac_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_pac_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pac_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pac_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pac_2_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pac_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pac_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pac_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_pac_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pac_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pac_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pac_3_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pac_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa6_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb6_0_proc0
// static void setup_memwrite_mmap_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pa6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pa6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa6_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
// static void setup_memwrite_mmap_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb6_1_proc0
// static void setup_memwrite_mmap_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pa6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_pa6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa6_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pa6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
// static void setup_memwrite_mmap_pa6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb6_4_proc0
// static void setup_memwrite_mmap_pa6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pa6_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_pa6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa6_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pa6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pa6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb6_2_proc0
// static void setup_memwrite_mmap_pa6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pa6_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pa6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa6_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa6_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pa6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pa6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb6_5_proc0
// static void setup_memwrite_mmap_pa6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pa6_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pa6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa6_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa6_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_pa6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_pa6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb6_3_proc0
// static void setup_memwrite_mmap_pa6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_pa6_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_pa6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pa5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pa5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_0_proc0
// static void setup_memwrite_mmap_pa5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pa5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_pa5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_1_proc0
// static void setup_memwrite_mmap_pa5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pa5_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pa5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pa5_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pa5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pa5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_7_proc0
// static void setup_memwrite_mmap_pa5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_pa5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_5_proc0
// static void setup_memwrite_mmap_pa5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pa5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pa5_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_memwrite_mmap_pa5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pa5_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_pa5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pa5_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pa5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pa5_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pa5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pa5_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pa5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pa5_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_7_proc0
// static void setup_memwrite_mmap_pa5_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pa5_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pa5_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_pa5_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_pa5_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_5_proc0
// static void setup_memwrite_mmap_pa5_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_pa5_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_7_proc0
// static void setup_memwrite_mmap_pa5_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_pa5_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pa5_9_proc0
// static void setup_memwrite_mmap_pa5_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pa5_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
static void setup_memwrite_mmap_pa5_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_memwrite_mmap_pa5_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_pa5_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_pa5_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_pa5_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_pa5_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_14_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_pa5_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pb4_7_proc0
// static void setup_memwrite_mmap_pa5_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_15_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pa5_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pa5_7_proc0
// static void setup_memwrite_mmap_pa5_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_16_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa5_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa5_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_pa5_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_pa5_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pb4_0_proc0
// static void setup_memwrite_mmap_pa5_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa5_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa5_17_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_pa0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_pa0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_pa0_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_pa0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_p98_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_2_proc1
// static void setup_memwrite_mmap_p98_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_p98_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p98_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p98_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p98_5_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p98_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_p98_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
// static void setup_memwrite_mmap_p98_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_5_proc1
// static void setup_memwrite_mmap_p98_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_p98_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_p98_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_p98_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_p98_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p98_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p98_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_pd14_1_proc0
// static void setup_memwrite_mmap_p98_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p98_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_11_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p98_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p98_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_p98_12_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p98_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p98_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p98_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p98_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p98_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p98_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_p98_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p98_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p96_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p96_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p96_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_p96_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_p96_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p96_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p96_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p96_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p96_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p96_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
static void setup_memwrite_mmap_p96_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_p96_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p96_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_p96_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p96_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p96_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p96_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p96_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_p96_0_proc0
// static void setup_memwrite_mmap_p96_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p96_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p96_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p96_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p96_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p96_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
// static void setup_memwrite_mmap_p96_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_p96_1_proc0
// static void setup_memwrite_mmap_p96_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p96_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_p96_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p96_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p96_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p96_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
static void setup_memwrite_mmap_p96_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_memwrite_mmap_p96_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p96_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p96_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p96_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p96_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p96_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p96_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_p96_4_proc0
// static void setup_memwrite_mmap_p96_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p96_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p96_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p94_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p94_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p94_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p94_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p94_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_p94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdf0_4_common
// static void setup_memwrite_mmap_p94_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_2_proc1
// static void setup_memwrite_mmap_p94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p94_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_p94_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p94_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p94_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_p94_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p94_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p94_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p94_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p94_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p94_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p94_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_p94_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p94_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_p98_9_proc0
// static void setup_memwrite_mmap_p94_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p94_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p94_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p90_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p90_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p90_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p90_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p90_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p90_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p90_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p8c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p8c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p8c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p8c_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p8c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p8c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_p8c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p8c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p8c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p8c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p8c_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p8c_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p8c_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_p8c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p8c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p8c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p8c_2_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p8c_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p8c_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p8c_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_p8c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p8c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p8c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p8c_3_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p8c_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p86_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p86_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p86_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p86_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_p96_0_proc0
// static void setup_memwrite_mmap_p86_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p86_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p86_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p86_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p86_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p86_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
// static void setup_memwrite_mmap_p86_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_p96_1_proc0
// static void setup_memwrite_mmap_p86_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p86_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_p86_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p86_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p86_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p86_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p86_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_p96_4_proc0
// static void setup_memwrite_mmap_p86_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p86_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p86_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p86_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p86_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p86_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pb6_1_common
// static void setup_memwrite_mmap_p86_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_p96_1_proc0
// static void setup_memwrite_mmap_p86_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p86_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pb6_1_final
// static void setup_memwrite_mmap_p86_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p86_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p86_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p86_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p86_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_p96_4_proc0
// static void setup_memwrite_mmap_p86_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p86_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p86_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p86_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p86_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p86_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p86_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_p96_0_proc0
// static void setup_memwrite_mmap_p86_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p86_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p86_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p85_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p85_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p85_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_p85_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_p85_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pc14_11_common
static void setup_memwrite_mmap_p85_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_memwrite_mmap_p85_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_p85_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_p85_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_p85_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_2_proc1
// static void setup_memwrite_mmap_p85_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_p85_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_p85_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_p85_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_memwrite_mmap_pc6_2_proc1
// static void setup_memwrite_mmap_p85_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_p85_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_p85_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p85_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_p85_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p85_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_p85_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_9_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p85_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_p85_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x26000);
// }
// ^ See setup_memwrite_mmap_pd6_4_proc1
// static void setup_memwrite_mmap_p85_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_p85_9_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_10_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p85_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_memwrite_mmap_p85_2_proc0
// static void setup_memwrite_mmap_p85_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_p85_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_10_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_11_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p85_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_p85_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_11_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_12_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p85_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_memwrite_mmap_p98_9_proc0
// static void setup_memwrite_mmap_p85_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_12_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_13_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p85_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pb4_4_common
// static void setup_memwrite_mmap_p85_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x26000);
// }
// ^ See setup_memwrite_mmap_pd6_4_proc1
// static void setup_memwrite_mmap_p85_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_memwrite_mmap_pdf0_4_final
// static void setup_memwrite_mmap_p85_13_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_14_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_p85_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_p85_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_14_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_15_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p85_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p85_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_15_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_16_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p85_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p85_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_16_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p85_17_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p85_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p85_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p85_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p85_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p85_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p85_17_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p80_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p80_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p80_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p80_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p80_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_p80_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p80_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p80_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p80_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p80_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p78_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p78_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p78_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p78_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p70_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p70_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p70_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p70_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p70_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p70_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_p70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
static void setup_memwrite_mmap_p70_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_p70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p70_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p70_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p70_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p70_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_p70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_p70_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_p70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p70_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p70_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p70_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p70_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_p70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
static void setup_memwrite_mmap_p70_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_p70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p70_3_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p70_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p70_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p70_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfe_0_1
// static void setup_memwrite_mmap_p70_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_p70_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_p70_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p70_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p70_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p6c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p6c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p6c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p6c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p6c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p6c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p6c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p6c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p6c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p6c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p6a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p6a_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_p6a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p6a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p6a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p6a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p6a_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_p68_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_p68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pdd6_5_common
static void setup_memwrite_mmap_p68_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_memwrite_mmap_p68_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_p68_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_p68_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_memwrite_mmap_p68_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_p68_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_memwrite_mmap_p68_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_5_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_4_common
static void setup_memwrite_mmap_p68_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_memwrite_mmap_p68_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfac_4_final
// static void setup_memwrite_mmap_p68_5_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_6_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_p68_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_memwrite_mmap_p68_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_6_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_7_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
static void setup_memwrite_mmap_p68_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_memwrite_mmap_p68_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_7_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p68_8_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p68_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999406592);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfac_0_1
// static void setup_memwrite_mmap_p68_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
static void setup_memwrite_mmap_p68_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_memwrite_mmap_p68_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p68_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p68_8_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p60_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p60_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p60_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p60_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p5c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p5c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_p5c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p5c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p5c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p5c_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p5c_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p58_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p58_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_p58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p58_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p58_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p58_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p58_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_p58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p58_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p58_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p4c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p4c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p4c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p4c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p4c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p4c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p4c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4b0_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4b0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p4b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p4b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p4b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p4b0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p4b0_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4b0_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4b0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p4b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p4b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_p4b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p4b0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p4b0_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p4a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p4a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p4a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p4a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p4a_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pc14_1_1
// static void setup_memwrite_mmap_p4a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p4a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p4a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p4a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p4a_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p4a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p4a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p4a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p4a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p4a_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p4a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p4a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_p4a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p4a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p4a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p4a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p4a_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p40_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p40_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_p40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p40_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p40_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p30_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p30_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p30_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p30_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p30_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p30_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_1_proc1
// static void setup_memwrite_mmap_p30_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p30_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p30_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p30_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p30_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p30_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p30_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_memwrite_mmap_pec_4_proc1
// static void setup_memwrite_mmap_p30_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p30_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p30_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p30_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p30_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p30_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p30_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_memwrite_mmap_pec_0_proc1
// static void setup_memwrite_mmap_p30_3_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p30_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p30_4_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p30_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pec_0_1
// static void setup_memwrite_mmap_p30_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p30_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p30_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_memwrite_mmap_pfe_2_proc0
// static void setup_memwrite_mmap_p30_4_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p30_4_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p2c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p2c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p2c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p2c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p2c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p2c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pfb_0_1
// static void setup_memwrite_mmap_p2c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p2c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p2c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p2c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p2c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p28_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p28_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pea_0_1
// static void setup_memwrite_mmap_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p28_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p20_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p20_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf8_0_1
// static void setup_memwrite_mmap_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p20_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p20_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p18_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p18_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_0_1
// static void setup_memwrite_mmap_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p18_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p18_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p18_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p18_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf6_1_1
// static void setup_memwrite_mmap_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p18_1_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p18_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p0c_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p0c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p0c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p0c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p0c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_0_proc1
// static void setup_memwrite_mmap_p0c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p0c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p0c_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p0c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf3_0_1
// static void setup_memwrite_mmap_p0c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_memwrite_mmap_pfb_0_common
// static void setup_memwrite_mmap_p0c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_pfb_0_proc1
// static void setup_memwrite_mmap_p0c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_memwrite_mmap_peb_1_proc1
// static void setup_memwrite_mmap_p0c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_final
// static void setup_memwrite_mmap_p0c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_memwrite_mmap_pfb_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p0a_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p0a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p0a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p0a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p0a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p0a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p0a_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p0a_1_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p0a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_0_1
// static void setup_memwrite_mmap_p0a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p0a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p0a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pe28_1_proc1
// static void setup_memwrite_mmap_p0a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p0a_1_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p0a_2_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p0a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf28_2_1
// static void setup_memwrite_mmap_p0a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfe_1_common
// static void setup_memwrite_mmap_p0a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p0a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p0a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p0a_2_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p0a_3_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p0a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pe28_3_1
// static void setup_memwrite_mmap_p0a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pfac_3_common
// static void setup_memwrite_mmap_p0a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p0a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_memwrite_mmap_pea_0_proc1
// static void setup_memwrite_mmap_p0a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_memwrite_mmap_pfe_1_final
// static void setup_memwrite_mmap_p0a_3_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

/*
 * calls: memwrite mmap
 */
// static int test_memwrite_mmap_p00_0_0(void) {
//   char* p = (char*) 0x12345600000UL;
//   int signal, r = 0;
//   pf_active = 1;
//   if ((signal = sigsetjmp(pf_jmpbuf, 1)))
//     r = -1;
//   else
//     *p = 0;
//   pf_active = 0;
//   expect_result("signal", signal, 11);
//   expect_result("r", r, -1);
//   return r;
// }
// ^ See test_memwrite_mmap_pb8_0_0
// static int test_memwrite_mmap_p00_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_memwrite_mmap_pf0_0_1
// static void setup_memwrite_mmap_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_common
// static void setup_memwrite_mmap_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_memwrite_mmap_pfe_0_proc1
// static void setup_memwrite_mmap_p00_0_final(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal
// static void setup_memwrite_mmap_p00_0_procfinal(void) {
//   
// }
// ^ See setup_memwrite_mmap_pfe_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-memwrite_mmap_pfe_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_2",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_4",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_5",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_6",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_8",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_9",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfe_10",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfb_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfb_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfac_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfac_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfac_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfac_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_4",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pfac_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_5",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfac_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_6",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pfac_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfac_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfac_8",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfac_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfa8_0",
    &setup_memwrite_mmap_pfa8_0_common,
    { { &setup_memwrite_mmap_pfa8_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfa8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pfa8_1",
    &setup_memwrite_mmap_pfa8_0_common,
    { { &setup_memwrite_mmap_pfa8_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfa8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf8_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf6_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf6_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf3_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf3_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf28_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfac_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf28_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pf28_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf28_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfac_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf28_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pf28_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pf0_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pec_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pec_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pec_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pec_2",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pec_3",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pec_4",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pec_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_peb_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_peb_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pea_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe8_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe6_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe6_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe3_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe3_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe28_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe28_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe28_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe28_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pe0_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_4",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdf0_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_5",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdf0_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_6",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdf0_8",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd8_0",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pdd8_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd8_1",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pdd8_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd8_2",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pdd8_2_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd8_3",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pdd8_3_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_0",
    &setup_memwrite_mmap_pdd6_0_common,
    { { &setup_memwrite_mmap_pdd6_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_4",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_5",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_6",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_7",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_8",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_9",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_10",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_11",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_12",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_13",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_14",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_15",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_16",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_17",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_17_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_17_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_18",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_18_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_17_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_19",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_19_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_20",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_20_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_21",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_21_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_22",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_22_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_23",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_21_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_24",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_24_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_25",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_25_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_26",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_26_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_27",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_24_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_28",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_26_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_29",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_25_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_30",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_30_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_31",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_31_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_32",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_32_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_32_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_33",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_33_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_34",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_34_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_35",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_33_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_36",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_36_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_37",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_37_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_38",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_38_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_39",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_36_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_40",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_37_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_41",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_38_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_42",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_42_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_43",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_43_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_44",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_44_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_45",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_45_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_46",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_46_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_47",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_47_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_48",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_48_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_49",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_49_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_50",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_50_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_51",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_46_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_52",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_52_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_52_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_53",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_53_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_53_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_54",
    &setup_memwrite_mmap_pdd6_54_common,
    { { &setup_memwrite_mmap_pdd6_54_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_54_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_55",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_55_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_56",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_56_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_57",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_57_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_58",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_58_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_59",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_59_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_60",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_60_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_61",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_61_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_62",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_62_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_63",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_63_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_64",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_64_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_65",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_65_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_66",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_56_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_67",
    &setup_memwrite_mmap_pdd6_4_common,
    { { &setup_memwrite_mmap_pdd6_67_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_68",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_58_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_69",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_59_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_70",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_60_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_71",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_57_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_72",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_62_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_73",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_61_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_74",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_74_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_75",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_75_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_52_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_76",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_76_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_52_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_77",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_77_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_78",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_78_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_79",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_79_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_80",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_80_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_81",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_81_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_82",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_82_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_83",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_83_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_84",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_84_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_85",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_85_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_86",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_86_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_87",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_87_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_88",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_89",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_89_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_90",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_90_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_91",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_92",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_93",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_93_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_94",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_94_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_95",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_82_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_96",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_96_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_97",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_85_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_98",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_84_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_99",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pdd6_86_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_100",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_100_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_101",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_87_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_102",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_103",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_103_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_104",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_105",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_36_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_106",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_106_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_107",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_84_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_108",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_108_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_109",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_109_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_110",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_87_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_111",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_111_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_112",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_112_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_113",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_113_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_114",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_90_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_115",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_116",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_116_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_117",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_94_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_118",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_82_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_119",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_119_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_120",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_120_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_121",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_121_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_122",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_123",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_123_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_124",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_124_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_125",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_106_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_126",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_126_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_127",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_127_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_128",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_128_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_129",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_111_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_130",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_130_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_131",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_113_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_132",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_90_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_133",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_134",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_119_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_135",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_116_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_136",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_94_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_137",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_82_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_138",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_120_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_139",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_33_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_139_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_140",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_140_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_141",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_141_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_142",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_109_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_142_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_143",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_143_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_144",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_144_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_145",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_145_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_146",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_146_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_147",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_147_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_45_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_148",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_108_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_149",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_149_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_150",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_112_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_151",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_103_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_152",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdd6_141_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_153",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_84_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_154",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_154_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_155",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_155_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_155_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_156",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_156_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_156_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_157",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_157_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_142_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_158",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_158_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_158_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_159",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_87_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_160",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_160_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_160_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_161",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_161_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_162",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_162_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_163",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_163_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_164",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_90_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_165",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_147_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_166",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_166_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_167",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_158_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_32_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_168",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_100_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_169",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_169_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_32_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_170",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_149_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_171",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_103_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdd6_172",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_172_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_32_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdc_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdb0_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pdb0_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd98_0",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pdd8_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd98_1",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pdd8_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd98_2",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pdd8_2_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd98_3",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pdd8_3_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_1",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd94_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_63_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_63_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_4",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd94_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_5",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_6",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_7",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd94_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_8",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_9",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdd6_33_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_9_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_10",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd94_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_8_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_11",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_11_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_12",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_12_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd94_13",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd94_12_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_13_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd8_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pec_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pd6_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_2_proc0 }, { &setup_memwrite_mmap_pd6_3_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_4",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pd6_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_5",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pdf0_3_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_6",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_7",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pd6_7_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd6_8",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pd6_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd58_0",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pd58_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd58_1",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pd58_1_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd58_2",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pd58_1_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd58_3",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pd58_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd50_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pd50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd50_1",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd50_1_proc0 }, { &setup_memwrite_mmap_pd50_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd50_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pd50_2_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd4_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd30_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd30_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd18_0",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pd58_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd18_1",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pd58_1_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd18_2",
    &setup_memwrite_mmap_pdd8_1_common,
    { { &setup_memwrite_mmap_pd58_1_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd18_3",
    &setup_memwrite_mmap_pdd8_0_common,
    { { &setup_memwrite_mmap_pd58_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pd50_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_1_proc0 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_2",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd14_2_proc0 }, { &setup_memwrite_mmap_pd14_2_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_3_proc0 }, { &setup_memwrite_mmap_pd14_3_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd14_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_4",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd14_2_proc0 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_5",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pd50_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_8_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_6",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_6_proc0 }, { &setup_memwrite_mmap_pd14_6_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd14_6_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_7_proc0 }, { &setup_memwrite_mmap_pd14_7_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_13_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_8",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd50_1_proc0 }, { &setup_memwrite_mmap_pd14_8_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_9",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd6_1_proc0 }, { &setup_memwrite_mmap_pd14_8_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_10",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_3_proc0 }, { &setup_memwrite_mmap_pd50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd14_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_11",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pd14_11_proc0 }, { &setup_memwrite_mmap_pd50_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_13_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_12",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_12_proc0 }, { &setup_memwrite_mmap_pd50_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd94_13_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd14_13",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pd14_3_proc0 }, { &setup_memwrite_mmap_pd50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pd14_13_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pd0_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pdf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pdf0_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf8_0",
    &setup_memwrite_mmap_pfa8_0_common,
    { { &setup_memwrite_mmap_pcf8_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pcf0_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_1",
    &setup_memwrite_mmap_pcf0_1_common,
    { { &setup_memwrite_mmap_pcf0_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_2",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_3",
    &setup_memwrite_mmap_pcf0_1_common,
    { { &setup_memwrite_mmap_pcf0_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_4",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pcf0_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_5",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pcf0_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_6",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pcf0_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_7",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pcf0_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcf0_8",
    &setup_memwrite_mmap_pcf0_8_common,
    { { &setup_memwrite_mmap_pcf0_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd8_0",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pcd8_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd8_1",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pcd8_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd8_2",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pcd8_2_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd8_3",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pcd8_3_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_0",
    &setup_memwrite_mmap_pcd4_0_common,
    { { &setup_memwrite_mmap_pcd4_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_1",
    &setup_memwrite_mmap_pcd4_1_common,
    { { &setup_memwrite_mmap_pcd4_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_2",
    &setup_memwrite_mmap_pcd4_2_common,
    { { &setup_memwrite_mmap_pcd4_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_3",
    &setup_memwrite_mmap_pcd4_3_common,
    { { &setup_memwrite_mmap_pcd4_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pcd4_3_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_4",
    &setup_memwrite_mmap_pcd4_4_common,
    { { &setup_memwrite_mmap_pcd4_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_5",
    &setup_memwrite_mmap_pcd4_5_common,
    { { &setup_memwrite_mmap_pcd4_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_6",
    &setup_memwrite_mmap_pcd4_6_common,
    { { &setup_memwrite_mmap_pcd4_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_7",
    &setup_memwrite_mmap_pcd4_7_common,
    { { &setup_memwrite_mmap_pcd4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_8",
    &setup_memwrite_mmap_pcd4_8_common,
    { { &setup_memwrite_mmap_pcd4_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_9",
    &setup_memwrite_mmap_pcd4_6_common,
    { { &setup_memwrite_mmap_pcd4_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_10",
    &setup_memwrite_mmap_pcd4_10_common,
    { { &setup_memwrite_mmap_pcd4_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_11",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_12",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_12_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_19_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_13",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_14",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_14_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_15",
    &setup_memwrite_mmap_pcd4_15_common,
    { { &setup_memwrite_mmap_pcd4_15_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_16",
    &setup_memwrite_mmap_pcd4_16_common,
    { { &setup_memwrite_mmap_pcd4_16_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_17",
    &setup_memwrite_mmap_pcd4_17_common,
    { { &setup_memwrite_mmap_pcd4_17_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_18",
    &setup_memwrite_mmap_pcd4_18_common,
    { { &setup_memwrite_mmap_pcd4_18_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_18_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_19",
    &setup_memwrite_mmap_pcd4_19_common,
    { { &setup_memwrite_mmap_pcd4_19_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_18_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_20",
    &setup_memwrite_mmap_pcd4_20_common,
    { { &setup_memwrite_mmap_pcd4_20_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_21",
    &setup_memwrite_mmap_pcd4_21_common,
    { { &setup_memwrite_mmap_pcd4_21_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_21_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_22",
    &setup_memwrite_mmap_pcd4_22_common,
    { { &setup_memwrite_mmap_pcd4_22_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_23",
    &setup_memwrite_mmap_pcd4_23_common,
    { { &setup_memwrite_mmap_pcd4_23_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_24",
    &setup_memwrite_mmap_pcd4_24_common,
    { { &setup_memwrite_mmap_pcd4_24_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_25",
    &setup_memwrite_mmap_pcd4_23_common,
    { { &setup_memwrite_mmap_pcd4_23_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_26",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_26_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_27",
    &setup_memwrite_mmap_pcd4_27_common,
    { { &setup_memwrite_mmap_pcd4_27_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_28",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pdd6_120_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_29",
    &setup_memwrite_mmap_pcd4_29_common,
    { { &setup_memwrite_mmap_pcd4_29_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_30",
    &setup_memwrite_mmap_pcd4_30_common,
    { { &setup_memwrite_mmap_pcd4_27_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_30_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_31",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_31_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_31_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_32",
    &setup_memwrite_mmap_pcd4_32_common,
    { { &setup_memwrite_mmap_pcd4_32_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_30_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_33",
    &setup_memwrite_mmap_pcd4_33_common,
    { { &setup_memwrite_mmap_pcd4_33_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_34",
    &setup_memwrite_mmap_pcd4_34_common,
    { { &setup_memwrite_mmap_pcd4_34_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_35",
    &setup_memwrite_mmap_pcd4_35_common,
    { { &setup_memwrite_mmap_pcd4_35_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_36",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_36_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_31_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_37",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_37_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_31_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_38",
    &setup_memwrite_mmap_pcd4_38_common,
    { { &setup_memwrite_mmap_pcd4_38_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_39",
    &setup_memwrite_mmap_pcd4_39_common,
    { { &setup_memwrite_mmap_pdd6_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_40",
    &setup_memwrite_mmap_pcd4_39_common,
    { { &setup_memwrite_mmap_pdd6_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_41",
    &setup_memwrite_mmap_pcd4_41_common,
    { { &setup_memwrite_mmap_pcd4_41_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_42",
    &setup_memwrite_mmap_pcd4_42_common,
    { { &setup_memwrite_mmap_pcd4_42_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_30_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_43",
    &setup_memwrite_mmap_pcd4_43_common,
    { { &setup_memwrite_mmap_pcd4_43_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_30_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_44",
    &setup_memwrite_mmap_pcd4_44_common,
    { { &setup_memwrite_mmap_pcd4_44_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_45",
    &setup_memwrite_mmap_pcd4_45_common,
    { { &setup_memwrite_mmap_pcd4_45_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_142_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_46",
    &setup_memwrite_mmap_pcd4_4_common,
    { { &setup_memwrite_mmap_pcd4_46_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_47",
    &setup_memwrite_mmap_pcd4_34_common,
    { { &setup_memwrite_mmap_pcd4_47_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_48",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_48_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_32_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_49",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pdd6_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_50",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pdd6_82_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_51",
    &setup_memwrite_mmap_pcd4_51_common,
    { { &setup_memwrite_mmap_pcd4_51_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_52",
    &setup_memwrite_mmap_pcd4_52_common,
    { { &setup_memwrite_mmap_pcd4_52_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_53",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_53_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_54",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pdd6_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_55",
    &setup_memwrite_mmap_pcd4_55_common,
    { { &setup_memwrite_mmap_pdd6_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_56",
    &setup_memwrite_mmap_pcd4_56_common,
    { { &setup_memwrite_mmap_pcd4_56_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_142_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_57",
    &setup_memwrite_mmap_pcd4_57_common,
    { { &setup_memwrite_mmap_pcd4_57_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_58",
    &setup_memwrite_mmap_pcd4_58_common,
    { { &setup_memwrite_mmap_pcd4_58_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_59",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_59_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_60",
    &setup_memwrite_mmap_pcd4_58_common,
    { { &setup_memwrite_mmap_pcd4_60_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_60_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_61",
    &setup_memwrite_mmap_pcd4_34_common,
    { { &setup_memwrite_mmap_pcd4_61_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_61_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_62",
    &setup_memwrite_mmap_pcd4_10_common,
    { { &setup_memwrite_mmap_pcd4_62_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_63",
    &setup_memwrite_mmap_pcd4_10_common,
    { { &setup_memwrite_mmap_pcd4_63_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_59_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_64",
    &setup_memwrite_mmap_pcd4_17_common,
    { { &setup_memwrite_mmap_pcd4_64_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_65",
    &setup_memwrite_mmap_pcd4_17_common,
    { { &setup_memwrite_mmap_pcd4_65_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_66",
    &setup_memwrite_mmap_pcd4_18_common,
    { { &setup_memwrite_mmap_pcd4_66_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_18_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_67",
    &setup_memwrite_mmap_pcd4_20_common,
    { { &setup_memwrite_mmap_pcd4_67_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_67_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_68",
    &setup_memwrite_mmap_pcd4_20_common,
    { { &setup_memwrite_mmap_pcd4_68_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_67_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_69",
    &setup_memwrite_mmap_pcd4_69_common,
    { { &setup_memwrite_mmap_pcd4_69_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_70",
    &setup_memwrite_mmap_pcd4_34_common,
    { { &setup_memwrite_mmap_pcd4_70_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_61_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_71",
    &setup_memwrite_mmap_pcd4_34_common,
    { { &setup_memwrite_mmap_pcd4_71_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_67_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_72",
    &setup_memwrite_mmap_pcd4_38_common,
    { { &setup_memwrite_mmap_pcd4_70_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_67_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_73",
    &setup_memwrite_mmap_pcd4_73_common,
    { { &setup_memwrite_mmap_pcd4_73_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_60_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_74",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_74_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_75",
    &setup_memwrite_mmap_pcd4_73_common,
    { { &setup_memwrite_mmap_pcd4_73_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_75_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_76",
    &setup_memwrite_mmap_pcd4_76_common,
    { { &setup_memwrite_mmap_pcd4_76_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_76_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_77",
    &setup_memwrite_mmap_pcd4_77_common,
    { { &setup_memwrite_mmap_pcd4_77_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_77_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_78",
    &setup_memwrite_mmap_pcd4_78_common,
    { { &setup_memwrite_mmap_pcd4_78_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdd6_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_47_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_79",
    &setup_memwrite_mmap_pcd4_79_common,
    { { &setup_memwrite_mmap_pcd4_79_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_80",
    &setup_memwrite_mmap_pcd4_80_common,
    { { &setup_memwrite_mmap_pcd4_80_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_34_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_81",
    &setup_memwrite_mmap_pcd4_4_common,
    { { &setup_memwrite_mmap_pcd4_81_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_82",
    &setup_memwrite_mmap_pcd4_82_common,
    { { &setup_memwrite_mmap_pcd4_82_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_83",
    &setup_memwrite_mmap_pcd4_83_common,
    { { &setup_memwrite_mmap_pcd4_83_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_84",
    &setup_memwrite_mmap_pcd4_24_common,
    { { &setup_memwrite_mmap_pcd4_84_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_85",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_85_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_24_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_86",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_86_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_16_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_87",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_87_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_88",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_88_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_89",
    &setup_memwrite_mmap_pcd4_89_common,
    { { &setup_memwrite_mmap_pcd4_89_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_90",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_90_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_91",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_91_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_92",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_92_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_93",
    &setup_memwrite_mmap_pcd4_93_common,
    { { &setup_memwrite_mmap_pcd4_93_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_94",
    &setup_memwrite_mmap_pcd4_94_common,
    { { &setup_memwrite_mmap_pcd4_94_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_142_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_95",
    &setup_memwrite_mmap_pcd4_20_common,
    { { &setup_memwrite_mmap_pcd4_95_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_96",
    &setup_memwrite_mmap_pcd4_44_common,
    { { &setup_memwrite_mmap_pcd4_96_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_96_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_97",
    &setup_memwrite_mmap_pcd4_97_common,
    { { &setup_memwrite_mmap_pcd4_97_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_142_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_98",
    &setup_memwrite_mmap_pcd4_73_common,
    { { &setup_memwrite_mmap_pcd4_98_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_99",
    &setup_memwrite_mmap_pcd4_73_common,
    { { &setup_memwrite_mmap_pcd4_99_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_96_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_100",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_100_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_100_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_101",
    &setup_memwrite_mmap_pcd4_101_common,
    { { &setup_memwrite_mmap_pcd4_101_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_101_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_102",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_103",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_104",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_104_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_104_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_105",
    &setup_memwrite_mmap_pcd4_105_common,
    { { &setup_memwrite_mmap_pcd4_105_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_105_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_106",
    &setup_memwrite_mmap_pcd4_35_common,
    { { &setup_memwrite_mmap_pcd4_106_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_107",
    &setup_memwrite_mmap_pcd4_101_common,
    { { &setup_memwrite_mmap_pcd4_107_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_96_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_108",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_108_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_109",
    &setup_memwrite_mmap_pcd4_109_common,
    { { &setup_memwrite_mmap_pcd4_109_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_96_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_110",
    &setup_memwrite_mmap_pcd4_110_common,
    { { &setup_memwrite_mmap_pcd4_110_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_96_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_111",
    &setup_memwrite_mmap_pcd4_89_common,
    { { &setup_memwrite_mmap_pcd4_111_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_112",
    &setup_memwrite_mmap_pcd4_94_common,
    { { &setup_memwrite_mmap_pcd4_112_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_113",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_92_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_114",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_114_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_115",
    &setup_memwrite_mmap_pcd4_83_common,
    { { &setup_memwrite_mmap_pcd4_115_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_96_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_116",
    &setup_memwrite_mmap_pcd4_34_common,
    { { &setup_memwrite_mmap_pcd4_116_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_117",
    &setup_memwrite_mmap_pcd4_45_common,
    { { &setup_memwrite_mmap_pcd4_117_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_118",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_118_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_160_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_119",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_119_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_120",
    &setup_memwrite_mmap_pcd4_120_common,
    { { &setup_memwrite_mmap_pcd4_120_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_121",
    &setup_memwrite_mmap_pcd4_121_common,
    { { &setup_memwrite_mmap_pcd4_121_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_122",
    &setup_memwrite_mmap_pcd4_122_common,
    { { &setup_memwrite_mmap_pcd4_122_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_29_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_123",
    &setup_memwrite_mmap_pcd4_123_common,
    { { &setup_memwrite_mmap_pcd4_123_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_124",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_124_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_125",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_125_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_126",
    &setup_memwrite_mmap_pcd4_121_common,
    { { &setup_memwrite_mmap_pcd4_126_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_127",
    &setup_memwrite_mmap_pcd4_127_common,
    { { &setup_memwrite_mmap_pcd4_127_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_128",
    &setup_memwrite_mmap_pcd4_128_common,
    { { &setup_memwrite_mmap_pcd4_128_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_129",
    &setup_memwrite_mmap_pcd4_129_common,
    { { &setup_memwrite_mmap_pcd4_129_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_130",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_31_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_82_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_131",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_131_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_132",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_131_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_133",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_133_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_134",
    &setup_memwrite_mmap_pcd4_127_common,
    { { &setup_memwrite_mmap_pcd4_134_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_135",
    &setup_memwrite_mmap_pcd4_135_common,
    { { &setup_memwrite_mmap_pcd4_134_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_136",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_136_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_137",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_137_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_138",
    &setup_memwrite_mmap_pcd4_128_common,
    { { &setup_memwrite_mmap_pcd4_138_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_139",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_139_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_140",
    &setup_memwrite_mmap_pcd4_140_common,
    { { &setup_memwrite_mmap_pcd4_139_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_141",
    &setup_memwrite_mmap_pcd4_83_common,
    { { &setup_memwrite_mmap_pcd4_141_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_142",
    &setup_memwrite_mmap_pcd4_121_common,
    { { &setup_memwrite_mmap_pcd4_137_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_143",
    &setup_memwrite_mmap_pcd4_24_common,
    { { &setup_memwrite_mmap_pcd4_143_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_143_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_144",
    &setup_memwrite_mmap_pcd4_86_common,
    { { &setup_memwrite_mmap_pcd4_144_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_145",
    &setup_memwrite_mmap_pcd4_145_common,
    { { &setup_memwrite_mmap_pcd4_145_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_146",
    &setup_memwrite_mmap_pcd4_146_common,
    { { &setup_memwrite_mmap_pcd4_145_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_147",
    &setup_memwrite_mmap_pcd4_128_common,
    { { &setup_memwrite_mmap_pcd4_147_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_148",
    &setup_memwrite_mmap_pcd4_148_common,
    { { &setup_memwrite_mmap_pcd4_148_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_149",
    &setup_memwrite_mmap_pcd4_73_common,
    { { &setup_memwrite_mmap_pcd4_149_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_31_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_150",
    &setup_memwrite_mmap_pcd4_94_common,
    { { &setup_memwrite_mmap_pcd4_150_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_150_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_151",
    &setup_memwrite_mmap_pcd4_94_common,
    { { &setup_memwrite_mmap_pcd4_151_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_31_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_152",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_152_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_153",
    &setup_memwrite_mmap_pcd4_10_common,
    { { &setup_memwrite_mmap_pcd4_153_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_154",
    &setup_memwrite_mmap_pcd4_82_common,
    { { &setup_memwrite_mmap_pcd4_154_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_154_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_155",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_155_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_30_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_156",
    &setup_memwrite_mmap_pcd4_85_common,
    { { &setup_memwrite_mmap_pcd4_156_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_157",
    &setup_memwrite_mmap_pcd4_157_common,
    { { &setup_memwrite_mmap_pcd4_157_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_157_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_158",
    &setup_memwrite_mmap_pcd4_83_common,
    { { &setup_memwrite_mmap_pcd4_158_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_157_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_159",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pcd4_159_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_160",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pdd6_91_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_161",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_161_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_162",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_162_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_163",
    &setup_memwrite_mmap_pcd4_36_common,
    { { &setup_memwrite_mmap_pcd4_163_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_122_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_164",
    &setup_memwrite_mmap_pcd4_32_common,
    { { &setup_memwrite_mmap_pcd4_164_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_164_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_165",
    &setup_memwrite_mmap_pcd4_165_common,
    { { &setup_memwrite_mmap_pcd4_165_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_15_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_166",
    &setup_memwrite_mmap_pcd4_32_common,
    { { &setup_memwrite_mmap_pcd4_166_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_157_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_167",
    &setup_memwrite_mmap_pcd4_32_common,
    { { &setup_memwrite_mmap_pcd4_167_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_168",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_129_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_88_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_169",
    &setup_memwrite_mmap_pcd4_83_common,
    { { &setup_memwrite_mmap_pcd4_169_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pcd4_51_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_170",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pcd4_170_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_140_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_171",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_171_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcd4_172",
    &setup_memwrite_mmap_pcd4_10_common,
    { { &setup_memwrite_mmap_pcd4_133_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_102_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcc_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcb0_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pcb0_1",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc98_0",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pcd8_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc98_1",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pcd8_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc98_2",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pcd8_2_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc98_3",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pcd8_3_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_0",
    &setup_memwrite_mmap_pc94_0_common,
    { { &setup_memwrite_mmap_pc94_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_1",
    &setup_memwrite_mmap_pc94_1_common,
    { { &setup_memwrite_mmap_pc94_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_2",
    &setup_memwrite_mmap_pc94_2_common,
    { { &setup_memwrite_mmap_pc94_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_3",
    &setup_memwrite_mmap_pc94_3_common,
    { { &setup_memwrite_mmap_pc94_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_4",
    &setup_memwrite_mmap_pcd4_105_common,
    { { &setup_memwrite_mmap_pc94_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_5",
    &setup_memwrite_mmap_pcd4_73_common,
    { { &setup_memwrite_mmap_pc94_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_6",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pc94_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_6_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_7",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pc94_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_8",
    &setup_memwrite_mmap_pcd4_109_common,
    { { &setup_memwrite_mmap_pc94_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_9",
    &setup_memwrite_mmap_pcd4_31_common,
    { { &setup_memwrite_mmap_pcd4_171_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_9_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_10",
    &setup_memwrite_mmap_pcd4_101_common,
    { { &setup_memwrite_mmap_pc94_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_11",
    &setup_memwrite_mmap_pcd4_32_common,
    { { &setup_memwrite_mmap_pc94_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_11_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_12",
    &setup_memwrite_mmap_pcd4_11_common,
    { { &setup_memwrite_mmap_pdd6_102_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc94_13",
    &setup_memwrite_mmap_pcd4_12_common,
    { { &setup_memwrite_mmap_pcd4_26_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc8_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pec_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_1",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_2",
    &setup_memwrite_mmap_pcf0_1_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pc6_2_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_3",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_4",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_5",
    &setup_memwrite_mmap_pcf0_1_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pc6_5_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_6",
    &setup_memwrite_mmap_pcf0_8_common,
    { { &setup_memwrite_mmap_pc6_6_proc0 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_7",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pec_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc6_8",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pd14_1_proc0 }, { &setup_memwrite_mmap_pec_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc58_0",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pc58_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc58_1",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pc58_1_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc58_2",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pc58_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc58_3",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pc58_1_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc50_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pc50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc50_1",
    &setup_memwrite_mmap_pc50_1_common,
    { { &setup_memwrite_mmap_pc6_5_proc1 }, { &setup_memwrite_mmap_pc50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc50_2",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc4_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc30_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc30_1",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc18_0",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pc58_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc18_1",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pc58_1_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc18_2",
    &setup_memwrite_mmap_pcd8_0_common,
    { { &setup_memwrite_mmap_pc58_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc18_3",
    &setup_memwrite_mmap_pcd8_1_common,
    { { &setup_memwrite_mmap_pc58_1_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pdd8_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pc50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_1",
    &setup_memwrite_mmap_pc50_1_common,
    { { &setup_memwrite_mmap_pc6_5_proc1 }, { &setup_memwrite_mmap_pc50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_2",
    &setup_memwrite_mmap_pc50_1_common,
    { { &setup_memwrite_mmap_pc6_5_proc1 }, { &setup_memwrite_mmap_pc50_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pd14_1_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_4",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_5",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pd14_1_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_6",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pd14_1_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_7",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pd14_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_8",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pd14_1_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_9",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pd14_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_10",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_11",
    &setup_memwrite_mmap_pc14_11_common,
    { { &setup_memwrite_mmap_pc14_11_proc0 }, { &setup_memwrite_mmap_pc14_11_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc94_12_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_12",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc14_13",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pc0_0",
    &setup_memwrite_mmap_pcf0_0_common,
    { { &setup_memwrite_mmap_pec_4_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pfe_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_2",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb8_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_4",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_5",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_6",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_8",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb8_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_9",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_10",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_11",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_12",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_12_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_13",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_14",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pb8_14_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_15",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_15_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_16",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_17",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pb8_17_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_18",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_18_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_19",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_20",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_21",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_22",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pb8_22_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_23",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pb8_23_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_24",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb8_24_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_25",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pb8_22_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_26",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_27",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pb8_23_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_28",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb8_28_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb8_29",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb6_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb6_1",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_pb6_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb6_2",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_2_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb6_3",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_3_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb6_4",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_pb6_4_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb6_5",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_5_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_1",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_2",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_3",
    &setup_memwrite_mmap_pb4_3_common,
    { { &setup_memwrite_mmap_pb4_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pb4_3_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_4",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_5",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_6",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_8",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_9",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_10",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_10_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_11",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_12",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_12_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_13",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_13_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_14",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_14_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_15",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_15_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_16",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_16_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_17",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_17_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_18",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_18_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_19",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_20",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_11_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_21",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_12_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_22",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_23",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_23_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_24",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_24_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_25",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_13_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_26",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_26_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_27",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_15_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_28",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_16_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_29",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_17_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_30",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_31",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_31_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_32",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_32_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_33",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_33_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_34",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_34_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_35",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_35_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_36",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_37",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_38",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_38_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_39",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_32_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_40",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_40_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_41",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_34_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_42",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_35_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_43",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pb4_43_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_44",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_45",
    &setup_memwrite_mmap_pb4_3_common,
    { { &setup_memwrite_mmap_pb4_45_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pb4_3_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_46",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_46_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_47",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pb4_18_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_48",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_23_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_49",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_50",
    &setup_memwrite_mmap_pb4_3_common,
    { { &setup_memwrite_mmap_pb4_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pb4_3_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_51",
    &setup_memwrite_mmap_pb4_3_common,
    { { &setup_memwrite_mmap_pb4_45_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pb4_3_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_52",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_53",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_53_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_54",
    &setup_memwrite_mmap_pc14_11_common,
    { { &setup_memwrite_mmap_pb4_54_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_55",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_55_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_56",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_56_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_57",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_55_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_58",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_58_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_59",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_59_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_60",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_58_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_61",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_59_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_62",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_62_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_63",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_63_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_64",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_64_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_65",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_65_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_66",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_62_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_67",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_67_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_68",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_68_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_69",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_70",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_70_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_71",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_71_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_72",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_72_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_73",
    &setup_memwrite_mmap_pc14_11_common,
    { { &setup_memwrite_mmap_pb4_73_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_74",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_74_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_75",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_75_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_76",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_76_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_77",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_77_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_78",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_43_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_79",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_79_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_80",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_70_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_81",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_71_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_82",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_pb4_72_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_83",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_83_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_84",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_84_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_85",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_75_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_86",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_76_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb4_87",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_77_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pdd6_12_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb0_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pb0_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pac_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pac_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pac_2",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pac_3",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa6_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_0_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa6_1",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_pb6_1_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa6_2",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_pb6_4_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa6_3",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_2_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa6_4",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_5_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa6_5",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pb6_3_proc0 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pb4_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_1",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pb4_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_2",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pa5_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_4",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_5",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pa5_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_6",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pa5_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_7",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pa5_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_8",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_9",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pa5_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_10",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_11",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_12",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pa5_9_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_13",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pa5_13_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_14",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pa5_14_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_15",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_16",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pa5_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa5_17",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pb4_0_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa0_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_pa0_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pec_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_2",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pc6_2_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_4",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_5",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_6",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pec_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_7",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pc6_5_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_8",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_9",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p98_9_proc0 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_10",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pd14_1_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_11",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pec_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_12",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p98_13",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pec_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p96_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p96_1",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_p96_1_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p96_2",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p96_3",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_p96_1_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p96_4",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_4_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p96_5",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_4_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p94_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p94_1",
    &setup_memwrite_mmap_pdf0_4_common,
    { { &setup_memwrite_mmap_pc6_2_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p94_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p94_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p98_9_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p90_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p90_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p8c_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p8c_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p8c_2",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p8c_3",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p86_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_0_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p86_1",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_p96_1_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p86_2",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_4_proc0 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p86_3",
    &setup_memwrite_mmap_pb6_1_common,
    { { &setup_memwrite_mmap_p96_1_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pb6_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p86_4",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_4_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p86_5",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_p96_0_proc0 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_2",
    &setup_memwrite_mmap_pc14_11_common,
    { { &setup_memwrite_mmap_p85_2_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_4",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pc6_2_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_5",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pc6_2_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_6",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_7",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_8",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_9",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pd6_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_10",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p85_2_proc0 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_11",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_12",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p98_9_proc0 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_13",
    &setup_memwrite_mmap_pb4_4_common,
    { { &setup_memwrite_mmap_pd6_4_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pdf0_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_14",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_15",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_16",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p85_17",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p80_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pec_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p80_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pec_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p78_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p70_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p70_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_p70_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p70_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_p70_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p70_3",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_p70_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p70_4",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_p70_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfe_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p6c_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_0_proc1 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p6c_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_1_proc1 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p6a_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_p68_1_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_2",
    &setup_memwrite_mmap_pdd6_5_common,
    { { &setup_memwrite_mmap_p68_2_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_3",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_p68_3_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_4",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p68_4_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_5",
    &setup_memwrite_mmap_pfac_4_common,
    { { &setup_memwrite_mmap_p68_5_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfac_4_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_6",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p68_6_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_7",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_p68_7_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p68_8",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_p68_8_proc0 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfac_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p60_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p5c_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p58_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p58_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4c_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_0_proc1 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4c_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_peb_1_proc1 }, { &setup_memwrite_mmap_pfb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4b0_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4b0_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pe28_1_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4a_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4a_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pc14_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4a_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p4a_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pea_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p40_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p30_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p30_1",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pec_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p30_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pec_4_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p30_3",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pec_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p30_4",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_2_proc0 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p2c_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_0_proc1 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p2c_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_0_proc1 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pfb_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p28_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pea_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p20_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p18_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p18_1",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf6_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p0c_0",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_0_proc1 }, { &setup_memwrite_mmap_peb_0_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p0c_1",
    &setup_memwrite_mmap_pfb_0_common,
    { { &setup_memwrite_mmap_pfb_0_proc1 }, { &setup_memwrite_mmap_peb_1_proc1 } },
    &setup_memwrite_mmap_pfb_0_procfinal,
    &setup_memwrite_mmap_pfb_0_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf3_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p0a_0",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p0a_1",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pe28_1_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p0a_2",
    &setup_memwrite_mmap_pfe_1_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf28_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p0a_3",
    &setup_memwrite_mmap_pfac_3_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pea_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_1_final,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pe28_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-memwrite_mmap_p00_0",
    &setup_memwrite_mmap_pfe_0_common,
    { { &setup_memwrite_mmap_pfe_0_proc1 }, { &setup_memwrite_mmap_pfe_0_proc1 } },
    &setup_memwrite_mmap_pfe_0_procfinal,
    &setup_memwrite_mmap_pfe_0_procfinal,
    { { &test_memwrite_mmap_pb8_0_0, 0, "memwrite" },
      { &test_memwrite_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
//+++ common
  {}
};
