//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: lseek write
 */
static int test_lseek_write_pfe_0_0(void) {
  int r = lseek(10, 0, 999);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_write_pfe_0_1(void) {
  ssize_t r = write(11, dataval0, 4096);
  expect_result("r", r, -1);
  expect_errno(32);
  if (r <= 0) return xerrno(r);
  return r;
}
static void setup_lseek_write_pfe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pfe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfe_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfe_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
  close(22);
  close(23);
}
static void setup_lseek_write_pfe_0_procfinal(void) {
  close(20);
  close(21);
  close(22);
  close(23);
}

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfe_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfe_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_pfe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pfe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_0_proc0
// static void setup_lseek_write_pfe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_0_proc1
static void setup_lseek_write_pfe_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
  close(22);
  close(23);
}
// static void setup_lseek_write_pfe_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfe_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfe_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_pfe_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_1_common
static void setup_lseek_write_pfe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pfe_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_0_proc1
// static void setup_lseek_write_pfe_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pfe_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfe_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfe_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_pfe_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pfe_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfe_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfe_3_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
static void setup_lseek_write_pfe_3_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfe_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfe_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_pfe_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_0_common
// static void setup_lseek_write_pfe_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_2_proc0
// static void setup_lseek_write_pfe_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_0_proc1
// static void setup_lseek_write_pfe_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pfe_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfe_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfe_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_pfe_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pfe_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfe_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfe_5_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_lseek_write_pfe_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfe_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
static int test_lseek_write_pfe_6_1(void) {
  ssize_t r = write(10, dataval0, 4096);
  expect_result("r", r, -1);
  expect_errno(32);
  if (r <= 0) return xerrno(r);
  return r;
}
// static void setup_lseek_write_pfe_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
static void setup_lseek_write_pfe_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pfe_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_pfe_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pfe_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
static int test_lseek_write_pfc_0_1(void) {
  ssize_t r = write(11, dataval0, 4096);
  expect_result("r", r, 4096);
  if (r <= 0) return xerrno(r);
  return r;
}
static void setup_lseek_write_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pfc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc0
// static void setup_lseek_write_pfc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pfc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pfc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc0
// static void setup_lseek_write_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pfc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pfc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pfc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pfc_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pfc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pfc_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pfc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_2_common
static void setup_lseek_write_pfc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pfc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pfc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pfc_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pfc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
static void setup_lseek_write_pfc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pfc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pfc_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pfc_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pfc_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pfc_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_3_proc0
// static void setup_lseek_write_pfc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pfc_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pfc_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_6_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pfc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_5_common
// static void setup_lseek_write_pfc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc0
// static void setup_lseek_write_pfc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pfc_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pfc_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
static int test_lseek_write_pfc_7_1(void) {
  ssize_t r = write(10, dataval0, 4096);
  expect_result("r", r, 4096);
  if (r <= 0) return xerrno(r);
  return r;
}
// static void setup_lseek_write_pfc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
static void setup_lseek_write_pfc_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pfc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pfc_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pfc_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pfc_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pfc_8_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pfc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_pfc_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_4_proc0
// static void setup_lseek_write_pfc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pfc_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pfc_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
static int test_lseek_write_pf8_0_1(void) {
  ssize_t r = write(11, dataval0, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r <= 0) return xerrno(r);
  return r;
}
static void setup_lseek_write_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_0_proc0
// static void setup_lseek_write_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_pf8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pf8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pf8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pf8_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_pf8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pf8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pf8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pf8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pf8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_2_common
// static void setup_lseek_write_pf8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_3_proc0
// static void setup_lseek_write_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pf8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pf8_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_3_common
// static void setup_lseek_write_pf8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_2_proc0
// static void setup_lseek_write_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_2_proc1
// static void setup_lseek_write_pf8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pf8_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
static int test_lseek_write_pf8_6_1(void) {
  ssize_t r = write(10, dataval0, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r <= 0) return xerrno(r);
  return r;
}
// static void setup_lseek_write_pf8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
static void setup_lseek_write_pf8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_7_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pf8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
static void setup_lseek_write_pf8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf8_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf8_8_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pf8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_1_common
// static void setup_lseek_write_pf8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_7_proc0
// static void setup_lseek_write_pf8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf8_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pf8_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf4_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf4_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pf4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
static void setup_lseek_write_pf4_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_lseek_write_pf4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf4_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf4_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pf4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf4_0_common
static void setup_lseek_write_pf4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf4_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf4_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pf4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pf4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pf4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pf4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf4_0_proc0
// static void setup_lseek_write_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf0_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pf0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf4_1_proc0
// static void setup_lseek_write_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pf0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf0_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pf0_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pf0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf4_2_proc0
// static void setup_lseek_write_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pf0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pf0_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pf0_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pf0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf0_1_common
// static void setup_lseek_write_pf0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf4_3_proc0
// static void setup_lseek_write_pf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pf0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pf0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pe_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pe_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pe_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_pe_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pe_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pe_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pe_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_pe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pe_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pde_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pde_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
static void setup_lseek_write_pde_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pde_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pde_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pde_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pde_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pde_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pde_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
static void setup_lseek_write_pde_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pde_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pde_0_proc0
// static void setup_lseek_write_pde_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pde_0_proc1
// static void setup_lseek_write_pde_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pde_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pde_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pde_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pde_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_0_common
static void setup_lseek_write_pde_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pde_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pde_0_proc1
// static void setup_lseek_write_pde_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pde_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pde_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pde_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pde_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_1_common
// static void setup_lseek_write_pde_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pde_2_proc0
// static void setup_lseek_write_pde_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pde_0_proc1
// static void setup_lseek_write_pde_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pde_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pde_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pde_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
static void setup_lseek_write_pde_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pde_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pde_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pde_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pde_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pde_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pde_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
static void setup_lseek_write_pde_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pde_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pde_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pde_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pde_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_pdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pdc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pdc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_5_common
static void setup_lseek_write_pdc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_write_pdc_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pdc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pdc_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_2_common
// static void setup_lseek_write_pdc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_1_proc0
// static void setup_lseek_write_pdc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_1_proc1
// static void setup_lseek_write_pdc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pdc_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_5_common
static void setup_lseek_write_pdc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pdc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_1_proc1
// static void setup_lseek_write_pdc_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pdc_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_2_common
// static void setup_lseek_write_pdc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_3_proc0
// static void setup_lseek_write_pdc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_1_proc1
// static void setup_lseek_write_pdc_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pdc_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_pdc_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pdc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pdc_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pdc_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_pdc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pdc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pdc_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pdc_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pdc_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pdc_7_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pdc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_pdc_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pdc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pdc_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pdc_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_1_common
// static void setup_lseek_write_pd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_2_common
// static void setup_lseek_write_pd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_1_proc0
static void setup_lseek_write_pd8_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pd8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pd8_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_1_common
// static void setup_lseek_write_pd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pd8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_2_common
// static void setup_lseek_write_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_3_proc0
// static void setup_lseek_write_pd8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd8_2_proc1
// static void setup_lseek_write_pd8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_1_final
// static void setup_lseek_write_pd8_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_3_common
// static void setup_lseek_write_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_1_proc0
// static void setup_lseek_write_pd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd8_2_proc1
// static void setup_lseek_write_pd8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pd8_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_pd8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pd8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd8_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd8_7_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_3_common
// static void setup_lseek_write_pd8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pdc_3_proc0
// static void setup_lseek_write_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd8_2_proc1
// static void setup_lseek_write_pd8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_final
// static void setup_lseek_write_pd8_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_write_pfe_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd4_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
static void setup_lseek_write_pd4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pd4_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pf4_1_final
// static void setup_lseek_write_pd4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd4_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
static void setup_lseek_write_pd4_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pd4_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pd4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd4_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd4_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd4_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
static void setup_lseek_write_pd4_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pd4_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pf4_1_final
// static void setup_lseek_write_pd4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd4_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd4_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
static void setup_lseek_write_pd4_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pd4_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pd4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_0_proc1
// static void setup_lseek_write_pd0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd0_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf0_1_common
// static void setup_lseek_write_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_0_proc1
// static void setup_lseek_write_pd0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pd0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd0_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd0_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd0_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_pd0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pd0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pd0_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pd0_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pd0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pd0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
static void setup_lseek_write_pd0_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pd0_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pd0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pc_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_pc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_pc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_pc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_pbf8_0_0(void) {
  int r = lseek(10, -4096, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_pbf8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_pbf8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
static void setup_lseek_write_pbf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pbf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_pbf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pbf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbf8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbf8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_pbf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_pbf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_pbf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_pbf8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pbf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbf0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbf0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pbf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
static void setup_lseek_write_pbf0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pbf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pbf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pbf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbf0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbf0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pbf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_pbf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_pbf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pbf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pbf0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbe_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbe_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_pbe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_pbe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbe_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbe_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_pbe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_pbe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbe_0_proc0
// static void setup_lseek_write_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pbe_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbd0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbd0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pbd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_lseek_write_pbd0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_write_pbd0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_lseek_write_pbd0_0_final(void) {
  unlink("__i0");
}
static void setup_lseek_write_pbd0_0_procfinal(void) {
  
}

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbd0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbd0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pbd0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pbd0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1851392, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pbd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pbd0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pbd0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbd0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbd0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pbd0_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pbd0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pbd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
static void setup_lseek_write_pbd0_2_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_lseek_write_pbd0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbd0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbd0_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pbd0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
static void setup_lseek_write_pbd0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pbd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pbd0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pbd0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbc0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbc0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pbc0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_pbc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_proc0
// static void setup_lseek_write_pbc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pbc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pbc0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbc0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbc0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pbc0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pbc0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pbc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pbc0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pbc0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbc0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbc0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pbc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
static void setup_lseek_write_pbc0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9355264, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pbc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pbc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pbc0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pbc0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pbc0_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pbc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_pbc0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pbc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pbc0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pbc0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_pb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb78_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb78_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pb78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
static void setup_lseek_write_pb78_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pb78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pb78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pb78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb78_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb78_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pb78_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_pb78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_pb78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pb78_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pb78_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb70_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb70_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pb70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
static void setup_lseek_write_pb70_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pb70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pb70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pb70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb70_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb70_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pb70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_pb70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_pb70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pb70_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pb70_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb6_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pb6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pbe_0_common
static void setup_lseek_write_pb6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pb6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pb6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb6_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb6_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pb6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pbe_1_common
// static void setup_lseek_write_pb6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb6_0_proc0
// static void setup_lseek_write_pb6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pb6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pb6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb50_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb50_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pb50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_pb50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pb50_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb50_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb50_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pb50_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_lseek_write_pb50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
static void setup_lseek_write_pb50_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_write_pb50_1_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_lseek_write_pb50_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb50_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb50_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pb50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
static void setup_lseek_write_pb50_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34267136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pb50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pb50_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb40_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb40_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pb40_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_pb40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb50_1_proc1
// static void setup_lseek_write_pb40_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_pb40_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb40_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb40_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pb40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_pb40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb40_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb40_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pb40_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb40_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb40_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pb40_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
static void setup_lseek_write_pb40_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pb40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pb40_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pb40_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pb0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pbf8_0_0
// static int test_lseek_write_pb0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
// static void setup_lseek_write_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_proc0
// static void setup_lseek_write_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_paf8_0_0(void) {
  int r = lseek(10, 0, SEEK_SET);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_paf8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_paf8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_paf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_paf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_paf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_paf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_paf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_paf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_paf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_paf8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_paf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf8_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf8_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_paf8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
static void setup_lseek_write_paf8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_paf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_paf8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_paf8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf8_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf8_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_paf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_paf8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_paf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_paf8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_paf8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_paf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_paf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_paf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_paf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_paf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_paf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_paf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_paf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_paf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_paf0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf0_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_paf0_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_paf0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_paf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_paf0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_paf0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_paf0_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_paf0_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_paf0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_paf0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_paf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_paf0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_paf0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pae_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pae_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
static void setup_lseek_write_pae_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pae_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pae_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pae_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pae_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pae_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_pae_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_0_proc0
// static void setup_lseek_write_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pae_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pae_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pae_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pae_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pae_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
static void setup_lseek_write_pae_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pae_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pae_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pae_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pae_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pae_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pae_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_pae_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_pae_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_pae_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pae_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pad8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pad8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pad8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
static void setup_lseek_write_pad8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pad8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_pad8_1_0(void) {
  int r = lseek(10, 24576, SEEK_SET);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static int test_lseek_write_pad8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pad8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pad8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pad8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pad8_2_0(void) {
//   int r = lseek(10, 24576, SEEK_SET);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_1_0
// static int test_lseek_write_pad8_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pad8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pad8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pad8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_pad8_3_0(void) {
  int r = lseek(10, 20480, SEEK_SET);
  expect_result("r", r, 20480);
  return xerrno(r);
}
// static int test_lseek_write_pad8_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pad8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
static void setup_lseek_write_pad8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pad8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_pad8_4_0(void) {
  int r = lseek(10, 8192, SEEK_SET);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_write_pad8_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pad8_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pad8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_pad8_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pad8_5_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_4_0
// static int test_lseek_write_pad8_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pad8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
static void setup_lseek_write_pad8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pad8_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_pad8_6_0(void) {
  int r = lseek(10, 12288, SEEK_SET);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_write_pad8_6_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pad8_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pad8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pad8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pad8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pad8_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_0_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_4_0
// static int test_lseek_write_pac0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pac0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pac0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pac0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pac0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pac0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pac0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_lseek_write_pac0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_4_proc0
// static void setup_lseek_write_pac0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_pac0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_2_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_4_0
// static int test_lseek_write_pac0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pac0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
static void setup_lseek_write_pac0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pac0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pac0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_3_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_4_0
// static int test_lseek_write_pac0_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pac0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
static void setup_lseek_write_pac0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pac0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pac0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pac0_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_pac0_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_pac0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pac0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pac0_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_5_0(void) {
//   int r = lseek(10, 12288, SEEK_SET);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_6_0
// static int test_lseek_write_pac0_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pac0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
static void setup_lseek_write_pac0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pac0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pac0_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pac0_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pac0_6_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_pac0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_pac0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_proc0
// static void setup_lseek_write_pac0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pac0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pac0_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
static void setup_lseek_write_pa8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa78_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa78_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pa78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_pa78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_pa78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pa78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pa78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa78_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa78_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pa78_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_pa78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_pa78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pa78_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pa78_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa78_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa78_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pa78_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
static void setup_lseek_write_pa78_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_pa78_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pa78_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pa78_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa78_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa78_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_pa78_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_pa78_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_pa78_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_pa78_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pa78_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa70_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa70_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_pa70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_pa70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pa70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pa70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa70_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa70_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_pa70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_pa70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pa70_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pa70_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa70_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa70_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_paf0_2_common
// static void setup_lseek_write_pa70_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_pa70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pa70_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pa70_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa70_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa70_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_paf0_3_common
// static void setup_lseek_write_pa70_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_pa70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_pa70_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pa70_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa6_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa6_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pa6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pa6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa6_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa6_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pa6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pa6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa6_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa6_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pa6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_pa6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_pa6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pa6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_pa6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa6_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa6_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pa6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_pa6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_pa6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_pa6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_pa6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa50_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_1_common
static void setup_lseek_write_pa50_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_write_pa50_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pa50_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pa50_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa50_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_pa50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_pa50_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa50_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_2_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_4_0
// static int test_lseek_write_pa50_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
static void setup_lseek_write_pa50_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34291712, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pa50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
// static void setup_lseek_write_pa50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa50_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa50_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa50_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_pa50_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_pa50_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_pa50_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa50_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_4_0(void) {
//   int r = lseek(10, 20480, SEEK_SET);
//   expect_result("r", r, 20480);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pad8_3_0
// static int test_lseek_write_pa50_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pa50_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_pa50_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
static void setup_lseek_write_pa50_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pa50_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa50_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa50_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa50_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_common
// static void setup_lseek_write_pa50_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
static void setup_lseek_write_pa50_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pa50_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pa50_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa50_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa50_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa50_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_pa50_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa50_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa50_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa50_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa40_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa40_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pa40_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_pa40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
static void setup_lseek_write_pa40_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_pa40_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pa40_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa40_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa40_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_pa40_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_pa40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa40_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_5_proc1
// static void setup_lseek_write_pa40_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_pa40_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa40_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa40_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa40_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_pa40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa40_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa40_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_pa40_3_0(void) {
  int r = lseek(10, 4096, SEEK_SET);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_write_pa40_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa40_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_6_common
// static void setup_lseek_write_pa40_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_pa40_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_pa40_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa40_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa40_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pa40_3_0
// static int test_lseek_write_pa40_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa40_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_6_common
// static void setup_lseek_write_pa40_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa40_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_pa40_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa40_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa40_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa40_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa40_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_pa40_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa40_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_pa40_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa40_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa40_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pa40_3_0
// static int test_lseek_write_pa40_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_pa40_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_pa40_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa40_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_pa40_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa40_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_pa0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_paf8_0_0
// static int test_lseek_write_pa0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_pa0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_pa0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p9fc_0_0(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p9fc_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p9fc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p9fc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_p9fc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p9fc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p9fc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9fc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9fc_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p9fc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_p9fc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_p9fc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p9fc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p9fc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9f8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9f8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p9f8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p9f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_p9f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p9f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p9f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9f8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9f8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p9f8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p9f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_p9f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p9f8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p9f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9f0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9f0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p9f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p9f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p9f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p9f0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p9f0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9f0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9f0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p9f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_p9f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p9f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p9f0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p9f0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p9ec_0_0(void) {
  int r = lseek(10, -8192, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p9ec_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p9ec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
static void setup_lseek_write_p9ec_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p9ec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9ec_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9ec_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9ec_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9ec_0_0
// static int test_lseek_write_p9ec_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p9ec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pb50_1_common
static void setup_lseek_write_p9ec_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p9ec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9ec_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_p9ec_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9ec_2_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9ec_0_0
// static int test_lseek_write_p9ec_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p9ec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p9ec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_0_proc0
// static void setup_lseek_write_p9ec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9ec_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9ec_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p9ec_3_0(void) {
  int r = lseek(10, -12288, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p9ec_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9ec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p9ec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p9ec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9ec_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9ec_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9e4_0_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9ec_0_0
// static int test_lseek_write_p9e4_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9e4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p9e4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9e4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9e4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9e4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9e4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9e4_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p9e4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p9e4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_5_proc0
// static void setup_lseek_write_p9e4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9e4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9e4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9e4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9e4_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p9e4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p9e4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_proc0
// static void setup_lseek_write_p9e4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9e4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9e4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9e4_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9e4_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p9e4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_common
// static void setup_lseek_write_p9e4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_proc0
// static void setup_lseek_write_p9e4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9e4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p9e4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9c_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p9c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p9c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p9c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9bc_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9bc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p9bc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_p9bc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_p9bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p9bc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p9bc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9bc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9bc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p9bc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_p9bc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_p9bc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p9bc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p9bc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9b8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9b8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p9f8_0_common
// static void setup_lseek_write_p9b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p9b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p9b8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p9b8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9b8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9b8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p9f8_1_common
// static void setup_lseek_write_p9b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p9b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p9b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p9b8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9b0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9b0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p9b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p9b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p9b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p9b0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p9b0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9b0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9b0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p9b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_p9b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p9b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p9b0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p9b0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9a8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9a8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p9a8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p9a8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc1
// static void setup_lseek_write_p9a8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_p9a8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9a8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9a8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9a8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p9a8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
// static void setup_lseek_write_p9a8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9a8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9a8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9a8_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9a8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p9a8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9a8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9a0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9a0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9a0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_1_common
// static void setup_lseek_write_p9a0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
static void setup_lseek_write_p9a0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p9a0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p9a0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9a0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9a0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9a0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p9a0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p9a0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9a0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p9a0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p9a0_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p9a0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p9a0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p9a0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p9a0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p98_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p9fc_0_0
// static int test_lseek_write_p98_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p98_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p97c_0_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p97c_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p97c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p97c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_p97c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p97c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p97c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p97c_1_0(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p97c_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p97c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
static void setup_lseek_write_p97c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p97c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p97c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p97c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p97c_2_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p97c_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p97c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_p97c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_p97c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p97c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p97c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p97c_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p97c_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p97c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_p97c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p97c_1_proc0
// static void setup_lseek_write_p97c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p97c_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p97c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p978_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p978_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p978_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p978_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_p978_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p978_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p978_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p978_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p978_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p978_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_write_p978_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p978_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p978_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p978_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p978_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p978_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p978_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p978_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p978_1_proc0
// static void setup_lseek_write_p978_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p978_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p978_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p978_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p978_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p978_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_paf0_3_common
// static void setup_lseek_write_p978_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_p978_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p978_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p978_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p970_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p970_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p970_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p970_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p970_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p970_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p970_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p970_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p970_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p970_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pbe_1_common
static void setup_lseek_write_p970_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p970_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p970_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p970_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p970_2_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p970_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_p970_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p970_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p970_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p970_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p970_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p970_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p970_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p970_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pbe_0_common
// static void setup_lseek_write_p970_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p970_1_proc0
// static void setup_lseek_write_p970_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p970_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p970_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p96e_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p96e_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
static void setup_lseek_write_p96e_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p96e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p96e_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p96e_1_0(void) {
  int r = lseek(10, -36864, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p96e_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
static void setup_lseek_write_p96e_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36864, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p96e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p96e_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p96e_2_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p96e_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_common
static void setup_lseek_write_p96e_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p96e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p96e_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p96e_3_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_write_p96e_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_common
static void setup_lseek_write_p96e_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p96e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p96e_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p96e_4_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p96e_3_0
// static int test_lseek_write_p96e_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p96e_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_0_proc0
// static void setup_lseek_write_p96e_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p96e_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p96e_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p96e_3_0
// static int test_lseek_write_p96e_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
static void setup_lseek_write_p96e_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p96e_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p96e_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p96e_6_0(void) {
  int r = lseek(10, 4096, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_write_p96e_6_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p96e_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p96e_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_0_proc0
// static void setup_lseek_write_p96e_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p96e_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p96e_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p962_0_0(void) {
  int r = lseek(10, 16384, SEEK_CUR);
  expect_result("r", r, 16384);
  return xerrno(r);
}
// static int test_lseek_write_p962_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p962_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
static void setup_lseek_write_p962_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p962_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p962_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p962_1_0(void) {
  int r = lseek(10, 12288, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_write_p962_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p962_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_4_common
// static void setup_lseek_write_p962_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_4_proc0
// static void setup_lseek_write_p962_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p962_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p962_2_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 16384);
  return xerrno(r);
}
// static int test_lseek_write_p962_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p962_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p962_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_2_proc0
// static void setup_lseek_write_p962_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p962_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p962_3_0(void) {
  int r = lseek(10, 12288, SEEK_CUR);
  expect_result("r", r, 32768);
  return xerrno(r);
}
// static int test_lseek_write_p962_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p962_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
static void setup_lseek_write_p962_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p962_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p962_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p962_4_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 16384);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p962_2_0
// static int test_lseek_write_p962_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p962_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_p962_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p962_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_p962_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p962_5_0(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_write_p962_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p962_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p962_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_6_proc0
// static void setup_lseek_write_p962_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p962_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p962_6_0(void) {
  int r = lseek(10, 12288, SEEK_CUR);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static int test_lseek_write_p962_6_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p962_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p962_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_6_proc0
// static void setup_lseek_write_p962_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p962_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p962_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p94_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p94_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p94_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p94_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p94_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
// static void setup_lseek_write_p94_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p94_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p94_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p93c_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p93c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p93c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_p93c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_p93c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p93c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p93c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p93c_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p93c_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p93c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
static void setup_lseek_write_p93c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p93c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p93c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p93c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p93c_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p93c_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p93c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_p93c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p93c_1_proc0
// static void setup_lseek_write_p93c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p93c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p93c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p93c_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p93c_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p93c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_p93c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_p93c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p93c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p93c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p938_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p938_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p938_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p978_0_common
// static void setup_lseek_write_p938_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p938_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p938_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p938_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p938_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p938_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p938_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p978_2_common
static void setup_lseek_write_p938_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p938_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p938_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p938_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p938_2_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p938_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p938_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_paf0_3_common
// static void setup_lseek_write_p938_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p938_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p938_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p938_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p938_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p938_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p938_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p978_1_common
// static void setup_lseek_write_p938_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p938_1_proc0
// static void setup_lseek_write_p938_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p938_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p938_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p930_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p930_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p930_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p930_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p930_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p930_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p930_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p930_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p930_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p930_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pbe_0_common
// static void setup_lseek_write_p930_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p938_1_proc0
// static void setup_lseek_write_p930_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p930_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p930_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p930_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p930_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p930_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pbe_1_common
// static void setup_lseek_write_p930_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p938_1_proc0
// static void setup_lseek_write_p930_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p930_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p930_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p930_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p930_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p930_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_p930_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p930_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p930_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p930_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p928_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p928_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p928_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p928_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
static void setup_lseek_write_p928_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p928_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p928_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p928_1_0(void) {
  int r = lseek(10, 4096, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_write_p928_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p928_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p928_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p928_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p9a0_0_proc1
// static void setup_lseek_write_p928_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_p928_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p928_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p928_1_0
// static int test_lseek_write_p928_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p928_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p928_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p928_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p928_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p928_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p928_3_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p928_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p928_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p928_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p928_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p928_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p928_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p928_4_0(void) {
  int r = lseek(10, -28672, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p928_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p928_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
static void setup_lseek_write_p928_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_write_p928_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p928_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p928_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p928_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p96e_3_0
// static int test_lseek_write_p928_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p928_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p928_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p928_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p928_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p928_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p928_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p928_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p928_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p928_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p928_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p928_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p928_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p920_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p920_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p920_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_0_common
// static void setup_lseek_write_p920_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p920_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb50_1_proc1
// static void setup_lseek_write_p920_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_p920_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p920_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_1_0
// static int test_lseek_write_p920_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p920_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p920_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
static void setup_lseek_write_p920_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p920_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p920_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p920_2_0(void) {
  int r = lseek(10, -20480, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p920_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p920_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p920_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p920_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc1
// static void setup_lseek_write_p920_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p920_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p920_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p928_1_0
// static int test_lseek_write_p920_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p920_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p920_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p920_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p920_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p920_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p920_4_0(void) {
  int r = lseek(10, -24576, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p920_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p920_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
// static void setup_lseek_write_p920_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
// static void setup_lseek_write_p920_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
// static void setup_lseek_write_p920_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p920_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p920_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p920_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p920_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p920_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p920_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p920_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p920_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p920_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p920_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p920_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p920_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p920_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p920_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p920_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p90_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p97c_0_0
// static int test_lseek_write_p90_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p90_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p90_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p928_1_0
// static int test_lseek_write_p90_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p90_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8fe_0_0(void) {
  int r = lseek(10, -4096, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p8fe_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_p8fe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8fe_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_p8fe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p8fe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8fe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8fe_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8fe_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_p8fe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8fe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_p8fe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p8fe_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8fe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8fc_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8fc_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8fc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pd4_1_common
// static void setup_lseek_write_p8fc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p978_1_proc0
// static void setup_lseek_write_p8fc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8fc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8fc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8fc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8fc_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p8fc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8fc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p978_1_proc0
// static void setup_lseek_write_p8fc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8fc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8fc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8f8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8f8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_0_common
// static void setup_lseek_write_p8f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_0_proc0
// static void setup_lseek_write_p8f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8f8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8f8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_1_common
// static void setup_lseek_write_p8f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_0_proc0
// static void setup_lseek_write_p8f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8f8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8f6_0_0(void) {
  int r = lseek(10, -24576, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p8f6_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p8f6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p8f6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_4_proc0
// static void setup_lseek_write_p8f6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f6_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8f6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8f6_1_0(void) {
  int r = lseek(10, -8192, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p8f6_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8f6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p8f6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_proc0
// static void setup_lseek_write_p8f6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8f6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f6_2_0(void) {
//   int r = lseek(10, -24576, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8f6_0_0
// static int test_lseek_write_p8f6_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8f6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
static void setup_lseek_write_p8f6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8f6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8f6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f6_3_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8f6_1_0
// static int test_lseek_write_p8f6_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8f6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p8f6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p8f6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8f6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8f0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p8f0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p8f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p96e_3_proc0
// static void setup_lseek_write_p8f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8f0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f0_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8f6_1_0
// static int test_lseek_write_p8f0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p8f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_proc0
// static void setup_lseek_write_p8f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8f0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8f0_2_0(void) {
  int r = lseek(10, -28672, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p8f0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8f0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
static void setup_lseek_write_p8f0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8f0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8f0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8f0_3_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8f0_2_0
// static int test_lseek_write_p8f0_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8f0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p8f0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p8f0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8f0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8f0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8e_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8e_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p8e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p8e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8e_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8de_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8de_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p8de_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf4_0_common
// static void setup_lseek_write_p8de_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_p8de_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p8de_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8de_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8de_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8de_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p8de_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf4_3_common
// static void setup_lseek_write_p8de_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_p8de_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p8de_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8de_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8dc_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8dc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8dc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pd4_1_common
// static void setup_lseek_write_p8dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p938_1_proc0
// static void setup_lseek_write_p8dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p8dc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8dc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8dc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8dc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fc_1_common
// static void setup_lseek_write_p8dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_p938_1_proc0
// static void setup_lseek_write_p8dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p8dc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8d8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8d8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p8d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_0_common
// static void setup_lseek_write_p8d8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p8d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p8d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8d8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8d8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p8d8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_1_common
// static void setup_lseek_write_p8d8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p8d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p8d8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8d6_0_0(void) {
  int r = lseek(10, -16384, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p8d6_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8d6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p8d6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p8d6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p8d6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8d6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8d6_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8d6_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p8d6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p8d6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p928_4_proc1
static void setup_lseek_write_p8d6_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8d6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8d6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8d6_2_0(void) {
//   int r = lseek(10, -16384, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8d6_0_0
// static int test_lseek_write_p8d6_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8d6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p8d6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p920_1_proc1
// static void setup_lseek_write_p8d6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p8d6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8d6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8d0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8d0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p8d0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_write_p8d0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p928_0_proc1
// static void setup_lseek_write_p8d0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8d0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8d0_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8f6_1_0
// static int test_lseek_write_p8d0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p8d0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p8d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p8d0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8d0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8d0_2_0(void) {
  int r = lseek(10, -20480, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_write_p8d0_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p8d0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p8d0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p8d0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p920_1_proc1
// static void setup_lseek_write_p8d0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8d0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8fe_0_0
// static int test_lseek_write_p8c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8be_0_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_lseek_write_p8be_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p8be_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_0_common
// static void setup_lseek_write_p8be_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_p8be_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p8be_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8be_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8be_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p8be_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p8be_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_1_common
// static void setup_lseek_write_p8be_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_p8be_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p8be_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8be_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8be_2_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static int test_lseek_write_p8be_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_p8be_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8be_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_p8be_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p8be_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8be_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8be_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p8be_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
static void setup_lseek_write_p8be_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8be_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf8_2_proc0
// static void setup_lseek_write_p8be_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p8be_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8be_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8bc_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p8bc_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p8bc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8bc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_p8bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8bc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8bc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8bc_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p8bc_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p8bc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8bc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_p8bc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8bc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8bc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8bc_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p8bc_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p8bc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8bc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_p8bc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8bc_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8bc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8bc_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p8bc_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8bc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p970_2_common
// static void setup_lseek_write_p8bc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_paf0_2_proc0
// static void setup_lseek_write_p8bc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8bc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8bc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8b8_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p8b8_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_0_common
// static void setup_lseek_write_p8b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_0_proc0
// static void setup_lseek_write_p8b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8b8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8b8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8b8_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p8b8_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_1_common
// static void setup_lseek_write_p8b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_0_proc0
// static void setup_lseek_write_p8b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8b8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8b8_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p8b8_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_p8b8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8b8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p8b8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8b8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p8b8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8b8_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p8b8_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_p8b8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_write_p8b8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p8b8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p8b8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p8b8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b70_0_0(void) {
  int r = lseek(10, 20480, SEEK_END);
  expect_result("r", r, 20480);
  return xerrno(r);
}
// static int test_lseek_write_p8b70_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_p8d0_0_common
// static void setup_lseek_write_p8b70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_1_proc0
// static void setup_lseek_write_p8b70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b70_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8b70_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b70_1_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_write_p8b70_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_common
// static void setup_lseek_write_p8b70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p96e_2_proc0
// static void setup_lseek_write_p8b70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b70_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8b70_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8b0_0_0(void) {
//   int r = lseek(10, 20480, SEEK_END);
//   expect_result("r", r, 20480);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8b70_0_0
// static int test_lseek_write_p8b0_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_p8d6_1_common
// static void setup_lseek_write_p8b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_1_proc0
// static void setup_lseek_write_p8b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8b0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b0_1_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 16384);
  return xerrno(r);
}
// static int test_lseek_write_p8b0_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_2_common
// static void setup_lseek_write_p8b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_6_proc0
// static void setup_lseek_write_p8b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8b0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b0_2_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_write_p8b0_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_p8d6_1_common
static void setup_lseek_write_p8b0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8b0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p8b0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b0_3_0(void) {
  int r = lseek(10, 7385088, SEEK_END);
  expect_result("r", r, 7409664);
  return xerrno(r);
}
// static int test_lseek_write_p8b0_3_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
static void setup_lseek_write_p8b0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7380992, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8b0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8b0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b0_4_0(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_write_p8b0_4_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p8b0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p96e_5_proc0
// static void setup_lseek_write_p8b0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8b0_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b0_5_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 32768);
  return xerrno(r);
}
// static int test_lseek_write_p8b0_5_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
// static void setup_lseek_write_p8b0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p96e_5_proc0
// static void setup_lseek_write_p8b0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8b0_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p8b0_6_0(void) {
  int r = lseek(10, 24576, SEEK_END);
  expect_result("r", r, 53248);
  return xerrno(r);
}
// static int test_lseek_write_p8b0_6_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p8b0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pb8_0_common
static void setup_lseek_write_p8b0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p8b0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8b0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8b0_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8a_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p8a_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p8a_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p8a_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89e_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p89e_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p89e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf4_0_common
// static void setup_lseek_write_p89e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_p89e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p89e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p89e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89e_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p89e_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p89e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf4_3_common
// static void setup_lseek_write_p89e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_p89e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p89e_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p89e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89e_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p89e_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p89e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8be_2_common
// static void setup_lseek_write_p89e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_p89e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p89e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p89e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89e_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p89e_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p89e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8be_3_common
// static void setup_lseek_write_p89e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pa78_2_proc0
// static void setup_lseek_write_p89e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p89e_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p89e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89c_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p89c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p89c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8bc_0_common
// static void setup_lseek_write_p89c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p89c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p89c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p89c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89c_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p89c_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p89c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8bc_1_common
// static void setup_lseek_write_p89c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p89c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p89c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p89c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89c_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p89c_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p89c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8bc_2_common
// static void setup_lseek_write_p89c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p89c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p89c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p89c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p89c_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p89c_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p89c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p970_2_common
// static void setup_lseek_write_p89c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p89c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p89c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p89c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p898_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p898_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p898_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_0_common
// static void setup_lseek_write_p898_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p898_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p898_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p898_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p898_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p898_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p898_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8fe_1_common
// static void setup_lseek_write_p898_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p898_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p898_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p898_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p898_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p898_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p898_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8b8_2_common
// static void setup_lseek_write_p898_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p898_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p898_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p898_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p898_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p898_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p898_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_p8b8_3_common
// static void setup_lseek_write_p898_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p898_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p898_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p898_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p896_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p896_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p896_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p896_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p896_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p9a0_0_proc1
// static void setup_lseek_write_p896_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p896_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p896_1_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static int test_lseek_write_p896_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p896_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p896_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p896_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc1
// static void setup_lseek_write_p896_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pb50_1_final
// static void setup_lseek_write_p896_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p890_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p890_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
static void setup_lseek_write_p890_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_write_p890_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p920_1_proc1
static void setup_lseek_write_p890_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p890_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p890_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p890_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p890_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p890_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p890_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p890_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p890_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p890_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p890_2_0(void) {
  int r = lseek(10, 24576, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static int test_lseek_write_p890_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p890_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_p8d0_0_common
// static void setup_lseek_write_p890_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
// static void setup_lseek_write_p890_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p9a0_0_proc1
// static void setup_lseek_write_p890_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p890_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p890_3_0(void) {
  int r = lseek(10, 12288, SEEK_END);
  expect_result("r", r, 36864);
  return xerrno(r);
}
// static int test_lseek_write_p890_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p890_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p890_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p890_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p890_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p890_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p890_4_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8b70_1_0
// static int test_lseek_write_p890_4_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p890_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p890_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p890_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p890_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p890_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p890_5_0(void) {
  int r = lseek(10, 8192, SEEK_END);
  expect_result("r", r, 20480);
  return xerrno(r);
}
// static int test_lseek_write_p890_5_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p890_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_6_common
// static void setup_lseek_write_p890_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p890_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p890_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p890_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p890_6_0(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_write_p890_6_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p890_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p890_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p890_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb40_2_proc0
// static void setup_lseek_write_p890_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p890_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p88_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_0_0
// static int test_lseek_write_p88_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p88_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p88_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p8be_2_0
// static int test_lseek_write_p88_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p88_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p88_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p87c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p87c_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p87c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
// static void setup_lseek_write_p87c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_p87c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p87c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p87c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p87c_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p87c_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p87c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_3_common
// static void setup_lseek_write_p87c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf8_0_proc0
// static void setup_lseek_write_p87c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p87c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p87c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p878_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p878_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p878_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_p878_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_p878_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p878_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p878_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p878_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p878_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p878_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_p878_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pbf0_0_proc0
// static void setup_lseek_write_p878_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p878_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p878_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p870_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p870_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p870_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_p870_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p870_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p870_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p870_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p870_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p870_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p870_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_1_common
// static void setup_lseek_write_p870_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pae_2_proc0
// static void setup_lseek_write_p870_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p870_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p870_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p868_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p868_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p868_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
static void setup_lseek_write_p868_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p868_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p868_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p868_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p868_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p868_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p868_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p868_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pad8_5_proc0
// static void setup_lseek_write_p868_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p868_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p868_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p868_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p868_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
static void setup_lseek_write_p868_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_lseek_write_p868_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1843200, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p868_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p868_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p868_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p868_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p868_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p868_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_1_common
// static void setup_lseek_write_p868_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa8_0_proc0
// static void setup_lseek_write_p868_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p868_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p868_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p860_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p860_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p860_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p860_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_proc0
// static void setup_lseek_write_p860_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p860_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p860_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p860_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p860_1_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p860_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p860_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p96e_5_proc0
// static void setup_lseek_write_p860_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p860_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p860_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p860_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p860_2_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p860_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pa40_1_common
// static void setup_lseek_write_p860_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p96e_3_proc0
// static void setup_lseek_write_p860_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p860_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p860_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p860_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p860_3_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p860_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p860_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p860_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p860_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p860_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p84_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p84_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p84_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p84_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p84_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p84_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p84_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p83c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p83c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p83c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_p83c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_p83c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p83c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p83c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p83c_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p83c_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p83c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_5_common
// static void setup_lseek_write_p83c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb78_0_proc0
// static void setup_lseek_write_p83c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p83c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p83c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p838_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p838_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p838_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_p838_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p838_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p838_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p838_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p838_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p838_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p838_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_1_common
// static void setup_lseek_write_p838_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pb70_0_proc0
// static void setup_lseek_write_p838_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p838_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p838_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p830_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p830_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p830_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_p830_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p830_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p830_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p830_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p830_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p830_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p830_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_1_common
// static void setup_lseek_write_p830_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pd4_1_proc1
// static void setup_lseek_write_p830_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p830_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_final
// static void setup_lseek_write_p830_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p828_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p828_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p828_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_p868_2_common
// static void setup_lseek_write_p828_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p828_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb50_1_proc1
// static void setup_lseek_write_p828_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p828_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p828_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p828_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p828_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p828_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p828_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p828_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p828_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p828_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p828_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p828_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pac0_0_common
// static void setup_lseek_write_p828_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_proc1
// static void setup_lseek_write_p828_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_0_proc0
// static void setup_lseek_write_p828_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p828_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p820_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p820_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p820_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_1_common
// static void setup_lseek_write_p820_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p820_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pb50_1_proc1
// static void setup_lseek_write_p820_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_write_pbd0_2_final
// static void setup_lseek_write_p820_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p820_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p820_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p820_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p820_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p820_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p820_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p820_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p820_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p820_2_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p820_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pa50_4_common
// static void setup_lseek_write_p820_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p920_1_proc1
// static void setup_lseek_write_p820_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p8d0_0_proc0
// static void setup_lseek_write_p820_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p820_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p80_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_write_pfe_0_0
// static int test_lseek_write_p80_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p80_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
static int test_lseek_write_p7c_0_0(void) {
  int r = lseek(10, 0, 999);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_lseek_write_p7c_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_0_1
// static void setup_lseek_write_p7c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfe_5_common
static void setup_lseek_write_p7c_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p7c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p7c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p7c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p78_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p78_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
static void setup_lseek_write_p78_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p70_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p70_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
// static void setup_lseek_write_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
static void setup_lseek_write_p70_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_write_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p68_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p68_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
static void setup_lseek_write_p68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_write_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p68_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p60_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p60_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_0_1
// static void setup_lseek_write_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_p68_0_proc0
// static void setup_lseek_write_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p60_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p60_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p4_0_1(void) {
//   ssize_t r = write(11, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_0_1
static void setup_lseek_write_p4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_lseek_write_p4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p4_0_final(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal
// static void setup_lseek_write_p4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p4_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_lseek_write_p4_0_common
// static void setup_lseek_write_p4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p4_1_final(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal
// static void setup_lseek_write_p4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p3c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p3c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfe_6_1
// static void setup_lseek_write_p3c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pde_4_common
// static void setup_lseek_write_p3c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_5_proc1
// static void setup_lseek_write_p3c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_6_proc0
// static void setup_lseek_write_p3c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p3c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p38_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p38_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pfc_0_common
// static void setup_lseek_write_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfc_7_proc0
// static void setup_lseek_write_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p30_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p30_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_write_pf8_0_common
// static void setup_lseek_write_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pfe_3_proc1
// static void setup_lseek_write_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_write_pf8_6_proc0
// static void setup_lseek_write_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_5_final
// static void setup_lseek_write_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_write_pfe_3_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p28_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p28_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_0_common
// static void setup_lseek_write_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p28_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p20_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p20_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pfc_7_1
// static void setup_lseek_write_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_write_pbc0_0_common
// static void setup_lseek_write_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_write_pbd0_3_proc0
// static void setup_lseek_write_p20_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_write_pbd0_0_final
// static void setup_lseek_write_p20_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

/*
 * calls: lseek write
 */
// static int test_lseek_write_p0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_write_p7c_0_0
// static int test_lseek_write_p0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_lseek_write_pf8_6_1
// static void setup_lseek_write_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_lseek_write_p4_0_common
// static void setup_lseek_write_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_write_pbd0_0_proc1
// static void setup_lseek_write_p0_0_final(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal
// static void setup_lseek_write_p0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_write_pbd0_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-lseek_write_pfe_0",
    &setup_lseek_write_pfe_0_common,
    { { &setup_lseek_write_pfe_0_proc0 }, { &setup_lseek_write_pfe_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfe_1",
    &setup_lseek_write_pfe_1_common,
    { { &setup_lseek_write_pfe_0_proc0 }, { &setup_lseek_write_pfe_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfe_2",
    &setup_lseek_write_pfe_1_common,
    { { &setup_lseek_write_pfe_2_proc0 }, { &setup_lseek_write_pfe_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfe_3",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pfe_3_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfe_4",
    &setup_lseek_write_pfe_0_common,
    { { &setup_lseek_write_pfe_2_proc0 }, { &setup_lseek_write_pfe_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfe_5",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pfe_5_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfe_6",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pfe_6_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pfe_3_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pfe_3_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_2",
    &setup_lseek_write_pfc_2_common,
    { { &setup_lseek_write_pfc_2_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_3",
    &setup_lseek_write_pfc_2_common,
    { { &setup_lseek_write_pfc_3_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_4",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pfc_4_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_5",
    &setup_lseek_write_pfc_5_common,
    { { &setup_lseek_write_pfc_3_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_6",
    &setup_lseek_write_pfc_5_common,
    { { &setup_lseek_write_pfc_2_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_7",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pfc_8",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pfc_4_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pf8_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_1",
    &setup_lseek_write_pf8_1_common,
    { { &setup_lseek_write_pf8_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_2",
    &setup_lseek_write_pf8_2_common,
    { { &setup_lseek_write_pf8_2_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_3",
    &setup_lseek_write_pf8_3_common,
    { { &setup_lseek_write_pf8_3_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_4",
    &setup_lseek_write_pf8_2_common,
    { { &setup_lseek_write_pf8_3_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_5",
    &setup_lseek_write_pf8_3_common,
    { { &setup_lseek_write_pf8_2_proc0 }, { &setup_lseek_write_pfc_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_6",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_7",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pf8_7_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf8_8",
    &setup_lseek_write_pf8_1_common,
    { { &setup_lseek_write_pf8_7_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf4_0",
    &setup_lseek_write_pf4_0_common,
    { { &setup_lseek_write_pf4_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf4_1",
    &setup_lseek_write_pf4_1_common,
    { { &setup_lseek_write_pf4_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pf4_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf4_2",
    &setup_lseek_write_pf4_0_common,
    { { &setup_lseek_write_pf4_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf4_3",
    &setup_lseek_write_pf4_3_common,
    { { &setup_lseek_write_pf4_3_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf0_0",
    &setup_lseek_write_pf0_0_common,
    { { &setup_lseek_write_pf4_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf0_1",
    &setup_lseek_write_pf0_1_common,
    { { &setup_lseek_write_pf4_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf0_2",
    &setup_lseek_write_pf0_2_common,
    { { &setup_lseek_write_pf4_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pf0_3",
    &setup_lseek_write_pf0_1_common,
    { { &setup_lseek_write_pf4_3_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pe_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pe_1",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pde_0",
    &setup_lseek_write_pde_0_common,
    { { &setup_lseek_write_pde_0_proc0 }, { &setup_lseek_write_pde_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pde_1",
    &setup_lseek_write_pde_1_common,
    { { &setup_lseek_write_pde_0_proc0 }, { &setup_lseek_write_pde_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pde_2",
    &setup_lseek_write_pde_0_common,
    { { &setup_lseek_write_pde_2_proc0 }, { &setup_lseek_write_pde_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pde_3",
    &setup_lseek_write_pde_1_common,
    { { &setup_lseek_write_pde_2_proc0 }, { &setup_lseek_write_pde_0_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pde_4",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pfe_6_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pde_5",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pfe_6_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_1",
    &setup_lseek_write_pfc_5_common,
    { { &setup_lseek_write_pdc_1_proc0 }, { &setup_lseek_write_pdc_1_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_2",
    &setup_lseek_write_pfc_2_common,
    { { &setup_lseek_write_pdc_1_proc0 }, { &setup_lseek_write_pdc_1_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_3",
    &setup_lseek_write_pfc_5_common,
    { { &setup_lseek_write_pdc_3_proc0 }, { &setup_lseek_write_pdc_1_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_4",
    &setup_lseek_write_pfc_2_common,
    { { &setup_lseek_write_pdc_3_proc0 }, { &setup_lseek_write_pdc_1_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_5",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_6",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pdc_7",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_1",
    &setup_lseek_write_pf8_1_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_2",
    &setup_lseek_write_pf8_2_common,
    { { &setup_lseek_write_pdc_1_proc0 }, { &setup_lseek_write_pd8_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_3",
    &setup_lseek_write_pf8_1_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_4",
    &setup_lseek_write_pf8_2_common,
    { { &setup_lseek_write_pdc_3_proc0 }, { &setup_lseek_write_pd8_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_5",
    &setup_lseek_write_pf8_3_common,
    { { &setup_lseek_write_pdc_1_proc0 }, { &setup_lseek_write_pd8_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_6",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd8_7",
    &setup_lseek_write_pf8_3_common,
    { { &setup_lseek_write_pdc_3_proc0 }, { &setup_lseek_write_pd8_2_proc1 } },
    &setup_lseek_write_pfe_0_procfinal,
    &setup_lseek_write_pfe_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd4_0",
    &setup_lseek_write_pd4_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pd4_0_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pf4_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd4_1",
    &setup_lseek_write_pd4_1_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pd4_1_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd4_2",
    &setup_lseek_write_pd4_2_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pd4_2_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pf4_1_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd4_3",
    &setup_lseek_write_pd4_3_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pd4_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd0_0",
    &setup_lseek_write_pd0_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pd4_0_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd0_1",
    &setup_lseek_write_pf0_1_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pd4_0_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd0_2",
    &setup_lseek_write_pd0_2_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pd4_1_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pd0_3",
    &setup_lseek_write_pd0_3_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pd0_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pc_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pf8_6_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pc_1",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pfc_7_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pbf8_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbf8_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbf0_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbf0_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbe_0",
    &setup_lseek_write_pbe_0_common,
    { { &setup_lseek_write_pbe_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbe_1",
    &setup_lseek_write_pbe_1_common,
    { { &setup_lseek_write_pbe_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbd0_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbd0_1",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbd0_2",
    &setup_lseek_write_pbd0_2_common,
    { { &setup_lseek_write_pbd0_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbd0_3",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbc0_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbc0_1",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_pbc0_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbc0_2",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbc0_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pbc0_3",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pb8_0",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_pb8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pb78_0",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb78_1",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb70_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb70_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb6_0",
    &setup_lseek_write_pbe_0_common,
    { { &setup_lseek_write_pb6_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb6_1",
    &setup_lseek_write_pbe_1_common,
    { { &setup_lseek_write_pb6_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb50_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb50_1",
    &setup_lseek_write_pb50_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb50_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb50_2",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pb50_2_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb40_0",
    &setup_lseek_write_pb40_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb50_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb40_1",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb40_2",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pb0_0",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_pb8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pbf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_paf8_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf8_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf8_2",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf8_3",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf0_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf0_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf0_2",
    &setup_lseek_write_paf0_2_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_paf0_3",
    &setup_lseek_write_paf0_3_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pae_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pae_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pae_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pae_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pae_2",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pae_3",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pad8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_1",
    &setup_lseek_write_pad8_1_common,
    { { &setup_lseek_write_pad8_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pad8_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_2",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pad8_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_3",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_pad8_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_4",
    &setup_lseek_write_pad8_4_common,
    { { &setup_lseek_write_pad8_4_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_pad8_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_5",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pad8_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pad8_6",
    &setup_lseek_write_pad8_6_common,
    { { &setup_lseek_write_pad8_6_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_6_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_0",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pac0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_1",
    &setup_lseek_write_pac0_1_common,
    { { &setup_lseek_write_pad8_4_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_2",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pac0_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_3",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pac0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_4",
    &setup_lseek_write_pac0_4_common,
    { { &setup_lseek_write_pac0_4_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_5",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pac0_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_6_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pac0_6",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pa8_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pa8_1",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_pa78_0",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa78_1",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa78_2",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa78_3",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa70_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa70_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa70_2",
    &setup_lseek_write_paf0_2_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa70_3",
    &setup_lseek_write_paf0_3_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa6_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa6_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa6_2",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa6_3",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_0",
    &setup_lseek_write_pad8_1_common,
    { { &setup_lseek_write_pa50_0_proc0 }, { &setup_lseek_write_pa50_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_1",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa8_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_2",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pa50_2_proc0 }, { &setup_lseek_write_pa50_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_3",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_4",
    &setup_lseek_write_pa50_4_common,
    { { &setup_lseek_write_pa50_0_proc0 }, { &setup_lseek_write_pa50_4_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pad8_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_5",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa50_5_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa50_6",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_0",
    &setup_lseek_write_pa40_0_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pa40_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_1",
    &setup_lseek_write_pa40_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa50_5_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_2",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_3",
    &setup_lseek_write_pad8_6_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pa8_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pa40_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_4",
    &setup_lseek_write_pad8_6_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa8_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pa40_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_5",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa40_6",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pa40_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa0_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_pa0_1",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_paf8_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9fc_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9fc_1",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9f8_0",
    &setup_lseek_write_p9f8_0_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9f8_1",
    &setup_lseek_write_p9f8_1_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9f0_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9f0_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9ec_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_p9ec_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9ec_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9ec_1",
    &setup_lseek_write_pb50_1_common,
    { { &setup_lseek_write_p9ec_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_p9ec_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9ec_2",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pad8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9ec_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9ec_3",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9ec_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9e4_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9ec_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9e4_1",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pac0_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9e4_2",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9e4_3",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_pbc0_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9c_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p9bc_0",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9bc_1",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9b8_0",
    &setup_lseek_write_p9f8_0_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9b8_1",
    &setup_lseek_write_p9f8_1_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9b0_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9b0_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9a8_0",
    &setup_lseek_write_p9a8_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa50_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9a8_1",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa50_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9a8_2",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9a0_0",
    &setup_lseek_write_pad8_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_p9a0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9a0_1",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa50_4_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p9a0_2",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p98_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p9fc_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p97c_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p97c_1",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_p97c_1_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p97c_2",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p97c_3",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_p97c_1_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p978_0",
    &setup_lseek_write_p978_0_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p978_1",
    &setup_lseek_write_p978_1_common,
    { { &setup_lseek_write_p978_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p978_2",
    &setup_lseek_write_p978_2_common,
    { { &setup_lseek_write_p978_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p978_3",
    &setup_lseek_write_paf0_3_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p970_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p970_1",
    &setup_lseek_write_pbe_1_common,
    { { &setup_lseek_write_p970_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p970_2",
    &setup_lseek_write_p970_2_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p970_3",
    &setup_lseek_write_pbe_0_common,
    { { &setup_lseek_write_p970_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_0",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_p96e_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_1",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_p96e_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p96e_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_2",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_p96e_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_3",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_p96e_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p96e_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_4",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pad8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p96e_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_5",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_p96e_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p96e_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p96e_6",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pad8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p96e_6_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_0",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_p962_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p962_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_1",
    &setup_lseek_write_pac0_4_common,
    { { &setup_lseek_write_pac0_4_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p962_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_2",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pac0_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p962_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_3",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_p962_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p962_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_4",
    &setup_lseek_write_p962_4_common,
    { { &setup_lseek_write_p962_4_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_p962_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_5",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pad8_6_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p962_5_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p962_6",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pad8_6_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p962_6_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p94_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p94_1",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p93c_0",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p93c_1",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_p93c_1_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p93c_2",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_p93c_1_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p93c_3",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p938_0",
    &setup_lseek_write_p978_0_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p938_1",
    &setup_lseek_write_p978_2_common,
    { { &setup_lseek_write_p938_1_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p938_2",
    &setup_lseek_write_paf0_3_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p938_3",
    &setup_lseek_write_p978_1_common,
    { { &setup_lseek_write_p938_1_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p930_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p930_1",
    &setup_lseek_write_pbe_0_common,
    { { &setup_lseek_write_p938_1_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p930_2",
    &setup_lseek_write_pbe_1_common,
    { { &setup_lseek_write_p938_1_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p930_3",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_0",
    &setup_lseek_write_p928_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_p928_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_1",
    &setup_lseek_write_p928_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_p9a0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_p928_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_2",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa8_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p928_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_3",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_4",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_p928_4_proc0 }, { &setup_lseek_write_p928_4_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p928_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_5",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p96e_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p928_6",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_0",
    &setup_lseek_write_pb40_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb50_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_1",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_p920_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_2",
    &setup_lseek_write_p920_2_common,
    { { &setup_lseek_write_pa50_4_proc1 }, { &setup_lseek_write_pa50_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p920_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_3",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p928_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_4",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_pa50_0_proc0 }, { &setup_lseek_write_pa50_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p920_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_5",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p920_6",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p90_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p97c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p90_1",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p928_1_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8fe_0",
    &setup_lseek_write_p8fe_0_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8fe_1",
    &setup_lseek_write_p8fe_1_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8fc_0",
    &setup_lseek_write_pd4_1_common,
    { { &setup_lseek_write_p978_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8fc_1",
    &setup_lseek_write_p8fc_1_common,
    { { &setup_lseek_write_p978_1_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f8_0",
    &setup_lseek_write_p8fe_0_common,
    { { &setup_lseek_write_pae_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f8_1",
    &setup_lseek_write_p8fe_1_common,
    { { &setup_lseek_write_pae_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f6_0",
    &setup_lseek_write_p8f6_0_common,
    { { &setup_lseek_write_pad8_4_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8f6_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f6_1",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f6_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f6_2",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_p8f6_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f6_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f6_3",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f6_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f0_0",
    &setup_lseek_write_p8f0_0_common,
    { { &setup_lseek_write_p96e_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f0_1",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f6_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f0_2",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_p8f0_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f0_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8f0_3",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f0_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8e_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8de_0",
    &setup_lseek_write_pf4_0_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8de_1",
    &setup_lseek_write_pf4_3_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8dc_0",
    &setup_lseek_write_pd4_1_common,
    { { &setup_lseek_write_p938_1_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8dc_1",
    &setup_lseek_write_p8fc_1_common,
    { { &setup_lseek_write_p938_1_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d8_0",
    &setup_lseek_write_p8fe_0_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d8_1",
    &setup_lseek_write_p8fe_1_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d6_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pa8_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8d6_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d6_1",
    &setup_lseek_write_p8d6_1_common,
    { { &setup_lseek_write_p928_4_proc1 }, { &setup_lseek_write_p8d6_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d6_2",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_p920_1_proc1 }, { &setup_lseek_write_pa8_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8d6_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d0_0",
    &setup_lseek_write_p8d0_0_common,
    { { &setup_lseek_write_p8d0_0_proc0 }, { &setup_lseek_write_p928_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d0_1",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8f6_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8d0_2",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_p920_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8d0_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8c_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8fe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p8be_0",
    &setup_lseek_write_p8fe_0_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8be_1",
    &setup_lseek_write_p8fe_1_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8be_2",
    &setup_lseek_write_p8be_2_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8be_3",
    &setup_lseek_write_p8be_3_common,
    { { &setup_lseek_write_paf8_2_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8bc_0",
    &setup_lseek_write_p8bc_0_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8bc_1",
    &setup_lseek_write_p8bc_1_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8bc_2",
    &setup_lseek_write_p8bc_2_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8bc_3",
    &setup_lseek_write_p970_2_common,
    { { &setup_lseek_write_paf0_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b8_0",
    &setup_lseek_write_p8fe_0_common,
    { { &setup_lseek_write_pae_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b8_1",
    &setup_lseek_write_p8fe_1_common,
    { { &setup_lseek_write_pae_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b8_2",
    &setup_lseek_write_p8b8_2_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b8_3",
    &setup_lseek_write_p8b8_3_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b70_0",
    &setup_lseek_write_p8d0_0_common,
    { { &setup_lseek_write_pad8_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8b70_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b70_1",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_p96e_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8b70_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_0",
    &setup_lseek_write_p8d6_1_common,
    { { &setup_lseek_write_pad8_1_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8b70_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_1",
    &setup_lseek_write_pad8_2_common,
    { { &setup_lseek_write_pad8_6_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8b0_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_2",
    &setup_lseek_write_p8d6_1_common,
    { { &setup_lseek_write_p8b0_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8b0_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_3",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_p8b0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8b0_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_4",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_p96e_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8b0_4_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_5",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_p96e_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8b0_5_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8b0_6",
    &setup_lseek_write_pb8_0_common,
    { { &setup_lseek_write_p8b0_6_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8b0_6_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8a_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p8a_1",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p89e_0",
    &setup_lseek_write_pf4_0_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89e_1",
    &setup_lseek_write_pf4_3_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89e_2",
    &setup_lseek_write_p8be_2_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89e_3",
    &setup_lseek_write_p8be_3_common,
    { { &setup_lseek_write_pa78_2_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89c_0",
    &setup_lseek_write_p8bc_0_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89c_1",
    &setup_lseek_write_p8bc_1_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89c_2",
    &setup_lseek_write_p8bc_2_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p89c_3",
    &setup_lseek_write_p970_2_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p898_0",
    &setup_lseek_write_p8fe_0_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p898_1",
    &setup_lseek_write_p8fe_1_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p898_2",
    &setup_lseek_write_p8b8_2_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p898_3",
    &setup_lseek_write_p8b8_3_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p896_0",
    &setup_lseek_write_p896_0_common,
    { { &setup_lseek_write_pa50_4_proc1 }, { &setup_lseek_write_p9a0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p896_1",
    &setup_lseek_write_p896_1_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pa50_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pb50_1_final,
    { { &test_lseek_write_p896_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_0",
    &setup_lseek_write_p890_0_common,
    { { &setup_lseek_write_p920_1_proc1 }, { &setup_lseek_write_p890_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_1",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pa50_4_proc1 }, { &setup_lseek_write_pa50_4_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_2",
    &setup_lseek_write_p8d0_0_common,
    { { &setup_lseek_write_pa50_0_proc0 }, { &setup_lseek_write_p9a0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_p890_2_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_3",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pa50_4_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p890_3_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_4",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8b70_1_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_5",
    &setup_lseek_write_pad8_6_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p890_5_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p890_6",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pb40_2_proc0 }, { &setup_lseek_write_pb40_2_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p890_6_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p88_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8be_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p88_1",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p8be_2_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p87c_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p87c_1",
    &setup_lseek_write_pfe_3_common,
    { { &setup_lseek_write_pbf8_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p878_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p878_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pbf0_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p870_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p870_1",
    &setup_lseek_write_pf8_1_common,
    { { &setup_lseek_write_pae_2_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p868_0",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_p868_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p868_1",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pad8_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p868_2",
    &setup_lseek_write_p868_2_common,
    { { &setup_lseek_write_p868_2_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p868_3",
    &setup_lseek_write_pbd0_1_common,
    { { &setup_lseek_write_pa8_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p860_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p860_1",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_p96e_5_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p860_2",
    &setup_lseek_write_pa40_1_common,
    { { &setup_lseek_write_p96e_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p860_3",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p84_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p83c_0",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p83c_1",
    &setup_lseek_write_pde_5_common,
    { { &setup_lseek_write_pb78_0_proc0 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p838_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p838_1",
    &setup_lseek_write_pfc_1_common,
    { { &setup_lseek_write_pb70_0_proc0 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p830_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p830_1",
    &setup_lseek_write_pf8_1_common,
    { { &setup_lseek_write_pd4_1_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_3_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p828_0",
    &setup_lseek_write_p868_2_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb50_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p828_1",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p828_2",
    &setup_lseek_write_pac0_0_common,
    { { &setup_lseek_write_pa50_4_proc1 }, { &setup_lseek_write_pa50_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p820_0",
    &setup_lseek_write_pbc0_1_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pb50_1_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_2_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p820_1",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p820_2",
    &setup_lseek_write_pa50_4_common,
    { { &setup_lseek_write_p920_1_proc1 }, { &setup_lseek_write_p8d0_0_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p80_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_3_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_pfe_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p7c_0",
    &setup_lseek_write_pfe_5_common,
    { { &setup_lseek_write_p7c_0_proc0 }, { &setup_lseek_write_pfe_5_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p78_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_p78_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p70_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_p70_0_proc0 }, { &setup_lseek_write_pfe_3_proc1 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p68_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_p68_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p60_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_p68_0_proc0 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p4_0",
    &setup_lseek_write_p4_0_common,
    { { &setup_lseek_write_pbd0_0_proc1 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_procfinal,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_0_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p4_1",
    &setup_lseek_write_p4_0_common,
    { { &setup_lseek_write_pbd0_0_proc1 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_procfinal,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 0, "write" } },
    &cleanup },
  { "fs-lseek_write_p3c_0",
    &setup_lseek_write_pde_4_common,
    { { &setup_lseek_write_pfe_5_proc1 }, { &setup_lseek_write_pfe_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfe_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p38_0",
    &setup_lseek_write_pfc_0_common,
    { { &setup_lseek_write_pfe_3_proc1 }, { &setup_lseek_write_pfc_7_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p30_0",
    &setup_lseek_write_pf8_0_common,
    { { &setup_lseek_write_pfe_3_proc1 }, { &setup_lseek_write_pf8_6_proc0 } },
    &setup_lseek_write_pfe_3_procfinal,
    &setup_lseek_write_pfe_5_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p28_0",
    &setup_lseek_write_pbd0_0_common,
    { { &setup_lseek_write_pbd0_0_proc1 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p20_0",
    &setup_lseek_write_pbc0_0_common,
    { { &setup_lseek_write_pbd0_0_proc1 }, { &setup_lseek_write_pbd0_3_proc0 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_final,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pfc_7_1, 1, "write" } },
    &cleanup },
  { "fs-lseek_write_p0_0",
    &setup_lseek_write_p4_0_common,
    { { &setup_lseek_write_pbd0_0_proc1 }, { &setup_lseek_write_pbd0_0_proc1 } },
    &setup_lseek_write_pbd0_0_procfinal,
    &setup_lseek_write_pbd0_0_procfinal,
    { { &test_lseek_write_p7c_0_0, 0, "lseek" },
      { &test_lseek_write_pf8_6_1, 1, "write" } },
    &cleanup },
//+++ common
  {}
};
