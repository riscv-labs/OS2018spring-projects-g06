//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: open pwrite
 */
static int test_open_pwrite_pfc_0_0(void) {
  int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
static int test_open_pwrite_pfc_0_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 0);
  expect_result("r", r, -1);
  expect_errno(29);
  return xerrno(r);
}
static void setup_open_pwrite_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pfc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_pwrite_pfc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_pwrite_pfc_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_open_pwrite_pfc_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pfc_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
static void setup_open_pwrite_pfc_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_open_pwrite_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfc_2_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pfc_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pfc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfc_0_common
static void setup_open_pwrite_pfc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_open_pwrite_pfc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pfc_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pfc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfc_3_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pfc_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pfc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfc_1_common
// static void setup_open_pwrite_pfc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pfc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pfc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pfc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfa_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
static int test_open_pwrite_pfa_0_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 0);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pfa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pfa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_open_pwrite_pfa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_open_pwrite_pfa_0_final(void) {
  unlink("__i0");
}
static void setup_open_pwrite_pfa_0_procfinal(void) {
  
}

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfa_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
static int test_open_pwrite_pfa_1_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 4096);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pfa_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pfa_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9347072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pfa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pfa_1_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_open_pwrite_pfa_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfa_2_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pfa_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pfa_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_0_common
static void setup_open_pwrite_pfa_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pfa_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pfa_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pfa_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pfa_3_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
static int test_open_pwrite_pfa_3_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 12288);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pfa_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pfa_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pfa_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pfa_3_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_open_pwrite_pfa_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pf8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pf8_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pf8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pf8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pf8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pf8_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 34263040, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pf8_0_proc0
// static void setup_open_pwrite_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pf8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pf8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pf8_2_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pf8_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pf8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_3_common
// static void setup_open_pwrite_pf8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pf8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pf8_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pf8_3_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pf8_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_1_common
// static void setup_open_pwrite_pf8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pf8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pf8_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pf0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
static int test_open_pwrite_pf0_0_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 0);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_open_pwrite_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_0_common
// static void setup_open_pwrite_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pec_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pec_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfc_0_common
// static void setup_open_pwrite_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pec_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pec_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfc_1_common
// static void setup_open_pwrite_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pec_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pec_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pec_2_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pec_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfc_0_common
// static void setup_open_pwrite_pec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pec_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pec_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pec_3_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pec_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfc_1_common
// static void setup_open_pwrite_pec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pec_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pec_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pea_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pea_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_pea_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 34263040, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pf8_0_proc0
// static void setup_open_pwrite_pea_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_pea_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pea_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pea_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_0_common
// static void setup_open_pwrite_pea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pea_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 61440, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pea_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pea_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pea_2_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pea_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_pea_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pea_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pea_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_pea_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pea_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pea_3_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pea_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pea_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_0_common
// static void setup_open_pwrite_pea_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pea_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_pea_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pea_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pe8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pe8_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pe8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_0_common
// static void setup_open_pwrite_pe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pe8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pe8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pe8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pe8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pe8_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pe8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_1_common
// static void setup_open_pwrite_pe8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_pe8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pe8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pe8_2_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pe8_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pe8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_0_common
// static void setup_open_pwrite_pe8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pe8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_pe8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pe8_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pe8_3_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
static int test_open_pwrite_pe8_3_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 16384);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pe8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pe8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pe8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_3_proc0
// static void setup_open_pwrite_pe8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pe8_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pe0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_0
// static int test_open_pwrite_pe0_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_0_common
// static void setup_open_pwrite_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pe0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
static int test_open_pwrite_pdf0_0_0(void) {
  int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static int test_open_pwrite_pdf0_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pdf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pdf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pdf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
static void setup_open_pwrite_pdf0_0_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_open_pwrite_pdf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdf0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pdf0_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pdf0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pdf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pdf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pdf0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pdf0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdf0_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pdf0_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pdf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pdf0_1_common
// static void setup_open_pwrite_pdf0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pdf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pdf0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pdf0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdf0_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pdf0_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pdf0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pdf0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pdf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pdf0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pdf0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdde_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
static int test_open_pwrite_pdde_0_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 28672);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pdde_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval12, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval13, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pdde_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_pdde_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pdde_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pdde_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdde_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pdde_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
static void setup_open_pwrite_pdde_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pdde_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pdde_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pdde_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pdde_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdc8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
static int test_open_pwrite_pdc8_0_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 8192);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pdc8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pdc8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1851392, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pdc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pdc8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pdc8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pdc8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
static int test_open_pwrite_pdc8_1_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 20480);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pdc8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pdc8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_pdc8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pdc8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pdc8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pda_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pda_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_pda_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pe8_3_common
// static void setup_open_pwrite_pda_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pda_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pda_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pda_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd70_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd70_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pd70_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pd70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pd70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pd70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pd70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd70_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd70_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pd70_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pd70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pd70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pd70_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pd70_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd70_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd70_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pd70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pdf0_1_common
// static void setup_open_pwrite_pd70_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pd70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pd70_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pd70_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd70_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd70_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pd70_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pd70_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pd70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pd70_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pd70_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd5c_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd5c_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 12288);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_3_1
static void setup_open_pwrite_pd5c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pd5c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pd5c_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4677632, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pd5c_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pd5c_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd5c_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd5c_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 12288);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_3_1
static void setup_open_pwrite_pd5c_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pd5c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pd5c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_3_proc0
// static void setup_open_pwrite_pd5c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pd5c_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd48_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd48_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pd48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_0_common
// static void setup_open_pwrite_pd48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pd48_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36638720, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pd48_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pd48_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd48_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd48_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_pd48_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pd48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_pd48_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pd48_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pd48_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pd2_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pd2_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_pd2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pe8_3_common
// static void setup_open_pwrite_pd2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pd2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pd2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pd2_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
static int test_open_pwrite_pcf_0_0(void) {
  int r = open("__f0", O_RDWR | O_CREAT, 0666);
  
  return xerrno(r);
}
// static int test_open_pwrite_pcf_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pcf_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pcf_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pcf_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pcf_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pcf_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcf_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcf_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pcf_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pcf_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pcf_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pcf_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pcf_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcf_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcf_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pcf_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcf_0_common
// static void setup_open_pwrite_pcf_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pcf_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pcf_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pcf_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcf_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcf_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pcf_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcf_1_common
// static void setup_open_pwrite_pcf_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pcf_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pcf_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pcf_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcdc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcdc_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 20480);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_1_1
static void setup_open_pwrite_pcdc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pcdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_pcdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pcdc_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pcdc_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcdc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcdc_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_pcdc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pcdc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_pcdc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pcdc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pcdc_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcdc_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcdc_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_pcdc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pcdc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_pcdc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pcdc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pcdc_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pcdc_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pcdc_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
// static void setup_open_pwrite_pcdc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcdc_2_common
// static void setup_open_pwrite_pcdc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_pcdc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pcdc_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pcdc_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pccc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pccc_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_pccc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pccc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_pccc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pccc_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_pccc_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pccc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pccc_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 20480);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_1_1
static void setup_open_pwrite_pccc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pccc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_pccc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pccc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pccc_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pccc_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pccc_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_pccc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pccc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_pccc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pccc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pccc_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pccc_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
static int test_open_pwrite_pccc_3_1(void) {
  ssize_t r = pwrite(10, dataval0, 4096, 24576);
  expect_result("r", r, 4096);
  return xerrno(r);
}
static void setup_open_pwrite_pccc_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_pccc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pccc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pccc_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pccc_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pca_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pca_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
static void setup_open_pwrite_pca_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pca_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pca_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pca_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pca_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc7_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc7_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pc7_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pc7_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pc7_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pc7_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pc7_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc7_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc7_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pc7_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pc7_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pc7_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pc7_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pc7_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc7_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc7_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pc7_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc7_0_common
// static void setup_open_pwrite_pc7_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pc7_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pc7_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pc7_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc7_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc7_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_pc7_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc7_1_common
// static void setup_open_pwrite_pc7_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pc7_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pc7_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_pc7_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc58_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc58_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
static void setup_open_pwrite_pc58_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pc58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_pc58_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_pc58_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc58_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc58_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
// static void setup_open_pwrite_pc58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc58_0_common
// static void setup_open_pwrite_pc58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pdde_1_proc0
// static void setup_open_pwrite_pc58_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_pc58_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc58_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc58_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 12288);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_3_1
static void setup_open_pwrite_pc58_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pc58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_pc58_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pc58_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc58_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc58_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
static void setup_open_pwrite_pc58_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_pc58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pdde_1_proc0
// static void setup_open_pwrite_pc58_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pc58_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc48_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc48_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pc48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_1_common
// static void setup_open_pwrite_pc48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9347072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_1_proc0
// static void setup_open_pwrite_pc48_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_pc48_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc48_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc48_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_pc48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_1_common
// static void setup_open_pwrite_pc48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_pc48_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pc48_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc48_2_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc48_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
// static void setup_open_pwrite_pc48_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pca_0_common
// static void setup_open_pwrite_pc48_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc48_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_pc48_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pc48_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc48_3_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc48_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
// static void setup_open_pwrite_pc48_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd48_1_common
// static void setup_open_pwrite_pc48_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc48_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_pc48_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_pc48_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pc2_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_pc2_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_pc2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pca_0_common
// static void setup_open_pwrite_pc2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pc2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pc2_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pbe_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pbe_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pbe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_pwrite_pbe_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pbe_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pbe_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_pbe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_pwrite_pbe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_pbe_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pbb8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pbb8_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
static void setup_open_pwrite_pbb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_open_pwrite_pbb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 11874304, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_pbb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pbb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pbb8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pbb8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pbb8_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
// static void setup_open_pwrite_pbb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_pbb8_0_common
// static void setup_open_pwrite_pbb8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pdde_1_proc0
// static void setup_open_pwrite_pbb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pbb8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pbb8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pb90_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pb90_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_pb90_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_pwrite_pb90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_pb90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pb90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pb90_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pb90_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pb90_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 24576);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pccc_3_1
// static void setup_open_pwrite_pb90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_pbb8_0_common
// static void setup_open_pwrite_pb90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pccc_3_proc0
// static void setup_open_pwrite_pb90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pb90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_pb90_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pb4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pb4_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
static void setup_open_pwrite_pb4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_open_pwrite_pb4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pb4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pb4_0_final(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal
// static void setup_open_pwrite_pb4_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_pa4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdf0_0_0
// static int test_open_pwrite_pa4_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_pa4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_pwrite_pb4_0_common
// static void setup_open_pwrite_pa4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pa4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_pa4_0_final(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal
// static void setup_open_pwrite_pa4_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p9e_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p9e_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_p9e_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_pwrite_p9e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p9e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p9e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p9e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p9e_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p9e_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p9e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_pwrite_p9e_0_common
// static void setup_open_pwrite_p9e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p9e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p9e_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p9e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p9b8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p9b8_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
// static void setup_open_pwrite_p9b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_pbb8_0_common
// static void setup_open_pwrite_p9b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_p9b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p9b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p9b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p9b8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p9b8_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
// static void setup_open_pwrite_p9b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_pbb8_0_common
// static void setup_open_pwrite_p9b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pdde_1_proc0
// static void setup_open_pwrite_p9b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p9b8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p9b8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p990_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p990_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p990_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_pb90_0_common
// static void setup_open_pwrite_p990_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_p990_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p990_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p990_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p990_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p990_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_p990_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_pwrite_p990_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_p990_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p990_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p990_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p94_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p94_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_pwrite_pb4_0_common
// static void setup_open_pwrite_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p94_0_final(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal
// static void setup_open_pwrite_p94_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p84_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pcf_0_0
// static int test_open_pwrite_p84_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p84_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_pwrite_pb4_0_common
// static void setup_open_pwrite_p84_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p84_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p84_0_final(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal
// static void setup_open_pwrite_p84_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
static int test_open_pwrite_p7e_0_0(void) {
  int r = open("__f0", O_RDWR | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static int test_open_pwrite_p7e_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_p7e_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p7e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p7e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p7e_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pdf0_0_final
// static void setup_open_pwrite_p7e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p7e_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p7e_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_p7e_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p7e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p7e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p7e_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pdf0_0_final
// static void setup_open_pwrite_p7e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p7e_2_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p7e_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_p7e_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p7e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p7e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p7e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p7e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p7e_3_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p7e_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p7e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pdf0_1_common
// static void setup_open_pwrite_p7e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p7e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p7e_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p7e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p7bc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p7bc_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 16384);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pe8_3_1
static void setup_open_pwrite_p7bc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_p7bc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 39043072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p7bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p7bc_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p7bc_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p7bc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p7bc_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
static void setup_open_pwrite_p7bc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval12, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval13, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval14, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p7bc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pdde_1_proc0
// static void setup_open_pwrite_p7bc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p7bc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p7bc_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p790_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p790_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_p790_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p790_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_p790_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p790_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p790_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p790_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p790_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 8192);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_0_1
static void setup_open_pwrite_p790_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_pwrite_p790_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p790_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p790_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p790_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p74_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p74_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pe8_3_common
// static void setup_open_pwrite_p74_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p74_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p74_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p6e_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p6e_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p6e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd70_0_common
// static void setup_open_pwrite_p6e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p6e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p6e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p6e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p6e_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p6e_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p6e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd70_1_common
// static void setup_open_pwrite_p6e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p6e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p6e_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_p6e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p6e_2_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p6e_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p6e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pdf0_1_common
// static void setup_open_pwrite_p6e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p6e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p6e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p6e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p6e_3_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p6e_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p6e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pdf0_0_common
// static void setup_open_pwrite_p6e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p6e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p6e_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pdf0_0_final
// static void setup_open_pwrite_p6e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p6b8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p6b8_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 12288);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_3_1
// static void setup_open_pwrite_p6b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd5c_0_common
// static void setup_open_pwrite_p6b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_p6b8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 1150976, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p6b8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p6b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p6b8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p6b8_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 12288);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_3_1
// static void setup_open_pwrite_p6b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd5c_1_common
// static void setup_open_pwrite_p6b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p6b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_3_proc0
// static void setup_open_pwrite_p6b8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p6b8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p690_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p690_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p690_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_0_common
// static void setup_open_pwrite_p690_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p690_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_p690_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p690_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p690_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p690_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
// static void setup_open_pwrite_p690_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd48_1_common
// static void setup_open_pwrite_p690_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p690_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_p690_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p690_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p64_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p7e_0_0
// static int test_open_pwrite_p64_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pe8_3_common
// static void setup_open_pwrite_p64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p64_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p64_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
static int test_open_pwrite_p5e_0_0(void) {
  int r = open("__f0", O_RDWR, 0666);
  
  return xerrno(r);
}
// static int test_open_pwrite_p5e_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p5e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcf_0_common
// static void setup_open_pwrite_p5e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p5e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p5e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p5e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5e_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5e_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p5e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcf_1_common
// static void setup_open_pwrite_p5e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p5e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p5e_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_p5e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5e_2_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5e_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p5e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcf_0_common
// static void setup_open_pwrite_p5e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p5e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p5e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p5e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5e_3_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5e_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p5e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcf_1_common
// static void setup_open_pwrite_p5e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p5e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p5e_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_p5e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5b8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5b8_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 8192);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_0_1
static void setup_open_pwrite_p5b8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p5b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_p5b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p5b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p5b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5b8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5b8_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_p5b8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p5b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_p5b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p5b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_p5b8_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5b8_2_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5b8_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_p5b8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p5b8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_p5b8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p5b8_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p5b8_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p5b8_3_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p5b8_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 20480);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_1_1
static void setup_open_pwrite_p5b8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p5b8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_p5b8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p5b8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p5b8_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p598_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p598_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
static void setup_open_pwrite_p598_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p598_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 61440, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pea_1_proc1
// static void setup_open_pwrite_p598_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p598_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p598_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p598_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p598_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 24576);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pccc_3_1
static void setup_open_pwrite_p598_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p598_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pccc_3_proc0
// static void setup_open_pwrite_p598_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p598_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_pwrite_pfa_1_final
// static void setup_open_pwrite_p598_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p598_2_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p598_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p598_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pcdc_2_common
static void setup_open_pwrite_p598_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2195456, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p598_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p598_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p598_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p598_3_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p598_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 8192);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_0_1
static void setup_open_pwrite_p598_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p598_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_p790_1_proc0
// static void setup_open_pwrite_p598_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p598_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p598_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p54_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p54_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p54_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pca_0_common
// static void setup_open_pwrite_p54_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p54_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p54_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p54_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4e_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4e_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p4e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc7_0_common
// static void setup_open_pwrite_p4e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p4e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p4e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p4e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4e_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4e_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p4e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc7_1_common
// static void setup_open_pwrite_p4e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p4e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p4e_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_p4e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4e_2_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4e_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p4e_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc7_0_common
// static void setup_open_pwrite_p4e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p4e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p4e_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p4e_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4e_3_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4e_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p4e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pc7_1_common
// static void setup_open_pwrite_p4e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p4e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p4e_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_1_final
// static void setup_open_pwrite_p4e_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4b0_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4b0_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 28672);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdde_0_1
static void setup_open_pwrite_p4b0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p4b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p4b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_p4b0_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p4b0_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4b0_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4b0_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 20480);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pdc8_1_1
// static void setup_open_pwrite_p4b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pe8_3_common
// static void setup_open_pwrite_p4b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p4b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_p4b0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p4b0_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4b0_2_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4b0_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p4b0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pfa_0_common
// static void setup_open_pwrite_p4b0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_p4b0_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p4b0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p4b0_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p4b0_3_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p4b0_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 24576);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pccc_3_1
static void setup_open_pwrite_p4b0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_pwrite_p4b0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p4b0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pccc_3_proc0
// static void setup_open_pwrite_p4b0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p4b0_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p490_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p490_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p490_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_1_common
// static void setup_open_pwrite_p490_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p490_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_p490_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p490_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p490_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p490_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p490_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pf8_0_common
// static void setup_open_pwrite_p490_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p490_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_0_proc0
// static void setup_open_pwrite_p490_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p490_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p490_2_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p490_2_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
// static void setup_open_pwrite_p490_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pd48_1_common
// static void setup_open_pwrite_p490_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p490_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_p490_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_3_final
// static void setup_open_pwrite_p490_2_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p490_3_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p490_3_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 4096);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_1_1
// static void setup_open_pwrite_p490_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pca_0_common
// static void setup_open_pwrite_p490_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p490_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pd48_1_proc1
// static void setup_open_pwrite_p490_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p490_3_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p44_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p5e_0_0
// static int test_open_pwrite_p44_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p44_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_pwrite_pca_0_common
// static void setup_open_pwrite_p44_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p44_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p44_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
static int test_open_pwrite_p38_0_0(void) {
  int r = open("__f0", O_RDWR, 0666);
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
// static int test_open_pwrite_p38_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
static void setup_open_pwrite_p38_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_pwrite_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p38_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p38_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_pwrite_p38_0_common
// static void setup_open_pwrite_p38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p38_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p38_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p34_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p34_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_p34_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_open_pwrite_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9347072, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_1_proc0
// static void setup_open_pwrite_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p34_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p34_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p34_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p34_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p34_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_open_pwrite_p34_0_common
// static void setup_open_pwrite_p34_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_p34_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p34_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p34_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p30_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p30_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
static void setup_open_pwrite_p30_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_pwrite_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 36270080, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pe8_0_proc1
// static void setup_open_pwrite_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p30_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p30_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p30_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p30_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_p30_0_common
// static void setup_open_pwrite_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p30_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p30_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p2_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p2_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_pwrite_pb4_0_common
// static void setup_open_pwrite_p2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p2_0_final(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal
// static void setup_open_pwrite_p2_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p18_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p18_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_pwrite_p38_0_common
// static void setup_open_pwrite_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc0
// static void setup_open_pwrite_p18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p18_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p18_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(29);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfc_0_1
// static void setup_open_pwrite_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_pwrite_p38_0_common
// static void setup_open_pwrite_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_0_proc1
// static void setup_open_pwrite_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_pwrite_pfc_2_proc0
// static void setup_open_pwrite_p18_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_final
// static void setup_open_pwrite_p18_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_pwrite_pfc_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p14_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p14_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p14_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_open_pwrite_p34_0_common
// static void setup_open_pwrite_p14_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_p14_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p14_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p14_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p14_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p14_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p14_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_open_pwrite_p34_0_common
// static void setup_open_pwrite_p14_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p14_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_p14_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p14_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p10_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p10_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_p30_0_common
// static void setup_open_pwrite_p10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
static void setup_open_pwrite_p10_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_pwrite_p10_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p10_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p10_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p10_1_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pfa_0_1
// static void setup_open_pwrite_p10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_pwrite_p30_0_common
// static void setup_open_pwrite_p10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_pwrite_pfa_2_proc0
// static void setup_open_pwrite_p10_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_pwrite_pfa_0_final
// static void setup_open_pwrite_p10_1_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

/*
 * calls: open pwrite
 */
// static int test_open_pwrite_p0_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_p38_0_0
// static int test_open_pwrite_p0_0_1(void) {
//   ssize_t r = pwrite(10, dataval0, 4096, 0);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_open_pwrite_pf0_0_1
// static void setup_open_pwrite_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_pwrite_pb4_0_common
// static void setup_open_pwrite_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_pwrite_pfa_0_proc1
// static void setup_open_pwrite_p0_0_final(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal
// static void setup_open_pwrite_p0_0_procfinal(void) {
//   
// }
// ^ See setup_open_pwrite_pfa_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-open_pwrite_pfc_0",
    &setup_open_pwrite_pfc_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfc_1",
    &setup_open_pwrite_pfc_1_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfc_2",
    &setup_open_pwrite_pfc_0_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfc_3",
    &setup_open_pwrite_pfc_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfa_0",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfa_1",
    &setup_open_pwrite_pfa_1_common,
    { { &setup_open_pwrite_pfa_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfa_2",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pfa_3",
    &setup_open_pwrite_pfa_3_common,
    { { &setup_open_pwrite_pfa_3_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_3_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pf8_0",
    &setup_open_pwrite_pf8_0_common,
    { { &setup_open_pwrite_pf8_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pf8_1",
    &setup_open_pwrite_pf8_1_common,
    { { &setup_open_pwrite_pf8_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pf8_2",
    &setup_open_pwrite_pfa_3_common,
    { { &setup_open_pwrite_pfa_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pf8_3",
    &setup_open_pwrite_pf8_1_common,
    { { &setup_open_pwrite_pfa_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pf0_0",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pec_0",
    &setup_open_pwrite_pfc_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pec_1",
    &setup_open_pwrite_pfc_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pec_2",
    &setup_open_pwrite_pfc_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pec_3",
    &setup_open_pwrite_pfc_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pea_0",
    &setup_open_pwrite_pea_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pf8_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pea_1",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pea_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pea_2",
    &setup_open_pwrite_pea_2_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_2_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pea_3",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_2_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pe8_0",
    &setup_open_pwrite_pf8_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pe8_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pe8_1",
    &setup_open_pwrite_pf8_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_2_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pe8_2",
    &setup_open_pwrite_pf8_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_2_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pe8_3",
    &setup_open_pwrite_pe8_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_3_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pe8_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pe0_0",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pfc_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdf0_0",
    &setup_open_pwrite_pdf0_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pdf0_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdf0_1",
    &setup_open_pwrite_pdf0_1_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdf0_2",
    &setup_open_pwrite_pdf0_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdf0_3",
    &setup_open_pwrite_pdf0_3_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdde_0",
    &setup_open_pwrite_pdde_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdde_1",
    &setup_open_pwrite_pdde_1_common,
    { { &setup_open_pwrite_pdde_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdc8_0",
    &setup_open_pwrite_pdc8_0_common,
    { { &setup_open_pwrite_pdc8_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pdc8_1",
    &setup_open_pwrite_pdc8_1_common,
    { { &setup_open_pwrite_pfa_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pda_0",
    &setup_open_pwrite_pe8_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd70_0",
    &setup_open_pwrite_pd70_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd70_1",
    &setup_open_pwrite_pd70_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd70_2",
    &setup_open_pwrite_pdf0_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd70_3",
    &setup_open_pwrite_pd70_3_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd5c_0",
    &setup_open_pwrite_pd5c_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd5c_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfa_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd5c_1",
    &setup_open_pwrite_pd5c_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_3_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfa_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd48_0",
    &setup_open_pwrite_pf8_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd48_1",
    &setup_open_pwrite_pd48_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pd2_0",
    &setup_open_pwrite_pe8_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcf_0",
    &setup_open_pwrite_pcf_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcf_1",
    &setup_open_pwrite_pcf_1_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcf_2",
    &setup_open_pwrite_pcf_0_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcf_3",
    &setup_open_pwrite_pcf_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcdc_0",
    &setup_open_pwrite_pcdc_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcdc_1",
    &setup_open_pwrite_pcdc_1_common,
    { { &setup_open_pwrite_pd48_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcdc_2",
    &setup_open_pwrite_pcdc_2_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pcdc_3",
    &setup_open_pwrite_pcdc_2_common,
    { { &setup_open_pwrite_pd48_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pccc_0",
    &setup_open_pwrite_pccc_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pccc_1",
    &setup_open_pwrite_pccc_1_common,
    { { &setup_open_pwrite_pfa_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pccc_2",
    &setup_open_pwrite_pccc_2_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pccc_3",
    &setup_open_pwrite_pccc_3_common,
    { { &setup_open_pwrite_pccc_3_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pccc_3_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pca_0",
    &setup_open_pwrite_pca_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc7_0",
    &setup_open_pwrite_pc7_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc7_1",
    &setup_open_pwrite_pc7_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc7_2",
    &setup_open_pwrite_pc7_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc7_3",
    &setup_open_pwrite_pc7_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc58_0",
    &setup_open_pwrite_pc58_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc58_1",
    &setup_open_pwrite_pc58_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pdde_1_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc58_2",
    &setup_open_pwrite_pc58_2_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc58_3",
    &setup_open_pwrite_pc58_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pdde_1_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc48_0",
    &setup_open_pwrite_pfa_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_1_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc48_1",
    &setup_open_pwrite_pf8_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc48_2",
    &setup_open_pwrite_pca_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc48_3",
    &setup_open_pwrite_pd48_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pc2_0",
    &setup_open_pwrite_pca_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pbe_0",
    &setup_open_pwrite_pbe_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pbe_1",
    &setup_open_pwrite_pbe_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pbb8_0",
    &setup_open_pwrite_pbb8_0_common,
    { { &setup_open_pwrite_pbb8_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pbb8_1",
    &setup_open_pwrite_pbb8_0_common,
    { { &setup_open_pwrite_pdde_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pb90_0",
    &setup_open_pwrite_pb90_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pb90_1",
    &setup_open_pwrite_pbb8_0_common,
    { { &setup_open_pwrite_pccc_3_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pccc_3_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pb4_0",
    &setup_open_pwrite_pb4_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_procfinal,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_pa4_0",
    &setup_open_pwrite_pb4_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_procfinal,
    { { &test_open_pwrite_pdf0_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p9e_0",
    &setup_open_pwrite_p9e_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p9e_1",
    &setup_open_pwrite_p9e_0_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p9b8_0",
    &setup_open_pwrite_pbb8_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p9b8_1",
    &setup_open_pwrite_pbb8_0_common,
    { { &setup_open_pwrite_pdde_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p990_0",
    &setup_open_pwrite_pb90_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p990_1",
    &setup_open_pwrite_p990_1_common,
    { { &setup_open_pwrite_pfa_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p94_0",
    &setup_open_pwrite_pb4_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_procfinal,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p84_0",
    &setup_open_pwrite_pb4_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_procfinal,
    { { &test_open_pwrite_pcf_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p7e_0",
    &setup_open_pwrite_p7e_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pdf0_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p7e_1",
    &setup_open_pwrite_p7e_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pdf0_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p7e_2",
    &setup_open_pwrite_p7e_2_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p7e_3",
    &setup_open_pwrite_pdf0_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p7bc_0",
    &setup_open_pwrite_p7bc_0_common,
    { { &setup_open_pwrite_p7bc_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pe8_3_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p7bc_1",
    &setup_open_pwrite_p7bc_1_common,
    { { &setup_open_pwrite_pdde_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p790_0",
    &setup_open_pwrite_p790_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p790_1",
    &setup_open_pwrite_p790_1_common,
    { { &setup_open_pwrite_p790_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p74_0",
    &setup_open_pwrite_pe8_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p6e_0",
    &setup_open_pwrite_pd70_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p6e_1",
    &setup_open_pwrite_pd70_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p6e_2",
    &setup_open_pwrite_pdf0_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p6e_3",
    &setup_open_pwrite_pdf0_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pdf0_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p6b8_0",
    &setup_open_pwrite_pd5c_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_p6b8_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p6b8_1",
    &setup_open_pwrite_pd5c_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_3_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p690_0",
    &setup_open_pwrite_pf8_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pea_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p690_1",
    &setup_open_pwrite_pd48_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p64_0",
    &setup_open_pwrite_pe8_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p7e_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5e_0",
    &setup_open_pwrite_pcf_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5e_1",
    &setup_open_pwrite_pcf_1_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5e_2",
    &setup_open_pwrite_pcf_0_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5e_3",
    &setup_open_pwrite_pcf_1_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5b8_0",
    &setup_open_pwrite_p5b8_0_common,
    { { &setup_open_pwrite_pfa_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5b8_1",
    &setup_open_pwrite_p5b8_1_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5b8_2",
    &setup_open_pwrite_p5b8_2_common,
    { { &setup_open_pwrite_pd48_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p5b8_3",
    &setup_open_pwrite_p5b8_3_common,
    { { &setup_open_pwrite_pfa_0_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p598_0",
    &setup_open_pwrite_p598_0_common,
    { { &setup_open_pwrite_pea_1_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p598_1",
    &setup_open_pwrite_p598_1_common,
    { { &setup_open_pwrite_pccc_3_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_1_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pccc_3_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p598_2",
    &setup_open_pwrite_pcdc_2_common,
    { { &setup_open_pwrite_p598_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p598_3",
    &setup_open_pwrite_p598_3_common,
    { { &setup_open_pwrite_p790_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p54_0",
    &setup_open_pwrite_pca_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4e_0",
    &setup_open_pwrite_pc7_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4e_1",
    &setup_open_pwrite_pc7_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4e_2",
    &setup_open_pwrite_pc7_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4e_3",
    &setup_open_pwrite_pc7_1_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_1_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4b0_0",
    &setup_open_pwrite_p4b0_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pdde_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4b0_1",
    &setup_open_pwrite_pe8_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pdc8_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4b0_2",
    &setup_open_pwrite_pfa_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_p4b0_2_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p4b0_3",
    &setup_open_pwrite_p4b0_3_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pccc_3_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pccc_3_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p490_0",
    &setup_open_pwrite_pf8_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p490_1",
    &setup_open_pwrite_pf8_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p490_2",
    &setup_open_pwrite_pd48_1_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_3_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p490_3",
    &setup_open_pwrite_pca_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pd48_1_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pfa_1_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p44_0",
    &setup_open_pwrite_pca_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p5e_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p38_0",
    &setup_open_pwrite_p38_0_common,
    { { &setup_open_pwrite_pfc_0_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p38_1",
    &setup_open_pwrite_p38_0_common,
    { { &setup_open_pwrite_pfc_2_proc0 }, { &setup_open_pwrite_pfc_0_proc1 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p34_0",
    &setup_open_pwrite_p34_0_common,
    { { &setup_open_pwrite_pfa_1_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p34_1",
    &setup_open_pwrite_p34_0_common,
    { { &setup_open_pwrite_pfa_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p30_0",
    &setup_open_pwrite_p30_0_common,
    { { &setup_open_pwrite_pe8_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p30_1",
    &setup_open_pwrite_p30_0_common,
    { { &setup_open_pwrite_pfa_2_proc0 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p2_0",
    &setup_open_pwrite_pb4_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_procfinal,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 0, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p18_0",
    &setup_open_pwrite_p38_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_0_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p18_1",
    &setup_open_pwrite_p38_0_common,
    { { &setup_open_pwrite_pfc_0_proc1 }, { &setup_open_pwrite_pfc_2_proc0 } },
    &setup_open_pwrite_pfc_0_procfinal,
    &setup_open_pwrite_pfc_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfc_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p14_0",
    &setup_open_pwrite_p34_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_p14_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p14_1",
    &setup_open_pwrite_p34_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_2_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p10_0",
    &setup_open_pwrite_p30_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_p10_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p10_1",
    &setup_open_pwrite_p30_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_2_proc0 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_final,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pfa_0_1, 1, "pwrite" } },
    &cleanup },
  { "fs-open_pwrite_p0_0",
    &setup_open_pwrite_pb4_0_common,
    { { &setup_open_pwrite_pfa_0_proc1 }, { &setup_open_pwrite_pfa_0_proc1 } },
    &setup_open_pwrite_pfa_0_procfinal,
    &setup_open_pwrite_pfa_0_procfinal,
    { { &test_open_pwrite_p38_0_0, 0, "open" },
      { &test_open_pwrite_pf0_0_1, 1, "pwrite" } },
    &cleanup },
//+++ common
  {}
};
